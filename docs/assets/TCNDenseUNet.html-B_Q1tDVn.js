import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as s,a as t,o}from"./app-KOUU_Wij.js";const r={},a=t('<h1 id="espnet2-enh-layers-tcndenseunet-tcndenseunet" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-tcndenseunet-tcndenseunet"><span>espnet2.enh.layers.tcndenseunet.TCNDenseUNet</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.tcndenseunet.TCNDenseUNet<span class="small-bracket">(n_spk=1, in_freqs=257, mic_channels=1, hid_chans=32, hid_chans_dense=32, ksz_dense=(3, 3)</span>, ksz_tcn=3, tcn_repeats=4, tcn_blocks=7, tcn_channels=384, activation=&lt;class &#39;torch.nn.modules.activation.ELU&#39;&gt;)</p></div><p>Bases: <code>Module</code></p><p>TCNDenseNet block from iNeuBe</p><p>Reference: Lu, Y. J., Cornell, S., Chang, X., Zhang, W., Li, C., Ni, Z., … &amp; Watanabe, S. Towards Low-Distortion Multi-Channel Speech Enhancement: The ESPNET-Se Submission to the L3DAS22 Challenge. ICASSP 2022 p. 9201-9205.</p><ul><li><strong>Parameters:</strong><ul><li><strong>n_spk</strong> – number of output sources/speakers.</li><li><strong>in_freqs</strong> – number of complex STFT frequencies.</li><li><strong>mic_channels</strong> – number of microphones channels (only fixed-array geometry supported).</li><li><strong>hid_chans</strong> – number of channels in the subsampling/upsampling conv layers.</li><li><strong>hid_chans_dense</strong> – number of channels in the densenet layers (reduce this to reduce VRAM requirements).</li><li><strong>ksz_dense</strong> – kernel size in the densenet layers thorough iNeuBe.</li><li><strong>ksz_tcn</strong> – kernel size in the TCN submodule.</li><li><strong>tcn_repeats</strong> – number of repetitions of blocks in the TCN submodule.</li><li><strong>tcn_blocks</strong> – number of blocks in the TCN submodule.</li><li><strong>tcn_channels</strong> – number of channels in the TCN submodule.</li><li><strong>activation</strong> – activation function to use in the whole iNeuBe model, you can use any torch supported activation e.g. ‘relu’ or ‘elu’.</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(tf_rep)</span></p></div><p>forward.</p><ul><li><strong>Parameters:</strong><strong>tf_rep</strong> (<em>torch.Tensor</em>) – 4D tensor (multi-channel complex STFT of mixture) of shape [B, T, C, F] batch, frames, microphones, frequencies.</li><li><strong>Returns:</strong> complex 3D tensor monaural STFT of the targets : shape is [B, T, F] batch, frames, frequencies.</li><li><strong>Return type:</strong> out (torch.Tensor)</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function l(i,c){return o(),n("div",null,[s(" _espnet2.enh.layers.tcndenseunet.TCNDenseUNet "),a])}const p=e(r,[["render",l],["__file","TCNDenseUNet.html.vue"]]),d=JSON.parse(`{"path":"/guide/espnet2/enh/TCNDenseUNet.html","title":"espnet2.enh.layers.tcndenseunet.TCNDenseUNet","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.92,"words":275},"filePathRelative":"guide/espnet2/enh/TCNDenseUNet.md","excerpt":"<!-- _espnet2.enh.layers.tcndenseunet.TCNDenseUNet -->\\n<h1>espnet2.enh.layers.tcndenseunet.TCNDenseUNet</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.tcndenseunet.TCNDenseUNet<span class=\\"small-bracket\\">(n_spk=1, in_freqs=257, mic_channels=1, hid_chans=32, hid_chans_dense=32, ksz_dense=(3, 3)</span>, ksz_tcn=3, tcn_repeats=4, tcn_blocks=7, tcn_channels=384, activation=&lt;class 'torch.nn.modules.activation.ELU'&gt;)</p></div>"}`);export{p as comp,d as data};

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as i,f as a,b as s,d as e,e as l,w as r,a as m,o as p}from"./app-KOUU_Wij.js";const c={},d=s("h1",{id:"espnet2-enh-loss-criterions-time-domain-sisnrloss",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#espnet2-enh-loss-criterions-time-domain-sisnrloss"},[s("span",null,"espnet2.enh.loss.criterions.time_domain.SISNRLoss")])],-1),_=s("div",{class:"custom-h3"},[s("p",null,[s("em",null,"class"),e(" espnet2.enh.loss.criterions.time_domain.SISNRLoss"),s("span",{class:"small-bracket"},"(clamp_db=None, zero_mean=True, eps=None, name=None, only_for_test=False, is_noise_loss=False, is_dereverb_loss=False)")])],-1),h=s("code",null,"TimeDomainLoss",-1),u=m('<p>SI-SNR (or named SI-SDR) loss</p><p>A more stable SI-SNR loss with clamp from fast_bss_eval.</p><div class="custom-h4"><p>clamp_db</p></div><p>float clamp the output value in [-clamp_db, clamp_db]</p><div class="custom-h4"><p>zero_mean</p></div><p>bool When set to True, the mean of all signals is subtracted prior.</p><div class="custom-h4"><p>eps</p></div><p>float Deprecated. Kept for compatibility.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(ref: Tensor, est: Tensor)</span></p></div><p>SI-SNR forward.</p><ul><li><strong>Parameters:</strong><ul><li><strong>ref</strong> – Tensor, (…, n_samples) reference signal</li><li><strong>est</strong> – Tensor (…, n_samples) estimated signal</li></ul></li><li><strong>Returns:</strong> (…,) : the SI-SDR loss (negative si-sdr)</li><li><strong>Return type:</strong> loss</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function S(N,f){const o=n("RouteLink");return p(),i("div",null,[a(" _espnet2.enh.loss.criterions.time_domain.SISNRLoss "),d,_,s("p",null,[e("Bases: "),l(o,{to:"/guide/espnet2/enh/TimeDomainLoss.html#espnet2.enh.loss.criterions.time_domain.TimeDomainLoss"},{default:r(()=>[h]),_:1})]),u])}const g=t(c,[["render",S],["__file","SISNRLoss.html.vue"]]),R=JSON.parse('{"path":"/guide/espnet2/enh/SISNRLoss.html","title":"espnet2.enh.loss.criterions.time_domain.SISNRLoss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.55,"words":166},"filePathRelative":"guide/espnet2/enh/SISNRLoss.md","excerpt":"<!-- _espnet2.enh.loss.criterions.time_domain.SISNRLoss -->\\n<h1>espnet2.enh.loss.criterions.time_domain.SISNRLoss</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.loss.criterions.time_domain.SISNRLoss<span class=\\"small-bracket\\">(clamp_db=None, zero_mean=True, eps=None, name=None, only_for_test=False, is_noise_loss=False, is_dereverb_loss=False)</span></p></div>"}');export{g as comp,R as data};

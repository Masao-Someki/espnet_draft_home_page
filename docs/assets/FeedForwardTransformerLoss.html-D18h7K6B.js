import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a as r,o}from"./app-KOUU_Wij.js";const a={},n=r('<h1 id="espnet-nets-pytorch-backend-e2e-tts-fastspeech-feedforwardtransformerloss" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-e2e-tts-fastspeech-feedforwardtransformerloss"><span>espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss<span class="small-bracket">(use_masking=True, use_weighted_masking=False)</span></p></div><p>Bases: <code>Module</code></p><p>Loss function module for feed-forward Transformer.</p><p>Initialize feed-forward Transformer loss module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>use_masking</strong> (<em>bool</em>) – Whether to apply masking for padded part in loss calculation.</li><li><strong>use_weighted_masking</strong> (<em>bool</em>) – Whether to weighted masking in loss calculation.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(after_outs, before_outs, d_outs, ys, ds, ilens, olens)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>after_outs</strong> (<em>Tensor</em>) – Batch of outputs after postnets (B, Lmax, odim).</li><li><strong>before_outs</strong> (<em>Tensor</em>) – Batch of outputs before postnets (B, Lmax, odim).</li><li><strong>d_outs</strong> (<em>Tensor</em>) – Batch of outputs of duration predictor (B, Tmax).</li><li><strong>ys</strong> (<em>Tensor</em>) – Batch of target features (B, Lmax, odim).</li><li><strong>ds</strong> (<em>Tensor</em>) – Batch of durations (B, Tmax).</li><li><strong>ilens</strong> (<em>LongTensor</em>) – Batch of the lengths of each input (B,).</li><li><strong>olens</strong> (<em>LongTensor</em>) – Batch of the lengths of each target (B,).</li></ul></li><li><strong>Returns:</strong> L1 loss value. Tensor: Duration predictor loss value.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function l(d,i){return o(),s("div",null,[t(" _espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss "),n])}const p=e(a,[["render",l],["__file","FeedForwardTransformerLoss.html.vue"]]),f=JSON.parse('{"path":"/guide/espnet/nets/FeedForwardTransformerLoss.html","title":"espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.6,"words":179},"filePathRelative":"guide/espnet/nets/FeedForwardTransformerLoss.md","excerpt":"<!-- _espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss -->\\n<h1>espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.e2e_tts_fastspeech.FeedForwardTransformerLoss<span class=\\"small-bracket\\">(use_masking=True, use_weighted_masking=False)</span></p></div>"}');export{p as comp,f as data};

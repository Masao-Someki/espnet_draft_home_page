import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as o,f as i,b as e,d as t,e as s,w as l,o as _}from"./app-KOUU_Wij.js";const p={},d=e("h1",{id:"espnet2-train-gan-trainer-gantraineroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-train-gan-trainer-gantraineroptions"},[e("span",null,"espnet2.train.gan_trainer.GANTrainerOptions")])],-1),c=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.train.gan_trainer.GANTrainerOptions"),e("span",{class:"small-bracket"},"(ngpu: int, resume: bool, use_amp: bool, train_dtype: str, grad_noise: bool, accum_grad: int, grad_clip: float, grad_clip_type: float, log_interval: int | None, no_forward_run: bool, use_matplotlib: bool, use_tensorboard: bool, use_wandb: bool, adapter: str, use_adapter: bool, save_strategy: str, output_dir: Path | str, max_epoch: int, seed: int, sharded_ddp: bool, patience: int | None, keep_nbest_models: int | List[int], nbest_averaging_interval: int, early_stopping_criterion: Sequence[str], best_model_criterion: Sequence[Sequence[str]], val_scheduler_criterion: Sequence[str], unused_parameters: bool, wandb_model_log_interval: int, create_graph_in_tensorboard: bool, generator_first: bool)")])],-1),u=e("code",null,"TrainerOptions",-1),m=e("p",null,"Trainer option dataclass for GANTrainer.",-1),b=e("div",{class:"custom-h4"},[e("p",null,[t("generator_first "),e("em",null,": bool")])],-1);function g(h,f){const n=a("RouteLink");return _(),o("div",null,[i(" _espnet2.train.gan_trainer.GANTrainerOptions "),d,c,e("p",null,[t("Bases: "),s(n,{to:"/guide/espnet2/train/TrainerOptions.html#espnet2.train.trainer.TrainerOptions"},{default:l(()=>[u]),_:1})]),m,b])}const T=r(p,[["render",g],["__file","GANTrainerOptions.html.vue"]]),O=JSON.parse('{"path":"/guide/espnet2/train/GANTrainerOptions.html","title":"espnet2.train.gan_trainer.GANTrainerOptions","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.36,"words":107},"filePathRelative":"guide/espnet2/train/GANTrainerOptions.md","excerpt":"<!-- _espnet2.train.gan_trainer.GANTrainerOptions -->\\n<h1>espnet2.train.gan_trainer.GANTrainerOptions</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.gan_trainer.GANTrainerOptions<span class=\\"small-bracket\\">(ngpu: int, resume: bool, use_amp: bool, train_dtype: str, grad_noise: bool, accum_grad: int, grad_clip: float, grad_clip_type: float, log_interval: int | None, no_forward_run: bool, use_matplotlib: bool, use_tensorboard: bool, use_wandb: bool, adapter: str, use_adapter: bool, save_strategy: str, output_dir: Path | str, max_epoch: int, seed: int, sharded_ddp: bool, patience: int | None, keep_nbest_models: int | List[int], nbest_averaging_interval: int, early_stopping_criterion: Sequence[str], best_model_criterion: Sequence[Sequence[str]], val_scheduler_criterion: Sequence[str], unused_parameters: bool, wandb_model_log_interval: int, create_graph_in_tensorboard: bool, generator_first: bool)</span></p></div>"}');export{T as comp,O as data};

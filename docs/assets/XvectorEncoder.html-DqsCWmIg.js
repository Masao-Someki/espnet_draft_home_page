import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as r,f as c,b as e,d as t,e as i,w as d,a,o as l}from"./app-KOUU_Wij.js";const p={},u=e("h1",{id:"espnet2-spk-encoder-xvector-encoder-xvectorencoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-spk-encoder-xvector-encoder-xvectorencoder"},[e("span",null,"espnet2.spk.encoder.xvector_encoder.XvectorEncoder")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.spk.encoder.xvector_encoder.XvectorEncoder"),e("span",{class:"small-bracket"},"(input_size: int, ndim: int = 512, output_size: int = 1500, kernel_sizes: List = [5, 3, 3, 1, 1], paddings: List = [2, 1, 1, 0, 0], dilations: List = [1, 2, 3, 1, 1], **kwargs)")])],-1),h=e("code",null,"AbsEncoder",-1),_=a('<p>X-vector encoder. Extracts frame-level x-vector embeddings from features.</p><p>Paper: D. Snyder et al., “X-vectors: Robust dnn embeddings for speaker recognition,” in Proc. IEEE ICASSP, 2018.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_size</strong> – input feature dimension.</li><li><strong>ndim</strong> – dimensionality of the hidden representation.</li><li><strong>output_size</strong> – ouptut embedding dimension.</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function v(f,g){const n=o("RouteLink");return l(),r("div",null,[c(" _espnet2.spk.encoder.xvector_encoder.XvectorEncoder "),u,m,e("p",null,[t("Bases: "),i(n,{to:"/guide/espnet2/asr/AbsEncoder.html#espnet2.asr.encoder.abs_encoder.AbsEncoder"},{default:d(()=>[h]),_:1})]),_])}const x=s(p,[["render",v],["__file","XvectorEncoder.html.vue"]]),E=JSON.parse('{"path":"/guide/espnet2/spk/XvectorEncoder.html","title":"espnet2.spk.encoder.xvector_encoder.XvectorEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.64,"words":192},"filePathRelative":"guide/espnet2/spk/XvectorEncoder.md","excerpt":"<!-- _espnet2.spk.encoder.xvector_encoder.XvectorEncoder -->\\n<h1>espnet2.spk.encoder.xvector_encoder.XvectorEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.encoder.xvector_encoder.XvectorEncoder<span class=\\"small-bracket\\">(input_size: int, ndim: int = 512, output_size: int = 1500, kernel_sizes: List = [5, 3, 3, 1, 1], paddings: List = [2, 1, 1, 0, 0], dilations: List = [1, 2, 3, 1, 1], **kwargs)</span></p></div>"}');export{x as comp,E as data};

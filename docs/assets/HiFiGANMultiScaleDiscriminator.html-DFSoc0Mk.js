import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as a,a as s,o as n}from"./app-KOUU_Wij.js";const t={},o=s('<h1 id="espnet2-gan-tts-hifigan-hifigan-hifiganmultiscalediscriminator" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-hifigan-hifigan-hifiganmultiscalediscriminator"><span>espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator<span class="small-bracket">(scales: int = 3, downsample_pooling: str = &#39;AvgPool1d&#39;, downsample_pooling_params: Dict[str, Any] = {&#39;kernel_size&#39;: 4, &#39;padding&#39;: 2, &#39;stride&#39;: 2}, discriminator_params: Dict[str, Any] = {&#39;bias&#39;: True, &#39;channels&#39;: 128, &#39;downsample_scales&#39;: [2, 2, 4, 4, 1], &#39;in_channels&#39;: 1, &#39;kernel_sizes&#39;: [15, 41, 5, 3], &#39;max_downsample_channels&#39;: 1024, &#39;max_groups&#39;: 16, &#39;nonlinear_activation&#39;: &#39;LeakyReLU&#39;, &#39;nonlinear_activation_params&#39;: {&#39;negative_slope&#39;: 0.1}, &#39;out_channels&#39;: 1}, follow_official_norm: bool = False)</span></p></div><p>Bases: <code>Module</code></p><p>HiFi-GAN multi-scale discriminator module.</p><p>Initilize HiFiGAN multi-scale discriminator module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>scales</strong> (<em>int</em>) – Number of multi-scales.</li><li><strong>downsample_pooling</strong> (<em>str</em>) – Pooling module name for downsampling of the inputs.</li><li><strong>downsample_pooling_params</strong> (<em>Dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – Parameters for the above pooling module.</li><li><strong>discriminator_params</strong> (<em>Dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – Parameters for hifi-gan scale discriminator module.</li><li><strong>follow_official_norm</strong> (<em>bool</em>) – Whether to follow the norm setting of the official implementaion. The first discriminator uses spectral norm and the other discriminators use weight norm.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>Tensor</em>) – Input noise signal (B, 1, T).</li><li><strong>Returns:</strong> List of list of each discriminator outputs, : which consists of eachlayer output tensors.</li><li><strong>Return type:</strong> List[List[torch.Tensor]]</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function l(r,m){return n(),e("div",null,[a(" _espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator "),o])}const g=i(t,[["render",l],["__file","HiFiGANMultiScaleDiscriminator.html.vue"]]),d=JSON.parse(`{"path":"/guide/espnet2/gan_tts/HiFiGANMultiScaleDiscriminator.html","title":"espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.68,"words":204},"filePathRelative":"guide/espnet2/gan_tts/HiFiGANMultiScaleDiscriminator.md","excerpt":"<!-- _espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator -->\\n<h1>espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.hifigan.hifigan.HiFiGANMultiScaleDiscriminator<span class=\\"small-bracket\\">(scales: int = 3, downsample_pooling: str = 'AvgPool1d', downsample_pooling_params: Dict[str, Any] = {'kernel_size': 4, 'padding': 2, 'stride': 2}, discriminator_params: Dict[str, Any] = {'bias': True, 'channels': 128, 'downsample_scales': [2, 2, 4, 4, 1], 'in_channels': 1, 'kernel_sizes': [15, 41, 5, 3], 'max_downsample_channels': 1024, 'max_groups': 16, 'nonlinear_activation': 'LeakyReLU', 'nonlinear_activation_params': {'negative_slope': 0.1}, 'out_channels': 1}, follow_official_norm: bool = False)</span></p></div>"}`);export{g as comp,d as data};

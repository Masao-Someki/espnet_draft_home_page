import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as t,a as n,o as s}from"./app-KOUU_Wij.js";const o={},l=n('<h1 id="espnet2-asr-layers-cgmlp-convolutionalgatingmlp" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-layers-cgmlp-convolutionalgatingmlp"><span>espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP<span class="small-bracket">(size: int, linear_units: int, kernel_size: int, dropout_rate: float, use_linear_after_conv: bool, gate_activation: str)</span></p></div><p>Bases: <code>Module</code></p><p>Convolutional Gating MLP (cgMLP).</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x, mask)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function i(r,c){return s(),a("div",null,[t(" _espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP "),l])}const m=e(o,[["render",i],["__file","ConvolutionalGatingMLP.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/asr/ConvolutionalGatingMLP.html","title":"espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":126},"filePathRelative":"guide/espnet2/asr/ConvolutionalGatingMLP.md","excerpt":"<!-- _espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP -->\\n<h1>espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.layers.cgmlp.ConvolutionalGatingMLP<span class=\\"small-bracket\\">(size: int, linear_units: int, kernel_size: int, dropout_rate: float, use_linear_after_conv: bool, gate_activation: str)</span></p></div>"}');export{m as comp,u as data};

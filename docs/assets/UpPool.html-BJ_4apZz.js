import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as p,b as e,d as t,e as n,w as l,a as r,o as i}from"./app-KOUU_Wij.js";const c={},d=e("p",null,"<!-- _espnet2.asr.state_spaces.pool.UpPool -->",-1),u=e("h1",{id:"espnet2-asr-state-spaces-pool-uppool",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-state-spaces-pool-uppool"},[e("span",null,"espnet2.asr.state_spaces.pool.UpPool")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr.state_spaces.pool.UpPool"),e("span",{class:"small-bracket"},"(d_input, d_output, stride, transposed=True, weight_norm=True, initializer=None, activation=None)")])],-1),h=e("code",null,"SequenceModule",-1),_=r('<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>property</em> d_output</p></div><p>Output dimension of model.</p><p>This attribute is required for all SequenceModule instantiations. It is used by the rest of the pipeline (e.g. model backbone, decoder) to track the internal shapes of the full model.</p><div class="custom-h4"><p>default_state<span class="small-bracket">(*batch_shape, device=None)</span></p></div><p>Create initial state for a batch of inputs.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x, skip=None)</span></p></div><p>Forward pass.</p><p>A sequence-to-sequence transformation with an optional state.</p><p>Generally, this should map a tensor of shape (batch, length, self.d_model) to (batch, length, self.d_output)</p><p>Additionally, it returns a “state” which can be any additional information For example, RNN and SSM layers may return their hidden state, while some types of transformer layers (e.g. Transformer-XL) may want to pass a state as well</p><div class="custom-h4"><p>step<span class="small-bracket">(x, state, **kwargs)</span></p></div><p>Step one time step as a recurrent model.</p><p>x: (…, H)</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',15);function f(b,v){const s=o("RouteLink");return i(),p("div",null,[d,u,m,e("p",null,[t("Bases: "),n(s,{to:"/guide/espnet2/asr/SequenceModule.html#espnet2.asr.state_spaces.base.SequenceModule"},{default:l(()=>[h]),_:1})]),_])}const w=a(c,[["render",f],["__file","UpPool.html.vue"]]),N=JSON.parse('{"path":"/guide/espnet2/asr/UpPool.html","title":"espnet2.asr.state_spaces.pool.UpPool","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.77,"words":232},"filePathRelative":"guide/espnet2/asr/UpPool.md","excerpt":"<p>&lt;!-- _espnet2.asr.state_spaces.pool.UpPool --&gt;</p>\\n<h1>espnet2.asr.state_spaces.pool.UpPool</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.state_spaces.pool.UpPool<span class=\\"small-bracket\\">(d_input, d_output, stride, transposed=True, weight_norm=True, initializer=None, activation=None)</span></p></div>"}');export{w as comp,N as data};

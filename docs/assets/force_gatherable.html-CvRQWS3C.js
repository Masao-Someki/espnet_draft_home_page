import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as a,a as r,o as c}from"./app-KOUU_Wij.js";const s={},n=r('<h1 id="espnet2-torch-utils-device-funcs-force-gatherable" tabindex="-1"><a class="header-anchor" href="#espnet2-torch-utils-device-funcs-force-gatherable"><span>espnet2.torch_utils.device_funcs.force_gatherable</span></a></h1><div class="custom-h3"><p>espnet2.torch_utils.device_funcs.force_gatherable<span class="small-bracket">(data, device)</span></p></div><p>Change object to gatherable in torch.nn.DataParallel recursively</p><p>The difference from to_device() is changing to torch.Tensor if float or int value is found.</p><p>The restriction to the returned value in DataParallel: : The object must be</p><ul><li>torch.cuda.Tensor</li><li>1 or more dimension. 0-dimension-tensor sends warning. or a list, tuple, dict.</li></ul>',6);function o(l,i){return c(),t("div",null,[a(" _espnet2.torch_utils.device_funcs.force_gatherable "),n])}const u=e(s,[["render",o],["__file","force_gatherable.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/torch_utils/force_gatherable.html","title":"espnet2.torch_utils.device_funcs.force_gatherable","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.22,"words":66},"filePathRelative":"guide/espnet2/torch_utils/force_gatherable.md","excerpt":"<!-- _espnet2.torch_utils.device_funcs.force_gatherable -->\\n<h1>espnet2.torch_utils.device_funcs.force_gatherable</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.torch_utils.device_funcs.force_gatherable<span class=\\"small-bracket\\">(data, device)</span></p></div>\\n<p>Change object to gatherable in torch.nn.DataParallel recursively</p>"}');export{u as comp,_ as data};

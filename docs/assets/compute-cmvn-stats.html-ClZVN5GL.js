import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as n}from"./app-KOUU_Wij.js";const i={},t=n(`<p>&lt;!-- _compute-cmvn-stats.py --&gt;</p><h1 id="compute-cmvn-stats-py" tabindex="-1"><a class="header-anchor" href="#compute-cmvn-stats-py"><span>compute-cmvn-stats.py</span></a></h1><p>Compute cepstral mean and variance normalization statisticsIf wspecifier provided: per-utterance by default, or per-speaker ifspk2utt option provided; if wxfilename: global</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>usage: compute-cmvn-stats.py [-h] [--spk2utt SPK2UTT]</span></span>
<span class="line"><span>                             [--verbose VERBOSE]</span></span>
<span class="line"><span>                             [--in-filetype {mat,hdf5,sound.hdf5,sound}]</span></span>
<span class="line"><span>                             [--out-filetype {mat,hdf5,npy}]</span></span>
<span class="line"><span>                             [--preprocess-conf PREPROCESS_CONF]</span></span>
<span class="line"><span>                             rspecifier wspecifier_or_wxfilename</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="positional-arguments" tabindex="-1"><a class="header-anchor" href="#positional-arguments"><span>Positional Arguments</span></a></h2><h2 id="named-arguments" tabindex="-1"><a class="header-anchor" href="#named-arguments"><span>Named Arguments</span></a></h2>`,6),p=[t];function l(r,c){return a(),s("div",null,p)}const m=e(i,[["render",l],["__file","compute-cmvn-stats.html.vue"]]),u=JSON.parse('{"path":"/tools/utils_py/compute-cmvn-stats.html","title":"compute-cmvn-stats.py","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Positional Arguments","slug":"positional-arguments","link":"#positional-arguments","children":[]},{"level":2,"title":"Named Arguments","slug":"named-arguments","link":"#named-arguments","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.2,"words":60},"filePathRelative":"tools/utils_py/compute-cmvn-stats.md","excerpt":"<p>&lt;!-- _compute-cmvn-stats.py --&gt;</p>\\n<h1>compute-cmvn-stats.py</h1>\\n<p>Compute cepstral mean and variance normalization statisticsIf wspecifier provided: per-utterance by default, or per-speaker ifspk2utt option provided; if wxfilename: global</p>\\n<div class=\\"language-text line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"text\\" data-title=\\"text\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>usage: compute-cmvn-stats.py [-h] [--spk2utt SPK2UTT]</span></span>\\n<span class=\\"line\\"><span>                             [--verbose VERBOSE]</span></span>\\n<span class=\\"line\\"><span>                             [--in-filetype {mat,hdf5,sound.hdf5,sound}]</span></span>\\n<span class=\\"line\\"><span>                             [--out-filetype {mat,hdf5,npy}]</span></span>\\n<span class=\\"line\\"><span>                             [--preprocess-conf PREPROCESS_CONF]</span></span>\\n<span class=\\"line\\"><span>                             rspecifier wspecifier_or_wxfilename</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{m as comp,u as data};

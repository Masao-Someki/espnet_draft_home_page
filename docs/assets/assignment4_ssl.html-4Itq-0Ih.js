import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,a as s,o as n}from"./app-KOUU_Wij.js";const t={},l=s(`<h1 id="cmu-11751-18781-fall-2022-espnet-tutorial" tabindex="-1"><a class="header-anchor" href="#cmu-11751-18781-fall-2022-espnet-tutorial"><span>CMU 11751/18781 Fall 2022: ESPnet Tutorial</span></a></h1><p><a href="https://github.com/espnet/espnet" target="_blank" rel="noopener noreferrer">ESPnet</a> is a widely-used end-to-end speech processing toolkit. It has supported various speech processing tasks. ESPnet uses PyTorch as a main deep learning engine, and also follows Kaldi style data processing, feature extraction/format, and recipes to provide a complete setup for speech recognition and other speech processing experiments.</p><p>Main references:</p><ul><li><a href="https://github.com/espnet/espnet" target="_blank" rel="noopener noreferrer">ESPnet repository</a></li><li><a href="https://espnet.github.io/espnet/" target="_blank" rel="noopener noreferrer">ESPnet documentation</a></li><li><a href="https://colab.research.google.com/github/espnet/notebook/blob/master/espnet2_tutorial_2021_CMU_11751_18781.ipynb" target="_blank" rel="noopener noreferrer">ESPnet tutorial in Speech Recognition and Understanding (Fall 2021)</a></li><li><a href="https://colab.research.google.com/drive/1tY6PxF_M5Nx5n488x0DrpujJOyqW-ATi?usp=sharing" target="_blank" rel="noopener noreferrer">Recitation in Multilingual NLP (Spring 2022)</a></li></ul><p>Author: Siddhant Arora (siddhana@andrew.cmu.edu) This notebook was modified from the material made by Yifan Peng (yifanpen@andrew.cmu.edu)</p><h2 id="‚ùóimportant-notes‚ùó" tabindex="-1"><a class="header-anchor" href="#‚ùóimportant-notes‚ùó"><span>‚ùóImportant Notes‚ùó</span></a></h2><ul><li>We are using Colab to show the demo. However, Colab has some constraints on the total GPU runtime. If you use too much GPU, you may fail to connect to a GPU backend for some time.</li><li>There are multiple in-class checkpoints ‚úÖ throughout this tutorial. There will also be some after-class excersices üìó after the tutorial. <strong>Your participation points are based on these tasks.</strong> Please try your best to follow all the steps! If you encounter issues, please notify the TAs as soon as possible so that we can make an adjustment for you.</li><li>Please submit PDF files of your completed notebooks to Gradescope. You can print the notebook using <code>File -&gt; Print</code> in the menu bar.</li><li>This tutorial covers the basics of ESPnet, which will be the foundation of the next tutorial on Wednesday.</li></ul><h2 id="objectives" tabindex="-1"><a class="header-anchor" href="#objectives"><span>Objectives</span></a></h2><p>After this tutorial, you are expected to know:</p><ul><li>How to run existing recipes (data prep, training, inference and scoring) in ESPnet2</li><li>How to change the training and decoding configurations</li><li>How to create a new recipe from scratch</li><li>Where to find resources if you encounter an issue</li></ul><h2 id="useful-links" tabindex="-1"><a class="header-anchor" href="#useful-links"><span>Useful links</span></a></h2><ul><li>Installation https://espnet.github.io/espnet/installation.html</li><li>Usage https://espnet.github.io/espnet/espnet2_tutorial.html</li></ul><h1 id="install-espnet" tabindex="-1"><a class="header-anchor" href="#install-espnet"><span>Install ESPnet</span></a></h1><ul><li><p>This is a full installation method to perform data preprocessing, training, inference, scoring, and so on.</p></li><li><p>We prepare various ways of installation. Please read https://espnet.github.io/espnet/installation.html#step-2-installation-espnet for more details.</p></li></ul><h2 id="function-to-print-date-and-time" tabindex="-1"><a class="header-anchor" href="#function-to-print-date-and-time"><span>Function to print date and time</span></a></h2><p>We first define a function to print the current date and time, which will be used in multiple places below.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> print_date_and_time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  from</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> datetime </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> datetime</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> pytz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  now </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> datetime.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(pytz.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">timezone</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;America/New_York&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39; Current date and time: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">now.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">strftime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;%m/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/%Y %H:%M:%S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;=&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># example output</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">print_date_and_time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="check-gpu-type" tabindex="-1"><a class="header-anchor" href="#check-gpu-type"><span>Check GPU type</span></a></h2><p>Let&#39;s check the GPU type of this allocated environment.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">nvidia</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">smi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="download-espnet" tabindex="-1"><a class="header-anchor" href="#download-espnet"><span>Download ESPnet</span></a></h2><p>We use <code>git clone</code> to download the source code of ESPnet and then go to a specific commit.</p><p><strong>Important:</strong> In other versions of ESPnet, you may encounter errors related to imcompatible package versions (<code>numba</code>). Please use the same commit to avoid such issues.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># It takes a few seconds</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">git clone </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">depth </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setup-python-environment-based-on-anaconda" tabindex="-1"><a class="header-anchor" href="#setup-python-environment-based-on-anaconda"><span>Setup Python environment based on anaconda</span></a></h2><p>There are several other installation methods, but <strong>we highly recommend the anaconda-based one</strong>.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># It takes 30 seconds</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">tools</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">setup_anaconda.sh anaconda espnet </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3.9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="install-espnet-same-procedure-as-your-first-tutorial" tabindex="-1"><a class="header-anchor" href="#install-espnet-same-procedure-as-your-first-tutorial"><span>Install ESPnet (same procedure as your first tutorial)</span></a></h2><p>This step installs PyTorch and other required tools.</p><p>We specify <code>CUDA_VERSION=11.6</code> for PyTorch 1.12.1. We also support many other versions. Please check https://github.com/espnet/espnet/blob/master/tools/installers/install_torch.sh for the detailed version list.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># It may take 12 minutes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">tools</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">make </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">TH_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1.12</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.1 </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">CUDA_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">11.6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If other listed packages are necessary, install any of them using</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>. ./activation_python.sh &amp;&amp; ./installers/install_xxx.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>We show two examples, although they are not used in this demo.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># s3prl and fairseq are necessary if you want to use self-supervised pre-trained models</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># It takes 50s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">tools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!. .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">activate_python.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">installers</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">install_s3prl.sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!. .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">activate_python.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">installers</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">install_fairseq.sh    </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># install s3prl to use Wav2Vec2 / HuBERT model series</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="run-an-existing-recipe" tabindex="-1"><a class="header-anchor" href="#run-an-existing-recipe"><span>Run an existing recipe</span></a></h1><p>ESPnet has a number of recipes (130 recipes on Sep. 11, 2022). Please refer to https://github.com/espnet/espnet/blob/master/egs2/README.md for a complete list.</p><p>Please also check the general usage of the recipe in https://espnet.github.io/espnet/espnet2_tutorial.html#recipes-using-espnet2</p><p><strong>CMU AN4 recipe</strong></p><p>In this tutorial, we will use the CMU <code>an4</code> recipe. This is a small-scale speech recognition task mainly used for testing.</p><p>First, let&#39;s go to the recipe directory.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">egs2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">an4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr1</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ls</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>egs2/an4/asr1/</span></span>
<span class="line"><span> - conf/      # Configuration files for training, inference, etc.</span></span>
<span class="line"><span> - scripts/   # Bash utilities of espnet2</span></span>
<span class="line"><span> - pyscripts/ # Python utilities of espnet2</span></span>
<span class="line"><span> - steps/     # From Kaldi utilities</span></span>
<span class="line"><span> - utils/     # From Kaldi utilities</span></span>
<span class="line"><span> - db.sh      # The directory path of each corpora</span></span>
<span class="line"><span> - path.sh    # Setup script for environment variables</span></span>
<span class="line"><span> - cmd.sh     # Configuration for your backend of job scheduler</span></span>
<span class="line"><span> - run.sh     # Entry point</span></span>
<span class="line"><span> - asr.sh     # Invoked by run.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>‚≠ï <strong>[SSL] Get the <code>dump_hubert_feature.sh</code> script and the <code>training config</code> ready.</strong></p><ul><li>GitHub: https://github.com/simpleoier/ESPnet_SSL_ASR_tutorial_misc.git)</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r ESPnet_SSL_ASR_tutorial_misc</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">git clone https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">simpleoier</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ESPnet_SSL_ASR_tutorial_misc.git</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ESPnet_SSL_ASR_tutorial_misc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dump_ssl_feature.sh .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">local</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ESPnet_SSL_ASR_tutorial_misc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dump_feats.py .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">local</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ESPnet_SSL_ASR_tutorial_misc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats_loaders.py .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">local</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">chmod </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">x local</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dump_ssl_feature.sh</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ESPnet_SSL_ASR_tutorial_misc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_asr_demo_branchformer.yaml .</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ESPnet is designed for various use cases (local machines or cluster machines) based on Kaldi tools. If you use it in the cluster machines, please also check https://kaldi-asr.org/doc/queue.html</p><p>The main stages can be parallelized by various jobs.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cat run.sh</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ls conf</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ls local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>run.sh</code> calls <code>asr.sh</code>, which completes the entire speech recognition experiments, including data preparation, training, inference, and scoring. They are separated into multiple stages (totally 16).</p><p>Instead of executing the entire pipeline by <code>run.sh</code>, let&#39;s run it stage-by-stage to understand the process in each stage.</p><h2 id="data-preparation" tabindex="-1"><a class="header-anchor" href="#data-preparation"><span>Data preparation</span></a></h2><p><strong>Stage 1: Data preparation: download raw data, split the entire set into train/dev/test, and prepare them in the Kaldi format</strong></p><p>Note that <code>--stage &amp;lt;N&amp;gt;</code> is to start from this stage and <code>--stop_stage &amp;lt;N&amp;gt;</code> is to stop after this stage. We also need to specify the train, dev and test sets.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># a few seconds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>After this stage is finished, please check the newly created <code>data</code> directory:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ls data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>In this recipe, we use <code>train_nodev</code> as a training set, <code>train_dev</code> as a validation set (monitor the training progress by checking the validation score). We also use <code>test</code> and <code>train_dev</code> sets for the final speech recognition evaluation.</p><p>Let&#39;s check one of the training data directories:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_nodev</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>These are the speech and corresponding text and speaker information in the Kaldi format. To understand their meanings, please check https://github.com/espnet/espnet/tree/master/egs2/TEMPLATE#about-kaldi-style-data-directory.</p><p>Please also check the official documentation of Kaldi: https://kaldi-asr.org/doc/data_prep.html</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>spk2utt # Speaker information</span></span>
<span class="line"><span>text    # Transcription file</span></span>
<span class="line"><span>utt2spk # Speaker information</span></span>
<span class="line"><span>wav.scp # Audio file</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Stage 2: Speed perturbation</strong> (one of the data augmentation methods)</p><p>We do not use speed perturbation for this demo. But you can turn it on by adding an argument <code>--speed_perturb_factors &quot;0.9 1.0 1.1&quot;</code> to the shell script.</p><p>Note that we perform speed perturbation and save the augmented data in the disk before training. Another approach is to perform data augmentation during training, such as SpecAug.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Stage 3: Format wav.scp: data/ -&gt; dump/raw</strong></p><p>We dump the data with specified format (flac in this case) for the efficient use of the data.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># ====== Recreating &quot;wav.scp&quot; ======</span></span>
<span class="line"><span># Kaldi-wav.scp, which can describe the file path with unix-pipe, like &quot;cat /some/path |&quot;,</span></span>
<span class="line"><span># shouldn&#39;t be used in training process.</span></span>
<span class="line"><span># &quot;format_wav_scp.sh&quot; dumps such pipe-style-wav to real audio file</span></span>
<span class="line"><span># and it can also change the audio-format and sampling rate.</span></span>
<span class="line"><span># If nothing is need, then format_wav_scp.sh does nothing:</span></span>
<span class="line"><span># i.e. the input file format and rate is same as the output.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that <code>--nj &amp;lt;N&amp;gt;</code> means the number of CPU jobs. Please set it appropriately by considering your CPU resources and disk access.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 25 seconds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">nj </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="‚≠ï-ssl-stage-3-5-extract-ssl-features" tabindex="-1"><a class="header-anchor" href="#‚≠ï-ssl-stage-3-5-extract-ssl-features"><span>‚≠ï [SSL] Stage 3.5: Extract SSL features</span></a></h4><p>We dump the SSL features of the data with specified format (kaldi mat in this case) for the efficient use of the data.</p><ul><li><p>First, we need to prepare the pretrained SSL models. In this colab, we use HuBERT models. We have three choices:</p><ol><li>HuBERT through FairSeq API; Model choices can be found from <a href="https://github.com/facebookresearch/fairseq/tree/main/examples/hubert#pre-trained-and-fine-tuned-asr-models" target="_blank" rel="noopener noreferrer">fairseq/hubert pretrained models</a><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Example usage: </span></span>
<span class="line"><span>mkdir -p downloads/hubert_pretrained_models</span></span>
<span class="line"><span>wget https://dl.fbaipublicfiles.com/hubert/hubert_large_ll60k.pt -O ./downloads/hubert_pretrained_models/hubert_large_ll60k.pt</span></span>
<span class="line"><span>Append the following arguments: </span></span>
<span class="line"><span>  --feature_type hubert --hubert_type fairseq --hubert_url &quot;https://dl.fbaipublicfiles.com/hubert/hubert_large_ll60k.pt&quot; --hubert_dir_path &quot;./downloads/hubert_pretrained_models&quot; --layer 23</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>HuBERT from ESPnet;<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Example usage:</span></span>
<span class="line"><span># Download model</span></span>
<span class="line"><span>./asr.sh --skip_data_prep true --skip_train true --skip_eval true --skip_upload true --download_model simpleoier/simpleoier_librispeech_hubert_iter1_train_ssl_torchaudiohubert_base_960h_pretrain_it1_raw --train_set train_nodev --valid_set train_dev --test_sets &quot;train_dev test&quot;</span></span>
<span class="line"><span>Append the following arguments:</span></span>
<span class="line"><span>  --feature_type hubert --hubert_type espnet --hubert_dir_path &quot;/content/espnet/tools/anaconda/envs/espnet/lib/python3.9/site-packages/espnet_model_zoo/models--simpleoier--simpleoier_librispeech_hubert_iter1_train_ssl_torchaudiohubert_base_960h_pretrain_it1_raw/snapshots/4256c702685249202f333348a87c13143985b90b/exp/hubert_iter1_train_ssl_torchaudiohubert_base_960h_pretrain_it1_raw/valid.loss.ave.pth&quot; --layer 12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>HuBERT through S3PRL API. S3prl also supports many other SSL models. Model choices can be found from <code>s3prl_upstream_names</code> <a href="https://github.com/s3prl/s3prl/tree/master/s3prl/upstream#upstream-information" target="_blank" rel="noopener noreferrer">here</a><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Append the following arguments:</span></span>
<span class="line"><span>  --feature_type s3prl --s3prl_upstream_name hubert_large_ll60k --layer 24</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>Second, we extract the hubert features and copy the <code>feats.scp</code> into data dirs.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># ====== Creating &quot;feats.scp&quot; ======</span></span>
<span class="line"><span># Kaldi-feats.scp, which describe the file path (ark file) and offset,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that <code>--nj &amp;lt;N&amp;gt;</code> means the number of CPU / GPU jobs. Please set it appropriately by considering your CPU resources and disk access. <code>local/dump_ssl_feature.sh</code> is the entry script.</p><h5 id="üìó-check-the-shape-of-dumped-feature-1-0-pt" tabindex="-1"><a class="header-anchor" href="#üìó-check-the-shape-of-dumped-feature-1-0-pt"><span>üìó Check the shape of dumped feature [1.0 pt]</span></a></h5><p>We will finally read the dumped feature and print the shape information to check if it is successful. The expected output is</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>fkai-an311-b (155, 1024)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 5 min</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># &#39;dump_hubert_feature.sh&#39; reads wave files from a common dir, so we symbolically link dump/raw/test in dump/raw/org</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ln </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">egs2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">an4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dump</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">raw</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">egs2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">an4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dump</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">raw</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">org</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r ssl_feats</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Fairseq HuBERT large example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># !mkdir -p downloads/hubert_pretrained_models</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># !wget https://dl.fbaipublicfiles.com/hubert/hubert_large_ll60k.pt -O ./downloads/hubert_pretrained_models/hubert_large_ll60k.pt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># !local/dump_ssl_feature.sh --feat_dir ssl_feats --datadir dump/raw/org --train_set train_nodev --dev_set train_dev --test_sets &quot;test&quot; --use_gpu true --nj 1 --feature_type hubert --hubert_type fairseq --hubert_url &quot;https://dl.fbaipublicfiles.com/hubert/hubert_large_ll60k.pt&quot; --hubert_dir_path &quot;./downloads/hubert_pretrained_models&quot; --layer 23</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># S3PRL HuBERT large example</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">local</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dump_ssl_feature.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feat_dir ssl_feats </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">datadir dump</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">raw</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">org </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">dev_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;test&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">use_gpu true </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">nj </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feature_type s3prl </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s3prl_upstream_name wavlm_large </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">layer </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#!local/dump_ssl_feature.sh --feat_dir ssl_feats --datadir dump/raw/org --train_set train_nodev --dev_set train_dev --test_sets &quot;test&quot; --use_gpu true --nj 1 --feature_type s3prl --s3prl_upstream_name hubert_large_ll60k --layer 24</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># copy the feats.scp to data/*</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ssl_feats</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s3prl</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_nodev</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats.scp data</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_nodev</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ssl_feats</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s3prl</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_dev</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats.scp data</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_dev</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">cp ssl_feats</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">s3prl</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats.scp data</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Print the shape of dumped features.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">tools</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">anaconda</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">envs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">python3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">c </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;import kaldiio; reader=kaldiio.ReadHelper(&#39;scp:data/train_nodev/feats.scp&#39;); key, array = next(reader.generator); print(key, array.shape)&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="‚≠ï-ssl-stage-3-format-feats-scp-data-dump-extracted" tabindex="-1"><a class="header-anchor" href="#‚≠ï-ssl-stage-3-format-feats-scp-data-dump-extracted"><span>‚≠ï [SSL] Stage 3: Format feats.scp: data/ -&gt; dump/extracted</span></a></h3><p>Because we want to use extracted feature instead of raw wave, we need to run step 3 again**. It only construct a new dump/extracted folder, with some superficial commands.</p><p>üëÄ From now on, <code>--feats_type &quot;extracted&quot;</code> will be added.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 25 seconds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats_type </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;extracted&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">nj </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Stage 4: Remove long/short data: dump/extracted/org -&gt; dump/raw</strong></p><p>Too long and too short audio data are harmful for efficient training. Those utterances are removed for training. But for inference and scoring, we still use the full data, which is important for fair comparison.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats_type </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;extracted&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Stage 5: Generate token_list from dump/extracted/train_nodev/text using BPE.</strong></p><p>This is important for text processing. Here, we make a dictionary simply using the English characters. We use the <code>sentencepiece</code> toolkit developed by Google.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats_type </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;extracted&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="language-modeling-skipped-in-this-tutorial" tabindex="-1"><a class="header-anchor" href="#language-modeling-skipped-in-this-tutorial"><span>Language modeling (skipped in this tutorial)</span></a></h2><p><strong>Stages 6--9: Stages related to language modeling.</strong></p><p>We skip the language modeling part in the recipe (stages 6 -- 9) in this tutorial.</p><h2 id="how-to-change-the-configs" tabindex="-1"><a class="header-anchor" href="#how-to-change-the-configs"><span>How to change the configs?</span></a></h2><p>Let&#39;s revisit the configs, since this is probably the most important part to improve the performance.</p><h3 id="config-file-based" tabindex="-1"><a class="header-anchor" href="#config-file-based"><span>Config file based</span></a></h3><p>All training options are changed in the config file.</p><p>Pleae check https://espnet.github.io/espnet/espnet2_training_option.html</p><p>Let&#39;s first check config files prepared in the <code>an4</code> recipe</p><ul><li>LSTM-based E2E ASR /content/espnet/egs2/an4/asr1/conf/train_asr_rnn.yaml</li><li>Transformer based E2E ASR /content/espnet/egs2/an4/asr1/conf/train_asr_transformer.yaml</li></ul><p>You can run</p><p><strong>RNN</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>./asr.sh --stage 10 \\</span></span>
<span class="line"><span>   --feats_type &quot;extracted&quot; \\</span></span>
<span class="line"><span>   --train_set train_nodev \\</span></span>
<span class="line"><span>   --valid_set train_dev \\</span></span>
<span class="line"><span>   --test_sets &quot;train_dev test&quot; \\</span></span>
<span class="line"><span>   --nj 4 \\</span></span>
<span class="line"><span>   --inference_nj 4 \\</span></span>
<span class="line"><span>   --use_lm false \\</span></span>
<span class="line"><span>   --asr_config conf/train_asr_rnn.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Transformer</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>./asr.sh --stage 10 \\</span></span>
<span class="line"><span>   --feats_type &quot;extracted&quot; \\</span></span>
<span class="line"><span>   --train_set train_nodev \\    </span></span>
<span class="line"><span>   --valid_set train_dev \\</span></span>
<span class="line"><span>   --test_sets &quot;train_dev test&quot; \\</span></span>
<span class="line"><span>   --nj 4 \\</span></span>
<span class="line"><span>   --inference_nj 4 \\</span></span>
<span class="line"><span>   --use_lm false \\</span></span>
<span class="line"><span>   --asr_config conf/train_asr_transformer.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also find various configs in other recipes <code>espnet/egs2/*/asr1/conf/</code>, including</p><ul><li>Conformer <code>egs2/librispeech/asr1/conf/tuning/train_asr_conformer10_hop_length160.yaml</code></li><li>Branchformer <code>egs2/librispeech/asr1/conf/tuning/train_asr_branchformer_hop_length160_e18_linear3072.yaml</code></li></ul><h3 id="command-line-argument-based" tabindex="-1"><a class="header-anchor" href="#command-line-argument-based"><span>Command line argument based</span></a></h3><p>You can also customize it by passing the command line arguments, e.g.,</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>./run.sh --stage 10 --asr_args &quot;--model_conf ctc_weight=0.3&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>./run.sh --stage 10 --asr_args &quot;--optim_conf lr=0.1&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This approach has a highest priority. Thus, the arguments passed in the command line will overwrite those defined in the config file. This is convenient if you only want to change a few arguments.</p><p>Please refer to https://espnet.github.io/espnet/espnet2_tutorial.html#change-the-configuration-for-training for more details.</p><h2 id="üìó-exercise-1" tabindex="-1"><a class="header-anchor" href="#üìó-exercise-1"><span>üìó Exercise 1</span></a></h2><p>Run training, inference and scoring on AN4 using a new config. Here is an example config using <a href="https://proceedings.mlr.press/v162/peng22a.html" target="_blank" rel="noopener noreferrer">Branchformer</a> (Peng et al, ICML 2022).</p><h3 id="‚≠ï-ssl-config-modifications" tabindex="-1"><a class="header-anchor" href="#‚≠ï-ssl-config-modifications"><span>‚≠ï [SSL] Config modifications:</span></a></h3><ol><li>Frontend is set to <code>null</code>.</li><li>A <code>preencoder</code> is added to reduce input dimension.</li><li>In the <code>encoder</code>, the subsampling is reduced to 2 (input_layer is conv2d2)</li></ol><h3 id="‚≠ï-ssl-normalization" tabindex="-1"><a class="header-anchor" href="#‚≠ï-ssl-normalization"><span>‚≠ï [SSL] Normalization</span></a></h3><ol><li>Gobal Mean normalization <ul><li>Compute the statistics (mean / var) on the full training set. This is done in stage 10. Both mean and var are considered.</li><li>This is set by default in <code>asr.sh by</code>, specifically the argument <code>--feats_normalize global_mvn</code>.</li></ul></li><li>Utterance Mean normalization <ul><li>Compute the statistics (mean / var) on each single utterance. By default, ESPnet only normalize the mean.</li><li>This can specified to <code>asr.sh</code> by <code>--feats_normalize utt_mvn</code>. Whatever the value is, as long as it is not <code>global_mvn</code>.</li></ul></li><li>No normalization <ul><li>Nothing is done in the feature.</li><li>This can be specified by <code>--feats_normalize null --asr_args &quot;--normalize null&quot;</code></li></ul></li></ol><p>Similarly, we create a config file named <code>train_asr_demo_branchformer.yaml</code> and start training.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>batch_type: numel</span></span>
<span class="line"><span>batch_bins: 4000000</span></span>
<span class="line"><span>accum_grad: 1    # gradient accumulation steps</span></span>
<span class="line"><span>max_epoch: 40</span></span>
<span class="line"><span>patience: 10</span></span>
<span class="line"><span>init: xavier_uniform</span></span>
<span class="line"><span>best_model_criterion:  # criterion to save best models</span></span>
<span class="line"><span>-   - valid</span></span>
<span class="line"><span>    - acc</span></span>
<span class="line"><span>    - max</span></span>
<span class="line"><span>keep_nbest_models: 10  # save nbest models and average these checkpoints</span></span>
<span class="line"><span>use_amp: true    # whether to use automatic mixed precision</span></span>
<span class="line"><span>num_att_plot: 0  # do not save attention plots to save time in the demo</span></span>
<span class="line"><span>num_workers: 2   # number of workers in dataloader</span></span>
<span class="line"><span></span></span>
<span class="line"><span>frontend: null  # Since extracted features are used, frontend is not used.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>preencoder: linear</span></span>
<span class="line"><span>preencoder_conf:</span></span>
<span class="line"><span>    input_size: 1024</span></span>
<span class="line"><span>    output_size: 128</span></span>
<span class="line"><span></span></span>
<span class="line"><span>encoder: branchformer</span></span>
<span class="line"><span>encoder_conf:</span></span>
<span class="line"><span>    output_size: 256</span></span>
<span class="line"><span>    use_attn: true</span></span>
<span class="line"><span>    attention_heads: 4</span></span>
<span class="line"><span>    attention_layer_type: rel_selfattn</span></span>
<span class="line"><span>    pos_enc_layer_type: rel_pos</span></span>
<span class="line"><span>    rel_pos_type: latest</span></span>
<span class="line"><span>    use_cgmlp: true</span></span>
<span class="line"><span>    cgmlp_linear_units: 1024</span></span>
<span class="line"><span>    cgmlp_conv_kernel: 31</span></span>
<span class="line"><span>    use_linear_after_conv: false</span></span>
<span class="line"><span>    gate_activation: identity</span></span>
<span class="line"><span>    merge_method: concat</span></span>
<span class="line"><span>    cgmlp_weight: 0.5               # used only if merge_method is &quot;fixed_ave&quot;</span></span>
<span class="line"><span>    attn_branch_drop_rate: 0.0      # used only if merge_method is &quot;learned_ave&quot;</span></span>
<span class="line"><span>    num_blocks: 12</span></span>
<span class="line"><span>    dropout_rate: 0.1</span></span>
<span class="line"><span>    positional_dropout_rate: 0.1</span></span>
<span class="line"><span>    attention_dropout_rate: 0.1</span></span>
<span class="line"><span>    input_layer: conv2d2</span></span>
<span class="line"><span>    stochastic_depth_rate: 0.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>decoder: transformer</span></span>
<span class="line"><span>decoder_conf:</span></span>
<span class="line"><span>    attention_heads: 4</span></span>
<span class="line"><span>    linear_units: 1024</span></span>
<span class="line"><span>    num_blocks: 3</span></span>
<span class="line"><span>    dropout_rate: 0.1</span></span>
<span class="line"><span>    positional_dropout_rate: 0.1</span></span>
<span class="line"><span>    self_attention_dropout_rate: 0.1</span></span>
<span class="line"><span>    src_attention_dropout_rate: 0.1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>model_conf:</span></span>
<span class="line"><span>    ctc_weight: 0.3  # joint CTC/attention training</span></span>
<span class="line"><span>    lsm_weight: 0.1  # label smoothing weight</span></span>
<span class="line"><span>    length_normalized_loss: false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>optim: adam</span></span>
<span class="line"><span>optim_conf:</span></span>
<span class="line"><span>    lr: 0.0002</span></span>
<span class="line"><span>scheduler: warmuplr  # linearly increase and exponentially decrease</span></span>
<span class="line"><span>scheduler_conf:</span></span>
<span class="line"><span>    warmup_steps: 200</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>My result is shown below:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>## exp/asr_train_asr_demo_branchformer_extracted_bpe30</span></span>
<span class="line"><span>### WER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>|dataset|Snt|Wrd|Corr|Sub|Del|Ins|Err|S.Err|</span></span>
<span class="line"><span>|---|---|---|---|---|---|---|---|---|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/test|130|773|95.9|2.6|1.6|0.0|4.1|16.9|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/train_dev|100|591|92.0|5.9|2.0|0.2|8.1|28.0|</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### CER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>|dataset|Snt|Wrd|Corr|Sub|Del|Ins|Err|S.Err|</span></span>
<span class="line"><span>|---|---|---|---|---|---|---|---|---|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/test|130|2565|98.1|0.1|1.8|0.1|2.0|16.9|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/train_dev|100|1915|95.5|0.7|3.8|0.2|4.7|28.0|</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### TER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>|dataset|Snt|Wrd|Corr|Sub|Del|Ins|Err|S.Err|</span></span>
<span class="line"><span>|---|---|---|---|---|---|---|---|---|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/test|130|2695|98.1|0.1|1.7|0.1|1.9|16.9|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/train_dev|100|2015|95.7|0.7|3.6|0.1|4.5|28.0|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># ~10 min</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Run multiple stages</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">r exp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr_train_asr_demo_branchformer_extracted_bpe30</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">!.</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr.sh </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stop_stage </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">13</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats_type </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;extracted&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">feats_normalize utt_mvn </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_set train_nodev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">valid_set train_dev </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">test_sets </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;train_dev test&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">nj </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ngpu </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">use_lm false </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">gpu_inference true </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">inference_nj </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr_config conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">train_asr_demo_branchformer.yaml </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">inference_config conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">decode_asr.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Load the TensorBoard notebook extension</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">load_ext tensorboard</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Launch tensorboard before training</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">tensorboard </span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">logdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">espnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">egs2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">an4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">exp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">asr_train_asr_demo_branchformer_extracted_bpe30</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">tensorboard</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">NOTE</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">: Exercise 1 Result 1 (HuBERT)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">scripts</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">utils</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">show_asr_result.sh exp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> IPython.display </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> Image, display</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;exp/asr_train_asr_demo_branchformer_extracted_bpe30/images/acc.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">width</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">print_date_and_time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">NOTE</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">: Exercise 1 Result 2 (WavLM)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">scripts</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">utils</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">show_asr_result.sh exp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> IPython.display </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> Image, display</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;exp/asr_train_asr_demo_branchformer_extracted_bpe30/images/acc.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">width</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">print_date_and_time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">NOTE</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">: Exercise 1 Result 3 (WavLM utt_mvn)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">scripts</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">utils</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">show_asr_result.sh exp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> IPython.display </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> Image, display</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">Image</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;exp/asr_train_asr_demo_branchformer_extracted_bpe30/images/acc.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">width</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">print_date_and_time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="üìó-questions" tabindex="-1"><a class="header-anchor" href="#üìó-questions"><span>üìó Questions</span></a></h2><ol><li>What is the difference between <a href="https://arxiv.org/abs/2106.07447" target="_blank" rel="noopener noreferrer">HuBERT</a> and <a href="https://arxiv.org/abs/2110.13900" target="_blank" rel="noopener noreferrer">WavLM</a>? [1 pt]</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>WavLM is a newer model which uses masked speech denoising to create an embedding applicable to multiple downstream tasks, not just ASR.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Get the ASR performance of one more SSL feature, WavLM, and show the results. [1 pt]</li></ol><p>Hint: change the s3prl_upstream_name to <code>wavlm_large</code> at stage 3.5 and run the following stages.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># RESULTS</span></span>
<span class="line"><span>## Environments</span></span>
<span class="line"><span>- date: \`Sat Feb 25 03:26:54 UTC 2023\`</span></span>
<span class="line"><span>- python version: \`3.9.16 (main, Jan 11 2023, 16:05:54)  [GCC 11.2.0]\`</span></span>
<span class="line"><span>- espnet version: \`espnet 202301\`</span></span>
<span class="line"><span>- pytorch version: \`pytorch 1.12.1\`</span></span>
<span class="line"><span>- Git hash: \`15a6dc1501b65211725a4fb514fcf5dd24f7ae95\`</span></span>
<span class="line"><span>  - Commit date: \`Thu Feb 23 22:04:23 2023 -0500\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## exp/asr_train_asr_demo_branchformer_extracted_bpe30</span></span>
<span class="line"><span>### WER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>|dataset|Snt|Wrd|Corr|Sub|Del|Ins|Err|S.Err|</span></span>
<span class="line"><span>|---|---|---|---|---|---|---|---|---|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/test|130|773|63.5|13.6|22.9|2.2|38.7|79.2|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/train_dev|100|591|59.6|18.1|22.3|2.4|42.8|82.0|</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### CER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>|dataset|Snt|Wrd|Corr|Sub|Del|Ins|Err|S.Err|</span></span>
<span class="line"><span>|---|---|---|---|---|---|---|---|---|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/test|130|2565|80.6|2.6|16.8|1.4|20.8|79.2|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/train_dev|100|1915|78.0|4.6|17.4|0.8|22.8|82.0|</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### TER</span></span>
<span class="line"><span></span></span>
<span class="line"><span>|dataset|Snt|Wrd|Corr|Sub|Del|Ins|Err|S.Err|</span></span>
<span class="line"><span>|---|---|---|---|---|---|---|---|---|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/test|130|2695|81.6|2.4|16.0|1.3|19.8|79.2|</span></span>
<span class="line"><span>|decode_asr_asr_model_valid.acc.ave/train_dev|100|2015|79.1|4.4|16.6|0.7|21.7|82.0|</span></span>
<span class="line"><span></span></span>
<span class="line"><span>============================================================</span></span>
<span class="line"><span> Current date and time: 02/24/2023 22:26:55</span></span>
<span class="line"><span>============================================================</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Compare the performance between HuBERT, WavLM and MFCC features. Which is better? How much is it? Why do you think it is better in one sentence? [1 pt]</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>It seems like HuBERT performed slightly better than WavLM, probably because HuBERT is more specifically focused on this ASR.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li><p>Make a exploration of normalization mentioned in <a href="~/experiments/espnet/egs2/librimix/asr1">Stage 10</a> for either HuBRET or WavLM feature. Report the performance. [1 pt]</p><p>Hint: you may change the number of epochs to get better performance.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol>`,133),h=s(`<h1 id="results" tabindex="-1"><a class="header-anchor" href="#results"><span>RESULTS</span></a></h1><h2 id="environments" tabindex="-1"><a class="header-anchor" href="#environments"><span>Environments</span></a></h2><ul><li>date: <code>Sat Feb 25 04:31:27 UTC 2023</code></li><li>python version: <code>3.9.16 (main, Jan 11 2023, 16:05:54) [GCC 11.2.0]</code></li><li>espnet version: <code>espnet 202301</code></li><li>pytorch version: <code>pytorch 1.12.1</code></li><li>Git hash: <code>15a6dc1501b65211725a4fb514fcf5dd24f7ae95</code><ul><li>Commit date: <code>Thu Feb 23 22:04:23 2023 -0500</code></li></ul></li></ul><h2 id="exp-asr-train-asr-demo-branchformer-extracted-bpe30" tabindex="-1"><a class="header-anchor" href="#exp-asr-train-asr-demo-branchformer-extracted-bpe30"><span>exp/asr_train_asr_demo_branchformer_extracted_bpe30</span></a></h2><h3 id="wer" tabindex="-1"><a class="header-anchor" href="#wer"><span>WER</span></a></h3><table><thead><tr><th>dataset</th><th>Snt</th><th>Wrd</th><th>Corr</th><th>Sub</th><th>Del</th><th>Ins</th><th>Err</th><th>S.Err</th></tr></thead><tbody><tr><td>decode_asr_asr_model_valid.acc.ave/test</td><td>130</td><td>773</td><td>63.5</td><td>13.6</td><td>22.9</td><td>2.2</td><td>38.7</td><td>79.2</td></tr><tr><td>decode_asr_asr_model_valid.acc.ave/train_dev</td><td>100</td><td>591</td><td>59.6</td><td>18.1</td><td>22.3</td><td>2.4</td><td>42.8</td><td>82.0</td></tr></tbody></table><h3 id="cer" tabindex="-1"><a class="header-anchor" href="#cer"><span>CER</span></a></h3><table><thead><tr><th>dataset</th><th>Snt</th><th>Wrd</th><th>Corr</th><th>Sub</th><th>Del</th><th>Ins</th><th>Err</th><th>S.Err</th></tr></thead><tbody><tr><td>decode_asr_asr_model_valid.acc.ave/test</td><td>130</td><td>2565</td><td>80.6</td><td>2.6</td><td>16.8</td><td>1.4</td><td>20.8</td><td>79.2</td></tr><tr><td>decode_asr_asr_model_valid.acc.ave/train_dev</td><td>100</td><td>1915</td><td>78.0</td><td>4.6</td><td>17.4</td><td>0.8</td><td>22.8</td><td>82.0</td></tr></tbody></table><h3 id="ter" tabindex="-1"><a class="header-anchor" href="#ter"><span>TER</span></a></h3><table><thead><tr><th>dataset</th><th>Snt</th><th>Wrd</th><th>Corr</th><th>Sub</th><th>Del</th><th>Ins</th><th>Err</th><th>S.Err</th></tr></thead><tbody><tr><td>decode_asr_asr_model_valid.acc.ave/test</td><td>130</td><td>2695</td><td>81.6</td><td>2.4</td><td>16.0</td><td>1.3</td><td>19.8</td><td>79.2</td></tr><tr><td>decode_asr_asr_model_valid.acc.ave/train_dev</td><td>100</td><td>2015</td><td>79.1</td><td>4.4</td><td>16.6</td><td>0.7</td><td>21.7</td><td>82.0</td></tr></tbody></table><h1 id="current-date-and-time-02-24-2023-23-31-28" tabindex="-1"><a class="header-anchor" href="#current-date-and-time-02-24-2023-23-31-28"><span>============================================================ Current date and time: 02/24/2023 23:31:28</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>## Contribute to ESPnet</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please follow https://github.com/espnet/espnet/blob/master/CONTRIBUTING.md to upload your pre-trained model to [Hugging Face](https://huggingface.co/espnet) and make a pull request in the [ESPnet repository](https://github.com/espnet/espnet/pulls).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function r(p,d){return n(),a("div",null,[l,e(" Generated by scripts/utils/show_asr_result.sh "),h])}const c=i(t,[["render",r],["__file","assignment4_ssl.html.vue"]]),g=JSON.parse('{"path":"/notebook/ESPnet2/Course/CMU_SpeechProcessing_Spring2023/assignment4_ssl.html","title":"CMU 11751/18781 Fall 2022: ESPnet Tutorial","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"‚ùóImportant Notes‚ùó","slug":"‚ùóimportant-notes‚ùó","link":"#‚ùóimportant-notes‚ùó","children":[]},{"level":2,"title":"Objectives","slug":"objectives","link":"#objectives","children":[]},{"level":2,"title":"Useful links","slug":"useful-links","link":"#useful-links","children":[]},{"level":2,"title":"Function to print date and time","slug":"function-to-print-date-and-time","link":"#function-to-print-date-and-time","children":[]},{"level":2,"title":"Check GPU type","slug":"check-gpu-type","link":"#check-gpu-type","children":[]},{"level":2,"title":"Download ESPnet","slug":"download-espnet","link":"#download-espnet","children":[]},{"level":2,"title":"Setup Python environment based on anaconda","slug":"setup-python-environment-based-on-anaconda","link":"#setup-python-environment-based-on-anaconda","children":[]},{"level":2,"title":"Install ESPnet (same procedure as your first tutorial)","slug":"install-espnet-same-procedure-as-your-first-tutorial","link":"#install-espnet-same-procedure-as-your-first-tutorial","children":[]},{"level":2,"title":"Data preparation","slug":"data-preparation","link":"#data-preparation","children":[{"level":3,"title":"‚≠ï [SSL] Stage 3: Format feats.scp: data/ -> dump/extracted","slug":"‚≠ï-ssl-stage-3-format-feats-scp-data-dump-extracted","link":"#‚≠ï-ssl-stage-3-format-feats-scp-data-dump-extracted","children":[]}]},{"level":2,"title":"Language modeling (skipped in this tutorial)","slug":"language-modeling-skipped-in-this-tutorial","link":"#language-modeling-skipped-in-this-tutorial","children":[]},{"level":2,"title":"How to change the configs?","slug":"how-to-change-the-configs","link":"#how-to-change-the-configs","children":[{"level":3,"title":"Config file based","slug":"config-file-based","link":"#config-file-based","children":[]},{"level":3,"title":"Command line argument based","slug":"command-line-argument-based","link":"#command-line-argument-based","children":[]}]},{"level":2,"title":"üìó Exercise 1","slug":"üìó-exercise-1","link":"#üìó-exercise-1","children":[{"level":3,"title":"‚≠ï [SSL] Config modifications:","slug":"‚≠ï-ssl-config-modifications","link":"#‚≠ï-ssl-config-modifications","children":[]},{"level":3,"title":"‚≠ï [SSL] Normalization","slug":"‚≠ï-ssl-normalization","link":"#‚≠ï-ssl-normalization","children":[]}]},{"level":2,"title":"üìó Questions","slug":"üìó-questions","link":"#üìó-questions","children":[]},{"level":2,"title":"Environments","slug":"environments","link":"#environments","children":[]},{"level":2,"title":"exp/asr_train_asr_demo_branchformer_extracted_bpe30","slug":"exp-asr-train-asr-demo-branchformer-extracted-bpe30","link":"#exp-asr-train-asr-demo-branchformer-extracted-bpe30","children":[{"level":3,"title":"WER","slug":"wer","link":"#wer","children":[]},{"level":3,"title":"CER","slug":"cer","link":"#cer","children":[]},{"level":3,"title":"TER","slug":"ter","link":"#ter","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":10.29,"words":3087},"filePathRelative":"notebook/ESPnet2/Course/CMU_SpeechProcessing_Spring2023/assignment4_ssl.md","excerpt":"\\n<p><a href=\\"https://github.com/espnet/espnet\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ESPnet</a> is a widely-used end-to-end speech processing toolkit. It has supported various speech processing tasks. ESPnet uses PyTorch as a main deep learning engine, and also follows Kaldi style data processing, feature extraction/format, and recipes to provide a complete setup for speech recognition and other speech processing experiments.</p>"}');export{c as comp,g as data};

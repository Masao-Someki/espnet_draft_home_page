import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as t,a as l,o as n}from"./app-KOUU_Wij.js";const d={},s=l('<h1 id="espnet2-enh-layers-adapt-layers-muladdadaptlayer" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-adapt-layers-muladdadaptlayer"><span>espnet2.enh.layers.adapt_layers.MulAddAdaptLayer</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.adapt_layers.MulAddAdaptLayer<span class="small-bracket">(indim, enrolldim, ninputs=1, do_addition=True)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(main, enroll)</span></p></div><p>MulAddAdaptLayer Forward.</p><ul><li><strong>Parameters:</strong><ul><li><p><strong>main</strong> –</p><p>tensor or tuple or list activations in the main neural network, which are adapted tuple/list may be useful when we want to apply the adaptation</p><blockquote><p>to both normal and skip connection at once</p></blockquote></li><li><p><strong>enroll</strong> –</p><p>tensor or tuple or list embedding extracted from enrollment tuple/list may be useful when we want to apply the adaptation</p><blockquote><p>to both normal and skip connection at once</p></blockquote></li></ul></li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',8);function r(p,o){return n(),a("div",null,[t(" _espnet2.enh.layers.adapt_layers.MulAddAdaptLayer "),s])}const u=e(d,[["render",r],["__file","MulAddAdaptLayer.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet2/enh/MulAddAdaptLayer.html","title":"espnet2.enh.layers.adapt_layers.MulAddAdaptLayer","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.43,"words":128},"filePathRelative":"guide/espnet2/enh/MulAddAdaptLayer.md","excerpt":"<!-- _espnet2.enh.layers.adapt_layers.MulAddAdaptLayer -->\\n<h1>espnet2.enh.layers.adapt_layers.MulAddAdaptLayer</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.adapt_layers.MulAddAdaptLayer<span class=\\"small-bracket\\">(indim, enrolldim, ninputs=1, do_addition=True)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{u as comp,m as data};

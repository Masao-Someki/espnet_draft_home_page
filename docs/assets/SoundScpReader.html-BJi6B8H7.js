import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,a}from"./app-KOUU_Wij.js";const t={},n=a(`<p>&lt;!-- _espnet2.fileio.sound_scp.SoundScpReader --&gt;</p><h1 id="espnet2-fileio-sound-scp-soundscpreader" tabindex="-1"><a class="header-anchor" href="#espnet2-fileio-sound-scp-soundscpreader"><span>espnet2.fileio.sound_scp.SoundScpReader</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.fileio.sound_scp.SoundScpReader<span class="small-bracket">(fname, dtype=None, always_2d: bool = False, multi_columns: bool = False, concat_axis=1)</span></p></div><p>Bases: <code>Mapping</code></p><p>Reader class for ‘wav.scp’.</p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><p>wav.scp is a text file that looks like the following:</p><p>key1 /some/path/a.wav key2 /some/path/b.wav key3 /some/path/c.wav key4 /some/path/d.wav …</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reader </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> SoundScpReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;wav.scp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> rate, array </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reader[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;key1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If multi_columns=True is given and multiple files are given in one line with space delimiter, and the output array are concatenated along channel direction</p><p>key1 /some/path/a.wav /some/path/a2.wav key2 /some/path/b.wav /some/path/b2.wav …</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reader </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> SoundScpReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;wav.scp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">multi_columns</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> rate, array </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reader[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;key1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>In the above case, a.wav and a2.wav are concatenated.</p><p>Note that even if multi_columns=True is given, SoundScpReader still supports a normal wav.scp, i.e., a wav file is given per line, but this option is disable by default because dict[str, list[str]] object is needed to be kept, but it increases the required amount of memory.</p><div class="custom-h4"><p>get_path<span class="small-bracket">(key)</span></p></div><div class="custom-h4"><p>keys()</p></div>`,16),l=[n];function p(h,d){return e(),i("div",null,l)}const k=s(t,[["render",p],["__file","SoundScpReader.html.vue"]]),c=JSON.parse('{"path":"/guide/espnet2/fileio/SoundScpReader.html","title":"espnet2.fileio.sound_scp.SoundScpReader","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.62,"words":185},"filePathRelative":"guide/espnet2/fileio/SoundScpReader.md","excerpt":"<p>&lt;!-- _espnet2.fileio.sound_scp.SoundScpReader --&gt;</p>\\n<h1>espnet2.fileio.sound_scp.SoundScpReader</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.fileio.sound_scp.SoundScpReader<span class=\\"small-bracket\\">(fname, dtype=None, always_2d: bool = False, multi_columns: bool = False, concat_axis=1)</span></p></div>"}');export{k as comp,c as data};

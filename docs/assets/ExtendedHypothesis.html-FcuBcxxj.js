import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as r,f as o,b as e,d as s,e as c,w as d,a as i,o as p}from"./app-KOUU_Wij.js";const _={},m=e("h1",{id:"espnet2-asr-transducer-beam-search-transducer-extendedhypothesis",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-transducer-beam-search-transducer-extendedhypothesis"},[e("span",null,"espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis")])],-1),l=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis"),e("span",{class:"small-bracket"},"(score: float, yseq: List[int], dec_state: Tuple[Tensor, Tensor | None] | None = None, lm_state: Dict[str, Any] | List[Any] | None = None, dec_out: Tensor | None = None, lm_score: Tensor | None = None)")])],-1),u=e("code",null,"Hypothesis",-1),h=i('<p>Extended hypothesis definition for NSC beam search and mAES.</p><p>:param : Hypothesis dataclass arguments. :param dec_out: Decoder output sequence. (B, D_dec) :param lm_score: Log-probabilities of the LM for given label. (vocab_size)</p><div class="custom-h4"><p>dec_out <em>: Tensor</em> <em>= None</em></p></div><div class="custom-h4"><p>lm_score <em>: Tensor</em> <em>= None</em></p></div>',4);function N(y,x){const t=a("RouteLink");return p(),r("div",null,[o(" _espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis "),m,l,e("p",null,[s("Bases: "),c(t,{to:"/guide/espnet2/asr_transducer/Hypothesis.html#espnet2.asr_transducer.beam_search_transducer.Hypothesis"},{default:d(()=>[u]),_:1})]),h])}const T=n(_,[["render",N],["__file","ExtendedHypothesis.html.vue"]]),H=JSON.parse('{"path":"/guide/espnet2/asr_transducer/ExtendedHypothesis.html","title":"espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"guide/espnet2/asr_transducer/ExtendedHypothesis.md","excerpt":"<!-- _espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis -->\\n<h1>espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.beam_search_transducer.ExtendedHypothesis<span class=\\"small-bracket\\">(score: float, yseq: List[int], dec_state: Tuple[Tensor, Tensor | None] | None = None, lm_state: Dict[str, Any] | List[Any] | None = None, dec_out: Tensor | None = None, lm_score: Tensor | None = None)</span></p></div>"}');export{T as comp,H as data};

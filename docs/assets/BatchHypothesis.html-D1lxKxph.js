import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a,o as c}from"./app-KOUU_Wij.js";const n={},r=a('<h1 id="espnet-nets-batch-beam-search-batchhypothesis" tabindex="-1"><a class="header-anchor" href="#espnet-nets-batch-beam-search-batchhypothesis"><span>espnet.nets.batch_beam_search.BatchHypothesis</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.batch_beam_search.BatchHypothesis<span class="small-bracket">(yseq: Tensor = tensor([])</span>, score: Tensor = tensor([]), length: Tensor = tensor([]), scores: Dict[str, Tensor] = {}, states: Dict[str, Dict] = {}, hs: List[Tensor] = [])</p></div><p>Bases: <code>tuple</code></p><p>Batchfied/Vectorized hypothesis data type.</p><p>Create new instance of BatchHypothesis(yseq, score, length, scores, states, hs)</p><div class="custom-h4"><p>hs <em>: List[Tensor]</em></p></div><p>Alias for field number 5</p><div class="custom-h4"><p>length <em>: Tensor</em></p></div><p>Alias for field number 2</p><div class="custom-h4"><p>score <em>: Tensor</em></p></div><p>Alias for field number 1</p><div class="custom-h4"><p>scores <em>: Dict[str, Tensor]</em></p></div><p>Alias for field number 3</p><div class="custom-h4"><p>states <em>: Dict[str, Dict]</em></p></div><p>Alias for field number 4</p><div class="custom-h4"><p>yseq <em>: Tensor</em></p></div><p>Alias for field number 0</p>',17);function o(h,i){return c(),s("div",null,[t(" _espnet.nets.batch_beam_search.BatchHypothesis "),r])}const l=e(n,[["render",o],["__file","BatchHypothesis.html.vue"]]),d=JSON.parse('{"path":"/guide/espnet/nets/BatchHypothesis.html","title":"espnet.nets.batch_beam_search.BatchHypothesis","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.52,"words":156},"filePathRelative":"guide/espnet/nets/BatchHypothesis.md","excerpt":"<!-- _espnet.nets.batch_beam_search.BatchHypothesis -->\\n<h1>espnet.nets.batch_beam_search.BatchHypothesis</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.batch_beam_search.BatchHypothesis<span class=\\"small-bracket\\">(yseq: Tensor = tensor([])</span>, score: Tensor = tensor([]), length: Tensor = tensor([]), scores: Dict[str, Tensor] = {}, states: Dict[str, Dict] = {}, hs: List[Tensor] = [])</p></div>"}');export{l as comp,d as data};

import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as s,b as e,d as a,e as l,w as r,a as i,o as c}from"./app-KOUU_Wij.js";const d={},u=e("p",null,"<!-- _espnet.lm.chainer_backend.lm.LMEvaluator -->",-1),m=e("h1",{id:"espnet-lm-chainer-backend-lm-lmevaluator",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-lm-chainer-backend-lm-lmevaluator"},[e("span",null,"espnet.lm.chainer_backend.lm.LMEvaluator")])],-1),p=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),a(" espnet.lm.chainer_backend.lm.LMEvaluator"),e("span",{class:"small-bracket"},"(val_iter, eval_model, device)")])],-1),h=e("code",null,"BaseEvaluator",-1),v=i('<p>A custom evaluator for a chainer LM</p><p>:param chainer.dataset.Iterator val_iter : The validation iterator :param eval_model : The model to evaluate :param int device : The device id to use</p><div class="custom-h4"><p>evaluate()</p></div><p>Evaluates the model and returns a result dictionary.</p><p>This method runs the evaluation loop over the validation dataset. It accumulates the reported values to <code>DictSummary</code> and returns a dictionary whose values are means computed by the summary.</p><p>Note that this function assumes that the main iterator raises <code>StopIteration</code> or code in the evaluation loop raises an exception. So, if this assumption is not held, the function could be caught in an infinite loop.</p><p>Users can override this method to customize the evaluation routine.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>This method encloses <code>eval_func</code> calls with <code>function.no_backprop_mode()</code> context, so all calculations using <code>FunctionNode</code>s inside <code>eval_func</code> do not make computational graphs. It is for reducing the memory consumption.</p><ul><li><strong>Returns:</strong> Result dictionary. This dictionary is further reported via <code>report()</code> without specifying any observer.</li><li><strong>Return type:</strong> dict</li></ul>',10);function _(f,b){const t=n("RouteLink");return c(),s("div",null,[u,m,p,e("p",null,[a("Bases: "),l(t,{to:"/guide/espnet/utils/BaseEvaluator.html#espnet.utils.training.evaluator.BaseEvaluator"},{default:r(()=>[h]),_:1})]),v])}const k=o(d,[["render",_],["__file","LMEvaluator.html.vue"]]),L=JSON.parse('{"path":"/guide/espnet/lm/LMEvaluator.html","title":"espnet.lm.chainer_backend.lm.LMEvaluator","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.64,"words":191},"filePathRelative":"guide/espnet/lm/LMEvaluator.md","excerpt":"<p>&lt;!-- _espnet.lm.chainer_backend.lm.LMEvaluator --&gt;</p>\\n<h1>espnet.lm.chainer_backend.lm.LMEvaluator</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.lm.chainer_backend.lm.LMEvaluator<span class=\\"small-bracket\\">(val_iter, eval_model, device)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet/utils/BaseEvaluator.html#espnet.utils.training.evaluator.BaseEvaluator\\" target=\\"_blank\\"><code>BaseEvaluator</code></a></p>"}');export{k as comp,L as data};

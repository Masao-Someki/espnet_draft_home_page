import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,a}from"./app-KOUU_Wij.js";const t={},n=a(`<p>&lt;!-- _espnet2.train.trainer.Trainer --&gt;</p><h1 id="espnet2-train-trainer-trainer" tabindex="-1"><a class="header-anchor" href="#espnet2-train-trainer-trainer"><span>espnet2.train.trainer.Trainer</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.train.trainer.Trainer</p></div><p>Bases: <code>object</code></p><p>Trainer having a optimizer.</p><p>If you’d like to use multiple optimizers, then inherit this class and override the methods if necessary - at least “train_one_epoch()”</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> TwoOptimizerTrainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Trainer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">     @</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">classmethod</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> add_arguments</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">cls</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">parser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">         ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">     @</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">classmethod</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> train_one_epoch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">cls</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">optimizers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, ...):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">         loss1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> model.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">model1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">         loss1.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">backward</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">         optimizers[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">         loss2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> model.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">model2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">         loss2.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">backward</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">         optimizers[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-h4"><p><em>classmethod</em> add_arguments<span class="small-bracket">(parser: ArgumentParser)</span></p></div><p>Reserved for future development of another Trainer</p><div class="custom-h4"><p><em>classmethod</em> build_options<span class="small-bracket">(args: Namespace)</span></p></div><p>Build options consumed by train(), eval(), and plot_attention()</p><div class="custom-h4"><p><em>classmethod</em> plot_attention<span class="small-bracket">(model: Module, output_dir: Path | None, summary_writer, iterator: Iterable[Tuple[List[str], Dict[str, Tensor]]], reporter: <a href="SubReporter.md#espnet2.train.reporter.SubReporter">SubReporter</a></span>, options: <a href="TrainerOptions.md#espnet2.train.trainer.TrainerOptions">TrainerOptions</a>)</p></div><div class="custom-h4"><p><em>static</em> resume<span class="small-bracket">(checkpoint: str | Path, model: Module, reporter: <a href="Reporter.md#espnet2.train.reporter.Reporter">Reporter</a></span>, optimizers: Sequence[Optimizer], schedulers: Sequence[<a href="../schedulers/AbsScheduler.md#espnet2.schedulers.abs_scheduler.AbsScheduler">AbsScheduler</a> | None], scaler: GradScaler | None, ngpu: int = 0, strict: bool = True)</p></div><div class="custom-h4"><p><em>classmethod</em> run<span class="small-bracket">(model: <a href="AbsESPnetModel.md#espnet2.train.abs_espnet_model.AbsESPnetModel">AbsESPnetModel</a></span>, optimizers: Sequence[Optimizer], schedulers: Sequence[<a href="../schedulers/AbsScheduler.md#espnet2.schedulers.abs_scheduler.AbsScheduler">AbsScheduler</a> | None], train_iter_factory: <a href="../iterators/AbsIterFactory.md#espnet2.iterators.abs_iter_factory.AbsIterFactory">AbsIterFactory</a>, valid_iter_factory: <a href="../iterators/AbsIterFactory.md#espnet2.iterators.abs_iter_factory.AbsIterFactory">AbsIterFactory</a>, plot_attention_iter_factory: <a href="../iterators/AbsIterFactory.md#espnet2.iterators.abs_iter_factory.AbsIterFactory">AbsIterFactory</a> | None, trainer_options, distributed_option: <a href="DistributedOption.md#espnet2.train.distributed_utils.DistributedOption">DistributedOption</a>)</p></div><p>Perform training. This method performs the main process of training.</p><div class="custom-h4"><p><em>classmethod</em> train_one_epoch<span class="small-bracket">(model: Module, iterator: Iterable[Tuple[List[str], Dict[str, Tensor]]], optimizers: Sequence[Optimizer], schedulers: Sequence[<a href="../schedulers/AbsScheduler.md#espnet2.schedulers.abs_scheduler.AbsScheduler">AbsScheduler</a></span> | None], scaler: GradScaler | None, reporter: <a href="SubReporter.md#espnet2.train.reporter.SubReporter">SubReporter</a>, summary_writer, options: <a href="TrainerOptions.md#espnet2.train.trainer.TrainerOptions">TrainerOptions</a>, distributed_option: <a href="DistributedOption.md#espnet2.train.distributed_utils.DistributedOption">DistributedOption</a>)</p></div><div class="custom-h4"><p><em>classmethod</em> validate_one_epoch<span class="small-bracket">(model: Module, iterator: Iterable[Dict[str, Tensor]], reporter: <a href="SubReporter.md#espnet2.train.reporter.SubReporter">SubReporter</a></span>, options: <a href="TrainerOptions.md#espnet2.train.trainer.TrainerOptions">TrainerOptions</a>, distributed_option: <a href="DistributedOption.md#espnet2.train.distributed_utils.DistributedOption">DistributedOption</a>)</p></div>`,17),r=[n];function l(p,h){return e(),i("div",null,r)}const o=s(t,[["render",l],["__file","Trainer.html.vue"]]),c=JSON.parse('{"path":"/guide/espnet2/train/Trainer.html","title":"espnet2.train.trainer.Trainer","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"guide/espnet2/train/Trainer.md","excerpt":"<p>&lt;!-- _espnet2.train.trainer.Trainer --&gt;</p>\\n<h1>espnet2.train.trainer.Trainer</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.trainer.Trainer</p></div>\\n<p>Bases: <code>object</code></p>\\n<p>Trainer having a optimizer.</p>\\n<p>If you’d like to use multiple optimizers, then inherit this class\\nand override the methods if necessary - at least “train_one_epoch()”</p>"}');export{o as comp,c as data};

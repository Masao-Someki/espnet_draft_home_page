import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as s,a,o as t}from"./app-KOUU_Wij.js";const l={},o=a('<h1 id="espnet2-enh-layers-complexnn-naviecomplexlstm" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-complexnn-naviecomplexlstm"><span>espnet2.enh.layers.complexnn.NavieComplexLSTM</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.complexnn.NavieComplexLSTM<span class="small-bracket">(input_size, hidden_size, projection_dim=None, bidirectional=False, batch_first=False)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>flatten_parameters()</p></div><div class="custom-h4"><p>forward<span class="small-bracket">(inputs)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function i(p,r){return t(),n("div",null,[s(" _espnet2.enh.layers.complexnn.NavieComplexLSTM "),o])}const m=e(l,[["render",i],["__file","NavieComplexLSTM.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet2/enh/NavieComplexLSTM.html","title":"espnet2.enh.layers.complexnn.NavieComplexLSTM","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.41,"words":124},"filePathRelative":"guide/espnet2/enh/NavieComplexLSTM.md","excerpt":"<!-- _espnet2.enh.layers.complexnn.NavieComplexLSTM -->\\n<h1>espnet2.enh.layers.complexnn.NavieComplexLSTM</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.complexnn.NavieComplexLSTM<span class=\\"small-bracket\\">(input_size, hidden_size, projection_dim=None, bidirectional=False, batch_first=False)</span></p></div>"}');export{m as comp,h as data};

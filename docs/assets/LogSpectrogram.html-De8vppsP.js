import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as r,f as n,b as e,d as t,e as c,w as l,a as p,o as i}from"./app-KOUU_Wij.js";const d={},g=e("h1",{id:"espnet2-s2st-tgt-feats-extract-log-spectrogram-logspectrogram",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-s2st-tgt-feats-extract-log-spectrogram-logspectrogram"},[e("span",null,"espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram"),e("span",{class:"small-bracket"},"(n_fft: int = 1024, win_length: int | None = None, hop_length: int = 256, window: str | None = 'hann', center: bool = True, normalized: bool = False, onesided: bool = True)")])],-1),_=e("code",null,"AbsTgtFeatsExtract",-1),h=p('<p>Conventional frontend structure for ASR</p><p>Stft -&gt; log-amplitude-spec</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>get_parameters()</p></div><p>Return the parameters required by Vocoder</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>spectrogram()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function u(f,b){const s=a("RouteLink");return i(),r("div",null,[n(" _espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram "),g,m,e("p",null,[t("Bases: "),c(s,{to:"/guide/espnet2/s2st/AbsTgtFeatsExtract.html#espnet2.s2st.tgt_feats_extract.abs_tgt_feats_extract.AbsTgtFeatsExtract"},{default:l(()=>[_]),_:1})]),h])}const S=o(d,[["render",u],["__file","LogSpectrogram.html.vue"]]),N=JSON.parse(`{"path":"/guide/espnet2/s2st/LogSpectrogram.html","title":"espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"guide/espnet2/s2st/LogSpectrogram.md","excerpt":"<!-- _espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram -->\\n<h1>espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.s2st.tgt_feats_extract.log_spectrogram.LogSpectrogram<span class=\\"small-bracket\\">(n_fft: int = 1024, win_length: int | None = None, hop_length: int = 256, window: str | None = 'hann', center: bool = True, normalized: bool = False, onesided: bool = True)</span></p></div>"}`);export{S as comp,N as data};

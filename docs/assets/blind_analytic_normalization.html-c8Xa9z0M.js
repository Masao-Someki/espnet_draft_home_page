import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as a,a as t,o as i}from"./app-KOUU_Wij.js";const l={},r=t('<h1 id="espnet2-enh-layers-beamformer-blind-analytic-normalization" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-beamformer-blind-analytic-normalization"><span>espnet2.enh.layers.beamformer.blind_analytic_normalization</span></a></h1><div class="custom-h3"><p>espnet2.enh.layers.beamformer.blind_analytic_normalization<span class="small-bracket">(ws, psd_noise, eps=1e-08)</span></p></div><p>Blind analytic normalization (BAN) for post-filtering</p><ul><li><strong>Parameters:</strong><ul><li><strong>ws</strong> (<em>torch.complex64/ComplexTensor</em>) – beamformer vector (…, F, C)</li><li><strong>psd_noise</strong> (<em>torch.complex64/ComplexTensor</em>) – noise PSD matrix (…, F, C, C)</li><li><strong>eps</strong> (<em>float</em>) –</li></ul></li><li><strong>Returns:</strong> normalized beamformer vector (…, F)</li><li><strong>Return type:</strong> ws_ban (torch.complex64/ComplexTensor)</li></ul>',4);function o(s,m){return i(),n("div",null,[a(" _espnet2.enh.layers.beamformer.blind_analytic_normalization "),r])}const d=e(l,[["render",o],["__file","blind_analytic_normalization.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/enh/blind_analytic_normalization.html","title":"espnet2.enh.layers.beamformer.blind_analytic_normalization","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.18,"words":53},"filePathRelative":"guide/espnet2/enh/blind_analytic_normalization.md","excerpt":"<!-- _espnet2.enh.layers.beamformer.blind_analytic_normalization -->\\n<h1>espnet2.enh.layers.beamformer.blind_analytic_normalization</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.enh.layers.beamformer.blind_analytic_normalization<span class=\\"small-bracket\\">(ws, psd_noise, eps=1e-08)</span></p></div>\\n<p>Blind analytic normalization (BAN) for post-filtering</p>"}');export{d as comp,_ as data};

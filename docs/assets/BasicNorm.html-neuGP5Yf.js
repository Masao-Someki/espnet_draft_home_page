import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as s,a as r,o as t}from"./app-KOUU_Wij.js";const n={},o=r('<h1 id="espnet2-asr-transducer-normalization-basicnorm" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-normalization-basicnorm"><span>espnet2.asr_transducer.normalization.BasicNorm</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr_transducer.normalization.BasicNorm<span class="small-bracket">(normalized_shape: int, eps: float = 0.25)</span></p></div><p>Bases: <code>Module</code></p><p>BasicNorm module definition.</p><p>Reference: <a href="https://github.com/k2-fsa/icefall/pull/288" target="_blank" rel="noopener noreferrer">https://github.com/k2-fsa/icefall/pull/288</a></p><ul><li><strong>Parameters:</strong><ul><li><strong>normalized_shape</strong> – Expected size.</li><li><strong>eps</strong> – Value added to the denominator for numerical stability.</li></ul></li></ul><p>Construct a BasicNorm object.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor)</span></p></div><p>Compute basic normalization.</p><ul><li><strong>Parameters:</strong><strong>x</strong> – Input sequences. (B, T, D_hidden)</li><li><strong>Returns:</strong> Output sequences. (B, T, D_hidden)</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function i(c,l){return t(),a("div",null,[s(" _espnet2.asr_transducer.normalization.BasicNorm "),o])}const d=e(n,[["render",i],["__file","BasicNorm.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/asr_transducer/BasicNorm.html","title":"espnet2.asr_transducer.normalization.BasicNorm","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.31,"words":94},"filePathRelative":"guide/espnet2/asr_transducer/BasicNorm.md","excerpt":"<!-- _espnet2.asr_transducer.normalization.BasicNorm -->\\n<h1>espnet2.asr_transducer.normalization.BasicNorm</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.normalization.BasicNorm<span class=\\"small-bracket\\">(normalized_shape: int, eps: float = 0.25)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{d as comp,u as data};

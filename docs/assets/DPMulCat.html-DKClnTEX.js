import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as n,a as s}from"./app-KOUU_Wij.js";const l={},a=s('<p>&lt;!-- _espnet2.enh.layers.dpmulcat.DPMulCat --&gt;</p><h1 id="espnet2-enh-layers-dpmulcat-dpmulcat" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-dpmulcat-dpmulcat"><span>espnet2.enh.layers.dpmulcat.DPMulCat</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.dpmulcat.DPMulCat<span class="small-bracket">(input_size: int, hidden_size: int, output_size: int, num_spk: int, dropout: float = 0.0, num_layers: int = 4, bidirectional: bool = True, input_normalize: bool = False)</span></p></div><p>Bases: <code>Module</code></p><p>Dual-path RNN module with MulCat blocks.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_size</strong> – int, dimension of the input feature. The input should have shape (batch, seq_len, input_size).</li><li><strong>hidden_size</strong> – int, dimension of the hidden state.</li><li><strong>output_size</strong> – int, dimension of the output size.</li><li><strong>num_spk</strong> – int, the number of speakers in the output.</li><li><strong>dropout</strong> – float, the dropout rate in the LSTM layer. (Default: 0.0)</li><li><strong>bidirectional</strong> – bool, whether the RNN layers are bidirectional. (Default: True)</li><li><strong>num_layers</strong> – int, number of stacked MulCat blocks. (Default: 4)</li><li><strong>input_normalize</strong> – bool, whether to apply GroupNorm on the input Tensor. (Default: False)</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input)</span></p></div><p>Compute output after DPMulCat module.</p><ul><li><strong>Parameters:</strong><strong>input</strong> (<em>torch.Tensor</em>) – The input feature. Tensor of shape (batch, N, dim1, dim2) Apply RNN on dim1 first and then dim2</li><li><strong>Returns:</strong> (list(torch.Tensor) or list(list(torch.Tensor)) : In training mode, the module returns output of each DPMulCat block. In eval mode, the module only returns output in the last block.</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11),i=[a];function o(r,u){return n(),e("div",null,i)}const m=t(l,[["render",o],["__file","DPMulCat.html.vue"]]),c=JSON.parse('{"path":"/guide/espnet2/enh/DPMulCat.html","title":"espnet2.enh.layers.dpmulcat.DPMulCat","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.74,"words":222},"filePathRelative":"guide/espnet2/enh/DPMulCat.md","excerpt":"<p>&lt;!-- _espnet2.enh.layers.dpmulcat.DPMulCat --&gt;</p>\\n<h1>espnet2.enh.layers.dpmulcat.DPMulCat</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.dpmulcat.DPMulCat<span class=\\"small-bracket\\">(input_size: int, hidden_size: int, output_size: int, num_spk: int, dropout: float = 0.0, num_layers: int = 4, bidirectional: bool = True, input_normalize: bool = False)</span></p></div>"}');export{m as comp,c as data};

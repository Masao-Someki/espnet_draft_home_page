import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as o,b as e,d as t,e as a,w as c,a as i,o as l}from"./app-KOUU_Wij.js";const p={},d=e("p",null,"<!-- _espnet.nets.scorers.ctc.CTCPrefixScorer -->",-1),g=e("h1",{id:"espnet-nets-scorers-ctc-ctcprefixscorer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-nets-scorers-ctc-ctcprefixscorer"},[e("span",null,"espnet.nets.scorers.ctc.CTCPrefixScorer")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet.nets.scorers.ctc.CTCPrefixScorer"),e("span",{class:"small-bracket"},"(ctc: Module, eos: int)")])],-1),h=e("code",null,"BatchPartialScorerInterface",-1),u=i('<p>Decoder interface wrapper for CTCPrefixScore.</p><p>Initialize class.</p><ul><li><strong>Parameters:</strong><ul><li><strong>ctc</strong> (<em>torch.nn.Module</em>) – The CTC implementation. For example, <code>espnet.nets.pytorch_backend.ctc.CTC</code></li><li><strong>eos</strong> (<em>int</em>) – The end-of-sequence id.</li></ul></li></ul><div class="custom-h4"><p>batch_init_state<span class="small-bracket">(x: Tensor)</span></p></div><p>Get an initial state for decoding.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – The encoded feature tensor</li></ul><p>Returns: initial state</p><div class="custom-h4"><p>batch_score_partial<span class="small-bracket">(y, ids, state, x)</span></p></div><p>Score new token.</p><ul><li><strong>Parameters:</strong><ul><li><strong>y</strong> (<em>torch.Tensor</em>) – 1D prefix token</li><li><strong>ids</strong> (<em>torch.Tensor</em>) – torch.int64 next token to score</li><li><strong>state</strong> – decoder state for prefix tokens</li><li><strong>x</strong> (<em>torch.Tensor</em>) – 2D encoder feature that generates ys</li></ul></li><li><strong>Returns:</strong> Tuple of a score tensor for y that has a shape (len(next_tokens),) and next state for ys</li><li><strong>Return type:</strong> tuple[torch.Tensor, Any]</li></ul><div class="custom-h4"><p>extend_prob<span class="small-bracket">(x: Tensor)</span></p></div><p>Extend probs for decoding.</p><p>This extension is for streaming decoding as in Eq (14) in <a href="https://arxiv.org/abs/2006.14941" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/2006.14941</a></p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – The encoded feature tensor</li></ul><div class="custom-h4"><p>extend_state<span class="small-bracket">(state)</span></p></div><p>Extend state for decoding.</p><p>This extension is for streaming decoding as in Eq (14) in <a href="https://arxiv.org/abs/2006.14941" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/2006.14941</a></p><ul><li><strong>Parameters:</strong><strong>state</strong> – The states of hyps</li></ul><p>Returns: exteded state</p><div class="custom-h4"><p>init_state<span class="small-bracket">(x: Tensor)</span></p></div><p>Get an initial state for decoding.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – The encoded feature tensor</li></ul><p>Returns: initial state</p><div class="custom-h4"><p>score_partial<span class="small-bracket">(y, ids, state, x)</span></p></div><p>Score new token.</p><ul><li><strong>Parameters:</strong><ul><li><strong>y</strong> (<em>torch.Tensor</em>) – 1D prefix token</li><li><strong>next_tokens</strong> (<em>torch.Tensor</em>) – torch.int64 next token to score</li><li><strong>state</strong> – decoder state for prefix tokens</li><li><strong>x</strong> (<em>torch.Tensor</em>) – 2D encoder feature that generates ys</li></ul></li><li><strong>Returns:</strong> Tuple of a score tensor for y that has a shape (len(next_tokens),) and next state for ys</li><li><strong>Return type:</strong> tuple[torch.Tensor, Any]</li></ul><div class="custom-h4"><p>select_state<span class="small-bracket">(state, i, new_id=None)</span></p></div><p>Select state with relative ids in the main beam search.</p><ul><li><strong>Parameters:</strong><ul><li><strong>state</strong> – Decoder state for prefix tokens</li><li><strong>i</strong> (<em>int</em>) – Index to select a state in the main beam search</li><li><strong>new_id</strong> (<em>int</em>) – New label id to select a state if necessary</li></ul></li><li><strong>Returns:</strong> pruned state</li><li><strong>Return type:</strong> state</li></ul>',29);function f(x,_){const s=n("RouteLink");return l(),o("div",null,[d,g,m,e("p",null,[t("Bases: "),a(s,{to:"/guide/espnet/nets/BatchPartialScorerInterface.html#espnet.nets.scorer_interface.BatchPartialScorerInterface"},{default:c(()=>[h]),_:1})]),u])}const k=r(p,[["render",f],["__file","CTCPrefixScorer.html.vue"]]),b=JSON.parse('{"path":"/guide/espnet/nets/CTCPrefixScorer.html","title":"espnet.nets.scorers.ctc.CTCPrefixScorer","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"guide/espnet/nets/CTCPrefixScorer.md","excerpt":"<p>&lt;!-- _espnet.nets.scorers.ctc.CTCPrefixScorer --&gt;</p>\\n<h1>espnet.nets.scorers.ctc.CTCPrefixScorer</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.scorers.ctc.CTCPrefixScorer<span class=\\"small-bracket\\">(ctc: Module, eos: int)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet/nets/BatchPartialScorerInterface.html#espnet.nets.scorer_interface.BatchPartialScorerInterface\\" target=\\"_blank\\"><code>BatchPartialScorerInterface</code></a></p>"}');export{k as comp,b as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as s,a as t}from"./app-KOUU_Wij.js";const a={},l=t('<p>&lt;!-- _espnet2.enh.layers.uses.ChannelTAC --&gt;</p><h1 id="espnet2-enh-layers-uses-channeltac" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-uses-channeltac"><span>espnet2.enh.layers.uses.ChannelTAC</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.uses.ChannelTAC<span class="small-bracket">(input_dim, eps=1e-05)</span></p></div><p>Bases: <code>Module</code></p><p>Channel Transform-Average-Concatenate (TAC) module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_dim</strong> (<em>int</em>) – dimension of the input feature.</li><li><strong>eps</strong> (<em>float</em>) – epsilon for layer normalization.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x, ref_channel=None)</span></p></div><p>ChannelTAC Forward.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>torch.Tensor</em>) – input feature (batch, C, N, freq, time)</li><li><strong>ref_channel</strong> (<em>None</em> <em>or</em> <em>int</em>) – index of the reference channel.</li></ul></li><li><strong>Returns:</strong> output feature (batch, C, N, freq, time)</li><li><strong>Return type:</strong> output (torch.Tensor)</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10),r=[l];function o(i,p){return s(),n("div",null,r)}const m=e(a,[["render",o],["__file","ChannelTAC.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/enh/ChannelTAC.html","title":"espnet2.enh.layers.uses.ChannelTAC","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.35,"words":106},"filePathRelative":"guide/espnet2/enh/ChannelTAC.md","excerpt":"<p>&lt;!-- _espnet2.enh.layers.uses.ChannelTAC --&gt;</p>\\n<h1>espnet2.enh.layers.uses.ChannelTAC</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.uses.ChannelTAC<span class=\\"small-bracket\\">(input_dim, eps=1e-05)</span></p></div>\\n<p>Bases: <code>Module</code></p>\\n<p>Channel Transform-Average-Concatenate (TAC) module.</p>"}');export{m as comp,u as data};

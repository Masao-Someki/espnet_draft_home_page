import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a,o}from"./app-KOUU_Wij.js";const n={},l=a('<h1 id="espnet2-asr-state-spaces-base-sequencemodule" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-state-spaces-base-sequencemodule"><span>espnet2.asr.state_spaces.base.SequenceModule</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.state_spaces.base.SequenceModule</p></div><p>Bases: <code>Module</code></p><p>Abstract sequence model class.</p><p>All models must adhere to this interface</p><p>A SequenceModule is generally a model that transforms an input of shape (n_batch, l_sequence, d_model) to (n_batch, l_sequence, d_output)</p><p>REQUIRED methods and attributes forward, d_model, d_output: controls standard forward pass, a sequence-to-sequence transformation __init__ should also satisfy the following interface; see SequenceIdentity for an example</p><blockquote><p>def __init__(self, d_model, transposed=False,</p></blockquote><blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><blockquote><p>kwargs)</p></blockquote><p>OPTIONAL methods default_state, step: allows stepping the model recurrently with a hidden state state_to_tensor, d_state: allows decoding from hidden state</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>property</em> d_model</p></div><p>Model dimension (generally same as input dimension).</p><p>This attribute is required for all SequenceModule instantiations. It is used by the rest of the pipeline (e.g. model backbone, encoder) to track the internal shapes of the full model.</p><div class="custom-h4"><p><em>property</em> d_output</p></div><p>Output dimension of model.</p><p>This attribute is required for all SequenceModule instantiations. It is used by the rest of the pipeline (e.g. model backbone, decoder) to track the internal shapes of the full model.</p><div class="custom-h4"><p><em>property</em> d_state</p></div><p>Return dimension of output of self.state_to_tensor.</p><div class="custom-h4"><p>default_state<span class="small-bracket">(*batch_shape, device=None)</span></p></div><p>Create initial state for a batch of inputs.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x, state=None, **kwargs)</span></p></div><p>Forward pass.</p><p>A sequence-to-sequence transformation with an optional state.</p><p>Generally, this should map a tensor of shape (batch, length, self.d_model) to (batch, length, self.d_output)</p><p>Additionally, it returns a “state” which can be any additional information For example, RNN and SSM layers may return their hidden state, while some types of transformer layers (e.g. Transformer-XL) may want to pass a state as well</p><div class="custom-h4"><p><em>property</em> state_to_tensor</p></div><p>Return a function mapping a state to a single tensor.</p><p>This method should be implemented if one wants to use the hidden state insteadof the output sequence for final prediction. Currently only used with the StateDecoder.</p><div class="custom-h4"><p>step<span class="small-bracket">(x, state=None, **kwargs)</span></p></div><p>Step the model recurrently for one step of the input sequence.</p><p>For example, this should correspond to unrolling an RNN for one step. If the forward pass has signature (B, L, H1) -&gt; (B, L, H2), this method should generally have signature (B, H1) -&gt; (B, H2) with an optional recurrent state.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',34);function i(p,d){return o(),t("div",null,[s(" _espnet2.asr.state_spaces.base.SequenceModule "),l])}const u=e(n,[["render",i],["__file","SequenceModule.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet2/asr/SequenceModule.html","title":"espnet2.asr.state_spaces.base.SequenceModule","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.52,"words":456},"filePathRelative":"guide/espnet2/asr/SequenceModule.md","excerpt":"<!-- _espnet2.asr.state_spaces.base.SequenceModule -->\\n<h1>espnet2.asr.state_spaces.base.SequenceModule</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.state_spaces.base.SequenceModule</p></div>\\n<p>Bases: <code>Module</code></p>\\n<p>Abstract sequence model class.</p>\\n<p>All models must adhere to this interface</p>"}');export{u as comp,h as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as n,a as t,o as a}from"./app-KOUU_Wij.js";const o={},c=t('<h1 id="espnet2-spk-encoder-ska-tdnn-encoder-resblock" tabindex="-1"><a class="header-anchor" href="#espnet2-spk-encoder-ska-tdnn-encoder-resblock"><span>espnet2.spk.encoder.ska_tdnn_encoder.ResBlock</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.ResBlock<span class="small-bracket">(inplanes: int, planes: int, stride: int = 1, reduction: int = 8, skfwse_freq: int = 40, skcwse_channel: int = 128)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function d(r,i){return a(),s("div",null,[n(" _espnet2.spk.encoder.ska_tdnn_encoder.ResBlock "),c])}const h=e(o,[["render",d],["__file","ResBlock.html.vue"]]),k=JSON.parse('{"path":"/guide/espnet2/spk/ResBlock.html","title":"espnet2.spk.encoder.ska_tdnn_encoder.ResBlock","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.41,"words":124},"filePathRelative":"guide/espnet2/spk/ResBlock.md","excerpt":"<!-- _espnet2.spk.encoder.ska_tdnn_encoder.ResBlock -->\\n<h1>espnet2.spk.encoder.ska_tdnn_encoder.ResBlock</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.ResBlock<span class=\\"small-bracket\\">(inplanes: int, planes: int, stride: int = 1, reduction: int = 8, skfwse_freq: int = 40, skcwse_channel: int = 128)</span></p></div>"}');export{h as comp,k as data};

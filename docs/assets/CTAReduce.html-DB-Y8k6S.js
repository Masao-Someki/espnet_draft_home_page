import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as r,a,o as s}from"./app-KOUU_Wij.js";const n={},i=a('<h1 id="espnet2-asr-transducer-rnnt-multi-blank-utils-cuda-utils-reduce-ctareduce" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-rnnt-multi-blank-utils-cuda-utils-reduce-ctareduce"><span>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce</span></a></h1><div class="custom-h3"><p>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce<span class="small-bracket">(tid: int, x, storage, count: int, R_opid: int)</span></p></div><p>CUDA Warp reduction kernel.</p><p>It is a device kernel to be called by other kernels.</p><p>The data will be read from the right segement recursively, and reduced (ROP) onto the left half. Operation continues while warp size is larger than a given offset. Beyond this offset, warp reduction is performed via shfl_down_sync, which halves the reduction space and sums the two halves at each call.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Efficient warp occurs at input shapes of 2 ^ K.</p><div class="custom-h3"><p>References</p></div><ul><li>Warp Primitives [<a href="https://developer.nvidia.com/blog/using-cuda-warp-level-primitives/" target="_blank" rel="noopener noreferrer">https://developer.nvidia.com/blog/using-cuda-warp-level-primitives/</a>]</li></ul><ul><li><strong>Parameters:</strong><ul><li><strong>tid</strong> – CUDA thread index</li><li><strong>x</strong> – activation. Single float.</li><li><strong>storage</strong> – shared memory of size CTA_REDUCE_SIZE used for reduction in parallel threads.</li><li><strong>count</strong> – equivalent to num_rows, which is equivalent to alphabet_size (V+1)</li><li><strong>R_opid</strong> – Operator ID for reduction. See R_Op for more information.</li></ul></li></ul>',10);function l(u,c){return s(),t("div",null,[r(" _espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce "),i])}const p=e(n,[["render",l],["__file","CTAReduce.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet2/asr/CTAReduce.html","title":"espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.54,"words":162},"filePathRelative":"guide/espnet2/asr/CTAReduce.md","excerpt":"<!-- _espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce -->\\n<h1>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.reduce.CTAReduce<span class=\\"small-bracket\\">(tid: int, x, storage, count: int, R_opid: int)</span></p></div>"}');export{p as comp,h as data};

import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as l,f as r,b as e,d as s,e as i,w as c,o}from"./app-KOUU_Wij.js";const p={},u=e("h1",{id:"espnet2-schedulers-cosine-anneal-warmup-restart-cosineannealingwarmuprestarts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-schedulers-cosine-anneal-warmup-restart-cosineannealingwarmuprestarts"},[e("span",null,"espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts"),e("span",{class:"small-bracket"},"(optimizer: Optimizer, first_cycle_steps: int, cycle_mult: float = 1.0, max_lr: float = 0.1, min_lr: float = 0.001, warmup_steps: int = 0, gamma: float = 1.0, last_epoch: int = -1)")])],-1),_=e("code",null,"_LRScheduler",-1),d=e("code",null,"AbsBatchStepScheduler",-1),h=e("p",null,"Cosine Annealing Warmup Restart.",-1),f=e("p",null,"optimizer (Optimizer): Wrapped optimizer. first_cycle_steps (int): First cycle step size. cycle_mult(float): Cycle steps magnification. Default: -1. max_lr(float): First cycleâ€™s max learning rate. Default: 0.1. min_lr(float): Min learning rate. Default: 0.001. warmup_steps(int): Linear warmup step size. Default: 0. gamma(float): Decrease rate of max learning rate by cycle. Default: 1. last_epoch (int): The index of last epoch. Default: -1.",-1),g=e("div",{class:"custom-h4"},[e("p",null,"get_lr()")],-1),w=e("div",{class:"custom-h4"},[e("p",null,"init_lr()")],-1),C=e("div",{class:"custom-h4"},[e("p",null,[s("step"),e("span",{class:"small-bracket"},"(epoch=None)")])],-1);function R(A,x){const t=n("RouteLink");return o(),l("div",null,[r(" _espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts "),u,m,e("p",null,[s("Bases: "),_,s(", "),i(t,{to:"/guide/espnet2/schedulers/AbsBatchStepScheduler.html#espnet2.schedulers.abs_scheduler.AbsBatchStepScheduler"},{default:c(()=>[d]),_:1})]),h,f,g,w,C])}const y=a(p,[["render",R],["__file","CosineAnnealingWarmupRestarts.html.vue"]]),v=JSON.parse('{"path":"/guide/espnet2/schedulers/CosineAnnealingWarmupRestarts.html","title":"espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.48,"words":143},"filePathRelative":"guide/espnet2/schedulers/CosineAnnealingWarmupRestarts.md","excerpt":"<!-- _espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts -->\\n<h1>espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.schedulers.cosine_anneal_warmup_restart.CosineAnnealingWarmupRestarts<span class=\\"small-bracket\\">(optimizer: Optimizer, first_cycle_steps: int, cycle_mult: float = 1.0, max_lr: float = 0.1, min_lr: float = 0.001, warmup_steps: int = 0, gamma: float = 1.0, last_epoch: int = -1)</span></p></div>"}');export{y as comp,v as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as i,a,o as r}from"./app-KOUU_Wij.js";const t={},l=a(`<h1 id="espnet-utils-cli-readers-file-reader-helper" tabindex="-1"><a class="header-anchor" href="#espnet-utils-cli-readers-file-reader-helper"><span>espnet.utils.cli_readers.file_reader_helper</span></a></h1><div class="custom-h3"><p>espnet.utils.cli_readers.file_reader_helper<span class="small-bracket">(rspecifier: str, filetype: str = &#39;mat&#39;, return_shape: bool = False, segments: str | None = None)</span></p></div><p>Read uttid and array in kaldi style</p><p>This function might be a bit confusing as “ark” is used for HDF5 to imitate “kaldi-rspecifier”.</p><ul><li><strong>Parameters:</strong><ul><li><strong>rspecifier</strong> – Give as “ark:feats.ark” or “scp:feats.scp”</li><li><strong>filetype</strong> – “mat” is kaldi-martix, “hdf5”: HDF5</li><li><strong>return_shape</strong> – Return the shape of the matrix, instead of the matrix. This can reduce IO cost for HDF5.</li></ul></li><li><strong>Return type:</strong> Generator[Tuple[str, np.ndarray], None, None]</li></ul><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><p>Read from kaldi-matrix ark file:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> u, array </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> file_reader_helper</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ark:feats.ark&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;mat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     array</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Read from HDF5 file:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> u, array </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> file_reader_helper</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ark:feats.h5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;hdf5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     array</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function n(h,p){return r(),s("div",null,[i(" _espnet.utils.cli_readers.file_reader_helper "),l])}const o=e(t,[["render",n],["__file","file_reader_helper.html.vue"]]),c=JSON.parse(`{"path":"/guide/espnet/utils/file_reader_helper.html","title":"espnet.utils.cli_readers.file_reader_helper","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":127},"filePathRelative":"guide/espnet/utils/file_reader_helper.md","excerpt":"<!-- _espnet.utils.cli_readers.file_reader_helper -->\\n<h1>espnet.utils.cli_readers.file_reader_helper</h1>\\n<div class=\\"custom-h3\\"><p>espnet.utils.cli_readers.file_reader_helper<span class=\\"small-bracket\\">(rspecifier: str, filetype: str = 'mat', return_shape: bool = False, segments: str | None = None)</span></p></div>"}`);export{o as comp,c as data};

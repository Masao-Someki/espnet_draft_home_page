import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as n,a as o}from"./app-KOUU_Wij.js";const a={},t=o('<p>&lt;!-- _espnet2.asr.encoder.abs_encoder.AbsEncoder --&gt;</p><h1 id="espnet2-asr-encoder-abs-encoder-absencoder" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-encoder-abs-encoder-absencoder"><span>espnet2.asr.encoder.abs_encoder.AbsEncoder</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.encoder.abs_encoder.AbsEncoder</p></div><p>Bases: <code>Module</code>, <code>ABC</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>abstract</em> forward<span class="small-bracket">(xs_pad: Tensor, ilens: Tensor, prev_states: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p><em>abstract</em> output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',12),r=[t];function d(c,i){return n(),s("div",null,r)}const h=e(a,[["render",d],["__file","AbsEncoder.html.vue"]]),b=JSON.parse('{"path":"/guide/espnet2/asr/AbsEncoder.html","title":"espnet2.asr.encoder.abs_encoder.AbsEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":127},"filePathRelative":"guide/espnet2/asr/AbsEncoder.md","excerpt":"<p>&lt;!-- _espnet2.asr.encoder.abs_encoder.AbsEncoder --&gt;</p>\\n<h1>espnet2.asr.encoder.abs_encoder.AbsEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.encoder.abs_encoder.AbsEncoder</p></div>\\n<p>Bases: <code>Module</code>, <code>ABC</code></p>\\n<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>"}');export{h as comp,b as data};

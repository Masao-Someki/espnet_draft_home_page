import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a as r,o as n}from"./app-KOUU_Wij.js";const i={},o=r('<h1 id="espnet2-enh-diffusion-sampling-predictors-predictor" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-diffusion-sampling-predictors-predictor"><span>espnet2.enh.diffusion.sampling.predictors.Predictor</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.diffusion.sampling.predictors.Predictor<span class="small-bracket">(sde, score_fn, probability_flow=False)</span></p></div><p>Bases: <code>ABC</code></p><p>The abstract class for a predictor algorithm.</p><div class="custom-h4"><p>debug_update_fn<span class="small-bracket">(x, t, *args)</span></p></div><div class="custom-h4"><p><em>abstract</em> update_fn<span class="small-bracket">(x, t, *args)</span></p></div><p>One update of the predictor.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> – A PyTorch tensor representing the current state</li><li><strong>t</strong> – A Pytorch tensor representing the current time step.</li><li><strong>*args</strong> – Possibly additional arguments, in particular y for OU processes</li></ul></li><li><strong>Returns:</strong> A PyTorch tensor of the next state. x_mean: A PyTorch tensor. The next state without random noise. <blockquote><p>Useful for denoising.</p></blockquote></li><li><strong>Return type:</strong> x</li></ul>',8);function a(c,p){return n(),s("div",null,[t(" _espnet2.enh.diffusion.sampling.predictors.Predictor "),o])}const m=e(i,[["render",a],["__file","Predictor.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet2/enh/Predictor.html","title":"espnet2.enh.diffusion.sampling.predictors.Predictor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"guide/espnet2/enh/Predictor.md","excerpt":"<!-- _espnet2.enh.diffusion.sampling.predictors.Predictor -->\\n<h1>espnet2.enh.diffusion.sampling.predictors.Predictor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.diffusion.sampling.predictors.Predictor<span class=\\"small-bracket\\">(sde, score_fn, probability_flow=False)</span></p></div>\\n"}');export{m as comp,h as data};

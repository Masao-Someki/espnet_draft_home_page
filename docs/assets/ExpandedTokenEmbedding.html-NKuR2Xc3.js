import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,f as n,a as s,o as a}from"./app-KOUU_Wij.js";const r={},o=s('<h1 id="espnet2-asr-decoder-whisper-decoder-expandedtokenembedding" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-decoder-whisper-decoder-expandedtokenembedding"><span>espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding<span class="small-bracket">(ori_emebedding, additional_size)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div><div class="custom-h4"><p><em>property</em> weight</p></div>',11);function t(i,p){return a(),d("div",null,[n(" _espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding "),o])}const h=e(r,[["render",t],["__file","ExpandedTokenEmbedding.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet2/asr/ExpandedTokenEmbedding.html","title":"espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"guide/espnet2/asr/ExpandedTokenEmbedding.md","excerpt":"<!-- _espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding -->\\n<h1>espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.decoder.whisper_decoder.ExpandedTokenEmbedding<span class=\\"small-bracket\\">(ori_emebedding, additional_size)</span></p></div>"}');export{h as comp,m as data};

import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as a,f as d,b as e,d as n,e as r,w as c,a as i,o as l}from"./app-KOUU_Wij.js";const p={},u=e("h1",{id:"espnet2-spk-encoder-ska-tdnn-encoder-skatdnnencoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-spk-encoder-ska-tdnn-encoder-skatdnnencoder"},[e("span",null,"espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder")])],-1),k=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),n(" espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder"),e("span",{class:"small-bracket"},"(input_size: int, block: str = 'Bottle2neck', ndim: int = 1024, model_scale: int = 8, skablock: str = 'ResBlock', ska_dim: int = 128, output_size: int = 1536, **kwargs)")])],-1),m=e("code",null,"AbsEncoder",-1),_=i('<p>SKA-TDNN encoder. Extracts frame-level SKA-TDNN embeddings from features.</p><p>Paper: S. Mun, J. Jung et al., “Frequency and Multi-Scale Selective Kernel : Attention for Speaker Verification,’ in Proc. IEEE SLT 2022.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_size</strong> – input feature dimension.</li><li><strong>block</strong> – type of encoder block class to use.</li><li><strong>model_scale</strong> – scale value of the Res2Net architecture.</li><li><strong>ndim</strong> – dimensionality of the hidden representation.</li><li><strong>output_size</strong> – ouptut embedding dimension.</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function h(f,g){const t=o("RouteLink");return l(),a("div",null,[d(" _espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder "),u,k,e("p",null,[n("Bases: "),r(t,{to:"/guide/espnet2/asr/AbsEncoder.html#espnet2.asr.encoder.abs_encoder.AbsEncoder"},{default:c(()=>[m]),_:1})]),_])}const E=s(p,[["render",h],["__file","SkaTdnnEncoder.html.vue"]]),T=JSON.parse(`{"path":"/guide/espnet2/spk/SkaTdnnEncoder.html","title":"espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.67,"words":202},"filePathRelative":"guide/espnet2/spk/SkaTdnnEncoder.md","excerpt":"<!-- _espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder -->\\n<h1>espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.SkaTdnnEncoder<span class=\\"small-bracket\\">(input_size: int, block: str = 'Bottle2neck', ndim: int = 1024, model_scale: int = 8, skablock: str = 'ResBlock', ska_dim: int = 128, output_size: int = 1536, **kwargs)</span></p></div>"}`);export{E as comp,T as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a,o as n}from"./app-KOUU_Wij.js";const r={},o=a('<h1 id="espnet-nets-pytorch-backend-frontends-feature-transform-globalmvn" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-frontends-feature-transform-globalmvn"><span>espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN<span class="small-bracket">(stats_file: str, norm_means: bool = True, norm_vars: bool = True, eps: float = 1e-20)</span></p></div><p>Bases: <code>Module</code></p><p>Apply global mean and variance normalization</p><ul><li><strong>Parameters:</strong><ul><li><strong>stats_file</strong> (<em>str</em>) – npy file of 1-dim array or text file. From the _first element to the {(len(array) - 1) / 2}th element are treated as the sum of features, and the rest excluding the last elements are treated as the sum of the square value of features, and the last elements eqauls to the number of samples.</li><li><strong>std_floor</strong> (<em>float</em>) –</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>extra_repr()</p></div><p>Set the extra representation of the module</p><p>To print customized extra information, you should re-implement this method in your own modules. Both single-line and multi-line strings are acceptable.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor, ilens: LongTensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',15);function l(i,d){return n(),t("div",null,[s(" _espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN "),o])}const m=e(r,[["render",l],["__file","GlobalMVN.html.vue"]]),f=JSON.parse('{"path":"/guide/espnet/nets/GlobalMVN.html","title":"espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"guide/espnet/nets/GlobalMVN.md","excerpt":"<!-- _espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN -->\\n<h1>espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.frontends.feature_transform.GlobalMVN<span class=\\"small-bracket\\">(stats_file: str, norm_means: bool = True, norm_vars: bool = True, eps: float = 1e-20)</span></p></div>"}');export{m as comp,f as data};

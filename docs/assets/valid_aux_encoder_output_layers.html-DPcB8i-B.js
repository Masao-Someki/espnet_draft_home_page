import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a,o as r}from"./app-KOUU_Wij.js";const n={},l=a('<h1 id="espnet-nets-pytorch-backend-transducer-utils-valid-aux-encoder-output-layers" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-transducer-utils-valid-aux-encoder-output-layers"><span>espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers</span></a></h1><div class="custom-h3"><p>espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers<span class="small-bracket">(aux_layer_id: List[int], enc_num_layers: int, use_symm_kl_div_loss: bool, subsample: List[int])</span></p></div><p>Check whether provided auxiliary encoder layer IDs are valid.</p><p>Return the valid list sorted with duplicates removed.</p><ul><li><strong>Parameters:</strong><ul><li><strong>aux_layer_id</strong> – Auxiliary encoder layer IDs.</li><li><strong>enc_num_layers</strong> – Number of encoder layers.</li><li><strong>use_symm_kl_div_loss</strong> – Whether symmetric KL divergence loss is used.</li><li><strong>subsample</strong> – Subsampling rate per layer.</li></ul></li><li><strong>Returns:</strong> Valid list of auxiliary encoder layers.</li><li><strong>Return type:</strong> valid</li></ul>',5);function i(u,o){return r(),t("div",null,[s(" _espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers "),l])}const c=e(n,[["render",i],["__file","valid_aux_encoder_output_layers.html.vue"]]),p=JSON.parse('{"path":"/guide/espnet/nets/valid_aux_encoder_output_layers.html","title":"espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.25,"words":76},"filePathRelative":"guide/espnet/nets/valid_aux_encoder_output_layers.md","excerpt":"<!-- _espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers -->\\n<h1>espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.transducer.utils.valid_aux_encoder_output_layers<span class=\\"small-bracket\\">(aux_layer_id: List[int], enc_num_layers: int, use_symm_kl_div_loss: bool, subsample: List[int])</span></p></div>"}');export{c as comp,p as data};

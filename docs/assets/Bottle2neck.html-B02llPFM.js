import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as t,a as s,o as a}from"./app-KOUU_Wij.js";const o={},c=s('<h1 id="espnet2-spk-encoder-ska-tdnn-encoder-bottle2neck" tabindex="-1"><a class="header-anchor" href="#espnet2-spk-encoder-ska-tdnn-encoder-bottle2neck"><span>espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck<span class="small-bracket">(inplanes, planes, kernel_size=None, kernel_sizes=[5, 7], dilation=None, scale=8, group=1)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function d(r,l){return a(),n("div",null,[t(" _espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck "),c])}const k=e(o,[["render",d],["__file","Bottle2neck.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet2/spk/Bottle2neck.html","title":"espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"guide/espnet2/spk/Bottle2neck.md","excerpt":"<!-- _espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck -->\\n<h1>espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.Bottle2neck<span class=\\"small-bracket\\">(inplanes, planes, kernel_size=None, kernel_sizes=[5, 7], dilation=None, scale=8, group=1)</span></p></div>"}');export{k as comp,h as data};

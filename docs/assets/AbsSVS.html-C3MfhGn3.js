import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as t,a}from"./app-KOUU_Wij.js";const n={},r=a('<p>&lt;!-- _espnet2.svs.abs_svs.AbsSVS --&gt;</p><h1 id="espnet2-svs-abs-svs-abssvs" tabindex="-1"><a class="header-anchor" href="#espnet2-svs-abs-svs-abssvs"><span>espnet2.svs.abs_svs.AbsSVS</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.svs.abs_svs.AbsSVS</p></div><p>Bases: <code>Module</code>, <code>ABC</code></p><p>SVS abstract class.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>abstract</em> forward<span class="small-bracket">(text: Tensor, text_lengths: Tensor, feats: Tensor, feats_lengths: Tensor, **kwargs)</span></p></div><p>Calculate outputs and return the loss tensor.</p><div class="custom-h4"><p><em>abstract</em> inference<span class="small-bracket">(text: Tensor, **kwargs)</span></p></div><p>Return predicted output as a dict.</p><div class="custom-h4"><p><em>property</em> require_raw_singing</p></div><p>Return whether or not raw_singing is required.</p><div class="custom-h4"><p><em>property</em> require_vocoder</p></div><p>Return whether or not vocoder is required.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',15),p=[r];function o(c,d){return t(),e("div",null,p)}const v=s(n,[["render",o],["__file","AbsSVS.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet2/svs/AbsSVS.html","title":"espnet2.svs.abs_svs.AbsSVS","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.45,"words":135},"filePathRelative":"guide/espnet2/svs/AbsSVS.md","excerpt":"<p>&lt;!-- _espnet2.svs.abs_svs.AbsSVS --&gt;</p>\\n<h1>espnet2.svs.abs_svs.AbsSVS</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.svs.abs_svs.AbsSVS</p></div>\\n<p>Bases: <code>Module</code>, <code>ABC</code></p>\\n<p>SVS abstract class.</p>\\n<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>"}');export{v as comp,m as data};

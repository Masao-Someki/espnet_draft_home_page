import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as h,b as s,d as i,e as n,w as t,a as e,o as p}from"./app-KOUU_Wij.js";const d={},o=e(`<h1 id="espnet2-tutorial" tabindex="-1"><a class="header-anchor" href="#espnet2-tutorial"><span>ESPnet2 Tutorial</span></a></h1><p>We are planning a super major update, called <code>ESPnet2</code>. The developing status is still <strong>under construction</strong> yet, so please be very careful to use with understanding following cautions:</p><ul><li>There might be fatal bugs related to essential parts.</li><li>We haven&#39;t achieved comparable results to espnet1 on each task yet.</li></ul><h2 id="main-changing-from-espnet1" tabindex="-1"><a class="header-anchor" href="#main-changing-from-espnet1"><span>Main changing from ESPnet1</span></a></h2><ul><li><strong>Chainer free</strong><ul><li>Discarding Chainer completely.</li><li>The development of Chainer is stopped at v7: https://chainer.org/announcement/2019/12/05/released-v7.html</li></ul></li><li><strong>Kaldi free</strong><ul><li>It&#39;s not mandatory to compile Kaldi.</li><li><strong>If you find some recipes requiring Kaldi mandatory, please report it. It should be dealt with as a bug in ESPnet2.</strong></li><li>We still support the features made by Kaldi optionally.</li><li>We still follow Kaldi style. i.e. depending on <code>utils/</code> of Kaldi.</li></ul></li><li><strong>On the fly</strong> feature extraction &amp; text preprocessing for training <ul><li>You don&#39;t need to create the feature file before training, but just input wave data directly.</li><li>We support both raw wave input and extracted features.</li><li>The preprocessing for text, tokenization to characters, or sentencepieces, can be also applied during training.</li><li>Support <strong>self-supervised learning representations</strong> from s3prl</li></ul></li><li>Discarding the JSON format describing the training corpus. <ul><li>Why do we discard the JSON format? Because a dict object generated from a large JSON file requires much memory and it also takes much time to parse such a large JSON file.</li></ul></li><li>Support distributed data-parallel training (Not enough tested) <ul><li>Single node multi GPU training with <code>DistributedDataParallel</code> is also supported.</li></ul></li></ul><h2 id="recipes-using-espnet2" tabindex="-1"><a class="header-anchor" href="#recipes-using-espnet2"><span>Recipes using ESPnet2</span></a></h2><p>You can find the new recipes in <code>egs2</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>espnet/  # Python modules of espnet1</span></span>
<span class="line"><span>espnet2/ # Python modules of espnet2</span></span>
<span class="line"><span>egs/     # espnet1 recipes</span></span>
<span class="line"><span>egs2/    # espnet2 recipes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The usage of recipes is <strong>almost the same</strong> as that of ESPnet1.</p>`,9),k=e(`<li><p>Change directory to the base directory</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># e.g.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> egs2/an4/asr1/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>an4</code> is a tiny corpus and can be freely obtained, so it might be suitable for this tutorial. You can perform any other recipes as the same way. e.g. <code>wsj</code>, <code>librispeech</code>, and etc.</p><p>Keep in mind that all scripts should be ran at the level of <code>egs2/*/{asr1,tts1,...}</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Doesn&#39;t work</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> egs2/an4/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./asr1/run.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./asr1/scripts/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">some-script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Doesn&#39;t work</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> egs2/an4/asr1/local/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./data.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Work</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> egs2/an4/asr1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./scripts/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">some-script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),c=e(`<p>Change the configuration Describing the directory structure as follows:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>egs2/an4/asr1/</span></span>
<span class="line"><span> - conf/      # Configuration files for training, inference, etc.</span></span>
<span class="line"><span> - scripts/   # Bash utilities of espnet2</span></span>
<span class="line"><span> - pyscripts/ # Python utilities of espnet2</span></span>
<span class="line"><span> - steps/     # From Kaldi utilities</span></span>
<span class="line"><span> - utils/     # From Kaldi utilities</span></span>
<span class="line"><span> - db.sh      # The directory path of each corpora</span></span>
<span class="line"><span> - path.sh    # Setup script for environment variables</span></span>
<span class="line"><span> - cmd.sh     # Configuration for your backend of job scheduler</span></span>
<span class="line"><span> - run.sh     # Entry point</span></span>
<span class="line"><span> - asr.sh     # Invoked by run.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),u=e(`<li><p>You need to modify <code>db.sh</code> for specifying your corpus before executing <code>run.sh</code>. For example, when you touch the recipe of <code>egs2/wsj</code>, you need to change the paths of <code>WSJ0</code> and <code>WSJ1</code> in <code>db.sh</code>.</p></li><li><p>Some corpora can be freely obtained from the WEB and they are written as &quot;downloads/&quot; at the initial state. You can also change them to your corpus path if it&#39;s already downloaded.</p></li><li><p><code>path.sh</code> is used to set up the environment for <code>run.sh</code>. Note that the Python interpreter used for ESPnet is not the current Python of your terminal, but it&#39;s the Python which was installed at <code>tools/</code>. Thus you need to source <code>path.sh</code> to use this Python.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> path.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">python</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,3),g=s("code",null,"cmd.sh",-1),m=e('<li><p>Run <code>run.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>run.sh</code> is an example script, which we often call as &quot;recipe&quot;, to run all stages related to DNN experiments; data-preparation, training, and evaluation.</p></li>',1),b=e(`<h2 id="see-training-status" tabindex="-1"><a class="header-anchor" href="#see-training-status"><span>See training status</span></a></h2><h3 id="show-the-log-file" tabindex="-1"><a class="header-anchor" href="#show-the-log-file"><span>Show the log file</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exp/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">_train_</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/train.log</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[host] 2020-04-05 16:34:54,278 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">trainer:192</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) INFO: 2/40epoch started. Estimated </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> to finish: 7 minutes and 58.63 seconds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[host] 2020-04-05 16:34:56,315 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">trainer:453</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) INFO: 2epoch:train:1-10batch: </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">iter_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.006,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> forward_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.076,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> loss</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">50.873,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> los</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">s_att</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">35.801,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> loss_ctc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">65.945,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> acc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.471,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> backward_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.072,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> optim_step_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.006,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lr_0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">1.000,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> train_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.203</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[host] 2020-04-05 16:34:58,046 (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">trainer:453</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) INFO: 2epoch:train:11-20batch: </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">iter_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">4.280e-05,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> forward_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">0.068,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> loss</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">44.369</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> loss_att=28.776,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> loss_ctc=59.962,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> acc=0.506,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> backward_time=0.055,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> optim_step_time=0.006,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> lr_0=1.000,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> train_time=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.173</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="show-the-training-status-in-a-image-file" tabindex="-1"><a class="header-anchor" href="#show-the-training-status-in-a-image-file"><span>Show the training status in a image file</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Accuracy plot</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># (eog is Eye of GNOME Image Viewer)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">eog</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exp/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">_train_</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/images/acc.img</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Attention plot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">eog</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exp/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">_train_</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/att_ws/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sample-id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">param-name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.img</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use-tensorboard" tabindex="-1"><a class="header-anchor" href="#use-tensorboard"><span>Use tensorboard</span></a></h3><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">tensorboard</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --logdir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> exp/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">_train_</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/tensorboard/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="instruction-for-run-sh" tabindex="-1"><a class="header-anchor" href="#instruction-for-run-sh"><span>Instruction for run.sh</span></a></h1><h2 id="how-to-parse-command-line-arguments-in-shell-scripts" tabindex="-1"><a class="header-anchor" href="#how-to-parse-command-line-arguments-in-shell-scripts"><span>How to parse command-line arguments in shell scripts?</span></a></h2><p>All shell scripts in espnet/espnet2 depend on <a href="https://github.com/kaldi-asr/kaldi/blob/master/egs/wsj/s5/utils/parse_options.sh" target="_blank" rel="noopener noreferrer">utils/parse_options.sh</a> to parase command line arguments.</p><p>e.g. If the script has <code>ngpu</code> option</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#!/usr/bin/env bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># run.sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ngpu</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> utils/parse_options.sh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ngpu</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you can change the value as follows:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --ngpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also show the help message:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="start-from-a-specified-stage-and-stop-at-a-specified-stage" tabindex="-1"><a class="header-anchor" href="#start-from-a-specified-stage-and-stop-at-a-specified-stage"><span>Start from a specified stage and stop at a specified stage</span></a></h2><p>The procedures in <code>run.sh</code> can be divided into some stages, e.g. data preparation, training, and evaluation. You can specify the starting stage and the stopping stage.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --stage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --stop-stage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>There are also some altenative otpions to skip specified stages:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_data_prep</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # Skip data preparation stages.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_train</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">      # Skip training stages.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_eval</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">       # Skip decoding and evaluation stages.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_packing</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_upload_hf</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # Enable packing and uploading to huggingface stages.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that <code>skip_upload</code> and <code>skip_upload_hf</code> are true by default. Please change them to false when uploading your model.</p><h2 id="change-the-configuration-for-training" tabindex="-1"><a class="header-anchor" href="#change-the-configuration-for-training"><span>Change the configuration for training</span></a></h2><p>Please keep in mind that <code>run.sh</code> is a wrapper script of several tools including DNN training command. You need to do one of the following two ways to change the training configuration.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Give a configuration file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --asr_config</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> conf/train_asr.yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Give arguments to &quot;espnet2/bin/asr_train.py&quot; directly</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --asr_args</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;--foo arg --bar arg2&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>e.g. To change learning rate for the LM training</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --lm_args</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;--optim_conf lr=0.1&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This is the case of ASR training and you need to replace it accordingly for the other task. e.g. For TTS</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --tts_args</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;--optim_conf lr=0.1&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,29),f=e(`<h2 id="change-the-number-of-parallel-jobs" tabindex="-1"><a class="header-anchor" href="#change-the-number-of-parallel-jobs"><span>Change the number of parallel jobs</span></a></h2><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --nj</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             # Chnage the number of parallels for data preparation stages.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --inference_nj</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">   # Chnage the number of parallels for inference jobs.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),v=e(`<h2 id="multi-gpus-training-and-distributed-training" tabindex="-1"><a class="header-anchor" href="#multi-gpus-training-and-distributed-training"><span>Multi GPUs training and distributed training</span></a></h2><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --ngpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 4GPUs in a single node</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --ngpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --num_nodes</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 2GPUs x 2nodes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that you need to setup your environment correctly to use distributed training. See the following two:</p>`,3),y=e(`<h3 id="relationship-between-mini-batch-size-and-number-of-gpus" tabindex="-1"><a class="header-anchor" href="#relationship-between-mini-batch-size-and-number-of-gpus"><span>Relationship between mini-batch size and number of GPUs</span></a></h3><p>The behavior of batch size in ESPnet2 during multi-GPU training is different from that in ESPnet1. <strong>In ESPnet2, the total batch size is not changed regardless of the number of GPUs.</strong> Therefore, you need to manually increase the batch size if you increase the number of GPUs. Please refer to this <a href="https://espnet.github.io/espnet/espnet2_training_option.html#the-relation-between-mini-batch-size-and-number-of-gpus" target="_blank" rel="noopener noreferrer">doc</a> for more information.</p><h2 id="use-specified-experiment-directory-for-evaluation" tabindex="-1"><a class="header-anchor" href="#use-specified-experiment-directory-for-evaluation"><span>Use specified experiment directory for evaluation</span></a></h2><p>If you already have trained a model, you may wonder how to give it to run.sh when you&#39;ll evaluate it later. By default the directory name is determined according to given options, <code>asr_args</code>, <code>lm_args</code>, or etc. You can overwrite it by <code>--asr_exp</code> and <code>--lm_exp</code>.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># For ASR recipe</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_data_prep</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_train</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --asr_exp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">your_asr_exp_directory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--lm_exp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">your_lm_exp_directory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># For TTS recipe</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_data_prep</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_train</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --tts_exp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">your_tts_exp_directory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="evaluation-without-training-using-pretrained-model" tabindex="-1"><a class="header-anchor" href="#evaluation-without-training-using-pretrained-model"><span>Evaluation without training using pretrained model</span></a></h2><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --download_model</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">model_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--skip_train</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You need to fill <code>model_name</code> by yourself. You can search for pretrained models on Hugging Face using the tag <a href="https://huggingface.co/models?library=espnet" target="_blank" rel="noopener noreferrer">espnet</a></p><p>(Deprecated: See the following link about our pretrain models: https://github.com/espnet/espnet_model_zoo)</p><h3 id="evaluation-using-openai-whisper" tabindex="-1"><a class="header-anchor" href="#evaluation-using-openai-whisper"><span>Evaluation using OpenAI Whisper</span></a></h3><p>ESPnet2 provides a <a href="../egs2/TEMPLATE/asr1/scripts/utils/evaluate_asr.sh">script</a> to run inference and scoring using OpenAI&#39;s Whisper. This can be used to evaluate speech generation models. Here is an example:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#!/usr/bin/env bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Set bash to &#39;debug&#39; mode, it will exit on :</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># -e &#39;error&#39;, -u &#39;undefined variable&#39;, -o ... &#39;error in pipeline&#39;, -x &#39;print commands&#39;,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -e</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -u</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pipefail</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">whisper_tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">medium</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # whisper model tag, e.g., small, medium, large, etc</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cleaner</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">whisper_en</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">hyp_cleaner</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">whisper_en</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">nj</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">test_sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;test/WSJ/test_eval92&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># decode_options is used in Whisper model&#39;s transcribe method</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">decode_options</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;{language: en, task: transcribe, temperature: 0, beam_size: 10, fp16: False}&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">test_sets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    wavscp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">dump/raw/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/wav.scp</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # path to wav.scp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    outdir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">whisper-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">whisper_tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">_outputs/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}  </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># path to save output</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    gt_text</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">dump/raw/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/text</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">      # path to groundtruth text file (for scoring only)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    scripts/utils/evaluate_asr.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --whisper_tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">whisper_tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --nj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">nj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --gpu_inference</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --stage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --stop_stage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --cleaner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cleaner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --hyp_cleaner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">hyp_cleaner</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --decode_options</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">decode_options</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">}&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        --gt_text</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">gt_text</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">wavscp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">outdir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="packing-and-sharing-your-trained-model" tabindex="-1"><a class="header-anchor" href="#packing-and-sharing-your-trained-model"><span>Packing and sharing your trained model</span></a></h2><p>ESPnet encourages you to share your results using platforms like <a href="https://huggingface.co/" target="_blank" rel="noopener noreferrer">Hugging Face</a>.</p><p>For sharing your models, the last three stages of each task simplify this process. The model is packed into a zip file and uploaded to the selected platform (one or both).</p><p>For <strong>Hugging Face</strong>, you need to first create a repository (<code>&amp;lt;my_repo&amp;gt; = &amp;lt;user_name&amp;gt;/&amp;lt;repo_name&amp;gt;</code>). Remember to install <code>git-lfs </code> before continuing. Then, execute <code>run.sh</code> as follows:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --stage</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">packing</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stage</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">--skip-packing</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip-upload-hf</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --hf-repo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">my_repo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">gt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The stage number differs according to the task. Please read the task-specific shell script (e.g., <code>asr1/asr.sh</code>) to see the number to specify. The packed model can be uploaded to huggingface by setting the previously mentioned flags.</p><h2 id="usage-of-self-supervised-learning-representations-as-feature" tabindex="-1"><a class="header-anchor" href="#usage-of-self-supervised-learning-representations-as-feature"><span>Usage of Self-Supervised Learning Representations as feature</span></a></h2><p>ESPnet supports self-supervised learning representations (SSLR) to replace traditional spectrum features. In some cases, SSLRs can boost the performance.</p><p>To use SSLRs in your task, you need to make several modifications.</p><h3 id="prerequisite" tabindex="-1"><a class="header-anchor" href="#prerequisite"><span>Prerequisite</span></a></h3><ol><li>Install <a href="https://github.com/s3prl/s3prl" target="_blank" rel="noopener noreferrer">S3PRL</a> by <code>tools/installers/install_s3prl.sh</code>.</li><li>If HuBERT / Wav2Vec is needed, <a href="https://github.com/pytorch/fairseq" target="_blank" rel="noopener noreferrer">fairseq</a> should be installed by <code>tools/installers/install_fairseq.sh</code>.</li></ol><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><ol><li><p>To reduce the time used in <code>collect_stats</code> step, please specify <code>--feats_normalize uttmvn</code> in <code>run.sh</code> and pass it as arguments to <code>asr.sh</code> or other task-specific scripts. (Recommended)</p></li><li><p>In the configuration file, specify the <code>frontend</code> and <code>preencoder</code>. Taking <code>HuBERT</code> as an example: The <code>upstream</code> name can be whatever supported in S3PRL. <code>multilayer-feature=True</code> means the final representation is a weighted-sum of all layers&#39; hidden states from SSLR model.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>frontend: s3prl</span></span>
<span class="line"><span>frontend_conf:</span></span>
<span class="line"><span>   frontend_conf:</span></span>
<span class="line"><span>      upstream: hubert_large_ll60k  # Note: If the upstream is changed, please change the input_size in the preencoder.</span></span>
<span class="line"><span>   download_dir: ./hub</span></span>
<span class="line"><span>   multilayer_feature: True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here the <code>preencoder</code> is to reduce the input dimension to the encoder, to reduce the memory cost. The <code>input_size</code> depends on the upstream model, while the <code>output_size</code> can be set to any values.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>preencoder: linear</span></span>
<span class="line"><span>preencoder_conf:</span></span>
<span class="line"><span>   input_size: 1024  # Note: If the upstream is changed, please change this value accordingly.</span></span>
<span class="line"><span>   output_size: 80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Because the shift sizes of different <code>upstream</code> models are different, e.g. <code>HuBERT</code> and <code>Wav2Vec2.0</code> have <code>20ms</code> frameshift. Sometimes, the downsampling rate (<code>input_layer</code>) in the <code>encoder</code> configuration need to be changed. For example, using <code>input_layer: conv2d2</code> will results in a total frameshift of <code>40ms</code>, which is enough for some tasks.</p></li></ol><h2 id="streaming-asr" tabindex="-1"><a class="header-anchor" href="#streaming-asr"><span>Streaming ASR</span></a></h2><p>ESPnet supports streaming Transformer/Conformer ASR with blockwise synchronous beam search.</p><p>For more details, please refer to the <a href="https://arxiv.org/pdf/2006.14941.pdf" target="_blank" rel="noopener noreferrer">paper</a>.</p><h3 id="training" tabindex="-1"><a class="header-anchor" href="#training"><span>Training</span></a></h3><p>To achieve streaming ASR, please employ blockwise Transformer/Conformer encoder in the configuration file. Taking <code>blockwise Transformer</code> as an example: The <code>encoder</code> name can be <code>contextual_block_transformer</code> or <code>contextual_block_conformer</code>.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">encoder:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> contextual_block_transformer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">encoder_conf:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    block_size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 40</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">         # block size for block processing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    hop_size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">           # hop size for block processing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    look_ahead:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">         # look-ahead size for block processing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    init_average:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">     # whether to use average input as initial context</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    ctx_pos_enc:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">      # whether to use positional encoding for the context vectors</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="decoding" tabindex="-1"><a class="header-anchor" href="#decoding"><span>Decoding</span></a></h3><p>To enable online decoding, the argument <code>--use_streaming true</code> should be added to <code>run.sh</code>.</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --stage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --use_streaming</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h3><ol><li>Issue about <code>&#39;NoneType&#39; object has no attribute &#39;max&#39;</code> during training: Please make sure you employ <code>forward_train</code> function during traininig, check more details <a href="https://github.com/espnet/espnet/issues/3803" target="_blank" rel="noopener noreferrer">here</a>.</li><li>I successfully trained the model, but encountered the above issue during decoding: You may forget to specify <code>--use_streaming true</code> to select streaming inference.</li></ol><h2 id="real-time-factor-and-latency" tabindex="-1"><a class="header-anchor" href="#real-time-factor-and-latency"><span>Real-Time-Factor and Latency</span></a></h2><p>In order to calculate real-time-factor and (non-streaming) latency the script <code>utils/calculate_rtf.py</code> has been reworked and can now be used for both ESPnet1 and ESPnet2. The script calculates inference times based on time markers in the decoding log files and reports the average real-time-factor (RTF) and average latency over all decoded utterances. For ESPnet2, the script will automatically be run (see <a href="#limitations">Limitations</a> section below) after the decoding stage has finished but can also be run as a stand-alone script:</p><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1"><span>Usage</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>usage: calculate_rtf.py [-h] [--log-dir LOG_DIR]</span></span>
<span class="line"><span>                        [--log-name {decode,asr_inference}]</span></span>
<span class="line"><span>                        [--input-shift INPUT_SHIFT]</span></span>
<span class="line"><span>                        [--start-times-marker {input lengths,speech length}]</span></span>
<span class="line"><span>                        [--end-times-marker {prediction,best hypo}]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>calculate real time factor (RTF)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>optional arguments:</span></span>
<span class="line"><span>  -h, --help            show this help message and exit</span></span>
<span class="line"><span>  --log-dir LOG_DIR     path to logging directory</span></span>
<span class="line"><span>  --log-name {decode,asr_inference}</span></span>
<span class="line"><span>                        name of logfile, e.g., &#39;decode&#39; (espnet1) and</span></span>
<span class="line"><span>                        &#39;asr_inference&#39; (espnet2)</span></span>
<span class="line"><span>  --input-shift INPUT_SHIFT</span></span>
<span class="line"><span>                        shift of inputs in milliseconds</span></span>
<span class="line"><span>  --start-times-marker {input lengths,speech length}</span></span>
<span class="line"><span>                        String marking start of decoding in logfile, e.g.,</span></span>
<span class="line"><span>                        &#39;input lengths&#39; (espnet1) and &#39;speech length&#39;</span></span>
<span class="line"><span>                        (espnet2)</span></span>
<span class="line"><span>  --end-times-marker {prediction,best hypo}</span></span>
<span class="line"><span>                        String marking end of decoding in logfile, e.g.,</span></span>
<span class="line"><span>                        &#39;prediction&#39; (espnet1) and &#39;best hypo&#39; (espnet2)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h3><ul><li><p>Default settings still target ESPnet1 usage:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>--log-name &#39;decode&#39;</span></span>
<span class="line"><span>--input-shift 10.0</span></span>
<span class="line"><span>--start-times-marker &#39;input lengths&#39;</span></span>
<span class="line"><span>--end-times-marker &#39;prediction&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>For ESPnet2, other frame shifts than 10ms are possible via different front-end/feature configurations. So different to ESPnet1, which logs the input feature frames at a fixed 10ms frame shift, in ESPnet2 the number of speech samples is logged instead and the audio sample shift in milliseconds (1/sampleRate x 1000) needs to be specified for <code>--input-shift</code> parameter (see <code>--input-shift 0.0625</code> in example below for 16000 Hz sample rate).</p></li></ul><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><p>From <code>espnet/egs2/librispeech/asr1</code> the following call runs the decoding stage with pretrained ESPnet2 model:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./run.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --stage</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  --use_streaming</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_data_prep</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --skip_train</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --download_model</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> byan/librispeech_asr_train_asr_conformer_raw_bpe_batch_bins30000000_accum_grad3_optim_conflr0.001_sp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Results for latency and rtf calculation on Librispeech test_clean subset can then be found in <code>espnet/egs2/librispeech/asr1/exp/byan/librispeech_asr_train_asr_conformer_raw_bpe_batch_bins30000000_accum_grad3_optim_conflr0.001_sp/decode_asr_lm_lm_train_lm_transformer2_en_bpe5000_valid.loss.ave_asr_model_valid.acc.ave/test_clean/logdir/calculate_rtf.log</code> file:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># ../../../utils/calculate_rtf.py --log-dir exp/byan/librispeech_asr_train_asr_conformer_raw_bpe_batch_bins30000000_accum_grad3_optim_conflr0.001_sp/decode_as</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">r_lm_lm_train_lm_transformer2_en_bpe5000_valid.loss.ave_asr_model_valid.acc.ave/test_clean/logdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --log-name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> asr_inference</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --input-shift</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0.0625</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --start-times-</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">marker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;speech length&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --end-times-marker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;best hypo&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Total</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> audio</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> duration:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 19452.481</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [sec]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Total</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> decoding</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> time:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 137762.231</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [sec]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">RTF:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 7.082</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Latency:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 52581.004</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [ms/sentence]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations"><span>Limitations</span></a></h3><ul><li>Only non-streaming inference mode is supported currently</li><li>The decoding stage 12 in <code>asr.sh</code> automatically runs the rtf &amp; latency calculation if <code>&quot;asr_inference_tool == &quot;espnet2.bin.asr_inference&quot;</code>; other inference tools like k2 &amp; maskctc are still left to do</li></ul><h2 id="transducer-asr" tabindex="-1"><a class="header-anchor" href="#transducer-asr"><span>Transducer ASR</span></a></h2><p><em><strong>Important</strong></em>: If you encounter any issue related to <code>warp-transducer</code>, please open an issue in <a href="https://github.com/b-flo/warp-transducer" target="_blank" rel="noopener noreferrer">our forked repo</a>.</p><p>ESPnet2 supports models trained with the (RNN-)Tranducer loss, aka Transducer models. Currently, two versions of these models exist within ESPnet2: one under <code>asr</code> and the other under <code>asr_transducer</code>. The first one is designed as a supplement of CTC-Attention ASR models while the second is designed independently and purely for the Transducer task. For that, we rely on <code>ESPnetASRTransducerModel</code> instead of <code>ESPnetASRModel</code> and a new task called <code>ASRTransducerTask</code> is used in place of <code>ASRTask</code>.</p><p>For the user, it means two things. First, some features or modules may not be supported depending on the version used. Second, the usage of some common ASR features or modules may differ between the models. In addition, some core modules (e.g.: <code>preencoder</code> or <code>postencoder</code>) may be missing in the standalone version until validation.</p><p><em><strong>The following sections of this tutorial are dedicated to the introduction of the version under asr_transducer</strong></em>. Thus, the user should keep in mind that most features described here may not be available in the other version.</p><h3 id="general-usage" tabindex="-1"><a class="header-anchor" href="#general-usage"><span>General usage</span></a></h3><p>To enable Transducer model training or decoding in your experiments, the following option should be supplied to <code>asr.sh</code> in your <code>run.sh</code>:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">asr.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --asr_task</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> asr_transducer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>For Transducer loss computation during training, we rely by default on a fork of <code>warp-transducer</code>. The installation procedure is described <a href="https://espnet.github.io/espnet/installation.html#step-3-optional-custom-tool-installation" target="_blank" rel="noopener noreferrer">here</a>.</p><p><strong>Note:</strong> We made available FastEmit regularization <a href="https://arxiv.org/pdf/2010.11148" target="_blank" rel="noopener noreferrer">[Yu et al., 2021]</a> during loss computation. To enable it, <code>fastemit_lambda</code> need to be set in <code>model_conf</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>    model_conf:</span></span>
<span class="line"><span>      fastemit_lambda: Regularization parameter for FastEmit. (float, default = 0.0)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Optionnaly, we also support training with the Pruned RNN-T loss <a href="https://arxiv.org/pdf/2206.13236.pdf" target="_blank" rel="noopener noreferrer">[Kuang et al. 2022]</a> made available in the <a href="https://github.com/k2-fsa/k2" target="_blank" rel="noopener noreferrer">k2</a> toolkit. To use it, the parameter <code>use_k2_pruned_loss</code> should be set to <code>True</code> in <code>model_conf</code>. From here, the loss computation can be controlled by setting the following parameters through <code>k2_pruned_loss_args</code> in <code>model_conf</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>model_conf:</span></span>
<span class="line"><span>  use_k2_pruned_loss: True</span></span>
<span class="line"><span>  k2_pruned_loss_args:</span></span>
<span class="line"><span>    prune_range: How many tokens by frame are used compute the pruned loss. (int, default = 5)</span></span>
<span class="line"><span>    simple_loss_scaling: The weight to scale the simple loss after warm-up. (float, default = 0.5)</span></span>
<span class="line"><span>    lm_scale: The scale factor to smooth the LM part. (float, default = 0.0)</span></span>
<span class="line"><span>    am_scale: The scale factor to smooth the AM part. (float, default = 0.0)</span></span>
<span class="line"><span>    loss_type: Define the type of path to take for loss computation, either &#39;regular&#39;, &#39;smoothed&#39; or &#39;constrained&#39;. (str, default = &quot;regular&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note:</strong> Because the number of tokens emitted by timestep can be restricted during training with this version, we also make available the parameter <code>validation_nstep</code>. It let the users apply similar constraints during the validation process, when reporting CER or/and WER:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>model_conf:</span></span>
<span class="line"><span>  validation_nstep: Maximum number of symbol expansions at each time step when reporting CER or/and WER using mAES.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>For more information, see section Inference and &quot;modified Adaptive Expansion Search&quot; algorithm.</p><h3 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture"><span>Architecture</span></a></h3><p>The architecture is composed of three modules: encoder, decoder and joint network. Each module has one (or three) config(s) with various parameters in order to configure the internal parts. The following sections describe the mandatory and optional parameters for each module.</p><h4 id="encoder" tabindex="-1"><a class="header-anchor" href="#encoder"><span>Encoder</span></a></h4><p>For the encoder, we propose a unique encoder type encapsulating the following blocks: Branchformer, Conformer, Conv 1D and E-Branchformer. It is similar to the custom encoder in ESPnet1, meaning we don&#39;t need to set the parameter <code>encoder: [type]</code> here. Instead, the encoder architecture is defined by three configurations passed to <code>encoder_conf</code>:</p><ol><li><code>input_conf</code> (<strong>Dict</strong>): The configuration for the input block.</li><li><code>main_conf</code> (<strong>Dict</strong>): The main configuration for the parameters shared across all blocks.</li><li><code>body_conf</code> (<strong>List[Dict]</strong>): The list of configurations for each block of the encoder architecture but the input block.</li></ol><p>The first and second configurations are optional. If needed, the following parameters can be modified in each configuration:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>main_conf:</span></span>
<span class="line"><span>  pos_wise_act_type: Conformer position-wise feed-forward activation type. (str, default = &quot;swish&quot;)</span></span>
<span class="line"><span>  conv_mod_act_type: Conformer convolution module activation type. (str, default = &quot;swish&quot;)</span></span>
<span class="line"><span>  pos_enc_dropout_rate: Dropout rate for the positional encoding layer, if used. (float, default = 0.0)</span></span>
<span class="line"><span>  pos_enc_max_len: Positional encoding maximum length. (int, default = 5000)</span></span>
<span class="line"><span>  simplified_att_score: Whether to use simplified attention score computation. (bool, default = False)</span></span>
<span class="line"><span>  norm_type: X-former normalization module type. (str, default = &quot;layer_norm&quot;)</span></span>
<span class="line"><span>  conv_mod_norm_type: Branchformer convolution module normalization type. (str, default = &quot;layer_norm&quot;)</span></span>
<span class="line"><span>  after_norm_eps: Epsilon value for the final normalization module. (float, default = 1e-05 or 0.25 for BasicNorm)</span></span>
<span class="line"><span>  after_norm_partial: Partial value for the final normalization module, if norm_type = &#39;rms_norm&#39;. (float, default = -1.0)</span></span>
<span class="line"><span>  blockdrop_rate: Probability threshold of dropping out each encoder block. (float, default = 0.0)</span></span>
<span class="line"><span>  # For more information on the parameters below, please refer to espnet2/asr_transducer/activation.py</span></span>
<span class="line"><span>  ftswish_threshold: Threshold value for FTSwish activation formulation.</span></span>
<span class="line"><span>  ftswish_mean_shift: Mean shifting value for FTSwish activation formulation.</span></span>
<span class="line"><span>  hardtanh_min_val: Minimum value of the linear region range for HardTanh activation. (float, default = -1.0)</span></span>
<span class="line"><span>  hardtanh_max_val: Maximum value of the linear region range for HardTanh. (float, default = 1.0)</span></span>
<span class="line"><span>  leakyrelu_neg_slope: Negative slope value for LeakyReLU activation formulation.</span></span>
<span class="line"><span>  smish_alpha: Alpha value for Smish variant activation fomulation. (float, default = 1.0)</span></span>
<span class="line"><span>  smish_beta: Beta value for Smish variant activation formulation. (float, default = 1.0)</span></span>
<span class="line"><span>  softplus_beta: Beta value for softplus activation formulation in Mish activation. (float, default = 1.0)</span></span>
<span class="line"><span>  softplus_threshold: Values above this revert to a linear function in Mish activation. (int, default = 20)</span></span>
<span class="line"><span>  swish_beta: Beta value for E-Swish activation formulation. (float, default = 20)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>input_conf:</span></span>
<span class="line"><span>  block_type: Input block type, either &quot;conv2d&quot; or &quot;vgg&quot;. (str, default = &quot;conv2d&quot;)</span></span>
<span class="line"><span>  conv_size: Convolution output size. For &quot;vgg&quot;, the two convolution outputs can be controlled by passing a tuple. (int, default = 256)</span></span>
<span class="line"><span>  subsampling_factor: Subsampling factor of the input block, either 2 (only conv2d), 4 or 6. (int, default = 4)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The only mandatory configuration is <code>body_conf</code>, defining the encoder body architecture block by block. Each block has its own set of mandatory and optional parameters depending on the type, defined by <code>block_type</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># Branchformer</span></span>
<span class="line"><span>- block_type: branchformer</span></span>
<span class="line"><span>  hidden_size: Hidden (and output) dimension. (int)</span></span>
<span class="line"><span>  linear_size: Dimension of the Linear layers. (int)</span></span>
<span class="line"><span>  conv_mod_kernel_size: Size of the convolving kernel in the ConvolutionalSpatialGatingUnit module. (int)</span></span>
<span class="line"><span>  heads (optional): Number of heads in multi-head attention. (int, default = 4)</span></span>
<span class="line"><span>  norm_eps (optional): Epsilon value for the normalization module. (float, default = 1e-05 or 0.25 for BasicNorm)</span></span>
<span class="line"><span>  norm_partial (optional): Partial value for the normalization module, if norm_type = &#39;rms_norm&#39;. (float, default = -1.0)</span></span>
<span class="line"><span>  conv_mod_norm_eps (optional): Epsilon value for ConvolutionalSpatialGatingUnit module normalization. (float, default = 1e-05 or 0.25 for BasicNorm)</span></span>
<span class="line"><span>  conv_mod_norm_partial (optional): Partial value for the ConvolutionalSpatialGatingUnit module normalization, if conv_norm_type = &#39;rms_norm&#39;. (float, default = -1.0)</span></span>
<span class="line"><span>  dropout_rate (optional): Dropout rate for some intermediate layers. (float, default = 0.0)</span></span>
<span class="line"><span>  att_dropout_rate (optional): Dropout rate for the attention module. (float, default = 0.0)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Conformer</span></span>
<span class="line"><span>- block_type: conformer</span></span>
<span class="line"><span>  hidden_size: Hidden (and output) dimension. (int)</span></span>
<span class="line"><span>  linear_size: Dimension of feed-forward module. (int)</span></span>
<span class="line"><span>  conv_mod_kernel_size: Size of the convolving kernel in the ConformerConvolution module. (int)</span></span>
<span class="line"><span>  heads (optional): Number of heads in multi-head attention. (int, default = 4)</span></span>
<span class="line"><span>  norm_eps (optional): Epsilon value for normalization module. (float, default = 1e-05 or 0.25 for BasicNorm)</span></span>
<span class="line"><span>  norm_partial (optional): Partial value for the normalization module, if norm_type = &#39;rms_norm&#39;. (float, default = -1.0)</span></span>
<span class="line"><span>  conv_mod_norm_eps (optional): Epsilon value for Batchnorm1d in the ConformerConvolution module. (float, default = 1e-05)</span></span>
<span class="line"><span>  conv_mod_norm_momentum (optional): Momentum value for Batchnorm1d in the ConformerConvolution module. (float, default = 0.1)</span></span>
<span class="line"><span>  dropout_rate (optional): Dropout rate for some intermediate layers. (float, default = 0.0)</span></span>
<span class="line"><span>  att_dropout_rate (optional): Dropout rate for the attention module. (float, default = 0.0)</span></span>
<span class="line"><span>  pos_wise_dropout_rate (optional): Dropout rate for the position-wise feed-forward module. (float, default = 0.0)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Conv 1D</span></span>
<span class="line"><span>- block_type: conv1d</span></span>
<span class="line"><span>  output_size: Output size. (int)</span></span>
<span class="line"><span>  kernel_size: Size of the convolving kernel. (int or Tuple)</span></span>
<span class="line"><span>  stride (optional): Stride of the sliding blocks. (int or tuple, default = 1)</span></span>
<span class="line"><span>  dilation (optional): Parameter to control the stride of elements within the neighborhood. (int or tuple, default = 1)</span></span>
<span class="line"><span>  groups (optional): Number of blocked connections from input channels to output channels. (int, default = 1)</span></span>
<span class="line"><span>  bias (optional): Whether to add a learnable bias to the output. (bool, default = True)</span></span>
<span class="line"><span>  relu (optional): Whether to use a ReLU activation after convolution. (bool, default = True)</span></span>
<span class="line"><span>  batch_norm: Whether to use batch normalization after convolution. (bool, default = False)</span></span>
<span class="line"><span>  dropout_rate (optional): Dropout rate for the Conv1d outputs. (float, default = 0.0)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># E-Branchformer</span></span>
<span class="line"><span>- block_type: ebranchformer</span></span>
<span class="line"><span>  hidden_size: Hidden (and output) dimension. (int)</span></span>
<span class="line"><span>  linear_size: Dimension of the feed-forward module and othger linear layers. (int)</span></span>
<span class="line"><span>  conv_mod_kernel_size: Size of the convolving kernel in the ConvolutionalSpatialGatingUnit module. (int)</span></span>
<span class="line"><span>  depthwise_conv_kernel_size: Size of the convolving kernel in the DepthwiseConvolution module. (int, default = conv_mod_kernel_size)</span></span>
<span class="line"><span>  heads (optional): Number of heads in multi-head attention. (int, default = 4)</span></span>
<span class="line"><span>  norm_eps (optional): Epsilon value for the normalization module. (float, default = 1e-05 or 0.25 for BasicNorm)</span></span>
<span class="line"><span>  norm_partial (optional): Partial value for the normalization module, if norm_type = &#39;rms_norm&#39;. (float, default = -1.0)</span></span>
<span class="line"><span>  conv_mod_norm_eps (optional): Epsilon value for ConvolutionalSpatialGatingUnit module normalization. (float, default = 1e-05 or 0.25 for BasicNorm)</span></span>
<span class="line"><span>  conv_mod_norm_partial (optional): Partial value for the ConvolutionalSpatialGatingUnit module normalization, if conv_norm_type = &#39;rms_norm&#39;. (float, default = -1.0)</span></span>
<span class="line"><span>  dropout_rate (optional): Dropout rate for some intermediate layers. (float, default = 0.0)</span></span>
<span class="line"><span>  att_dropout_rate (optional): Dropout rate for the attention module. (float, default = 0.0)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In addition, each block has a parameter <code>num_blocks</code> to build <strong>N</strong> times the defined block (int, default = 1). This is useful if you want to use a group of blocks sharing the same parameters without writing each configuration.</p><p><strong>Example 1: conv 2D + 2x Conv 1D + 14x Conformer.</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">encoder_conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    main_conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      pos_wise_act_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">swish</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      pos_enc_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      conv_mod_act_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">swish</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    input_conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      block_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">conv2d</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      conv_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      subsampling_factor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    body_conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">block_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">conv1d</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      output_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">128</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      kernel_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">block_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">conv1d</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      output_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      kernel_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">block_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">conformer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      linear_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1024</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      hidden_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      heads</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">8</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      pos_wise_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      att_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      conv_mod_kernel_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">31</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">      num_blocks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">14</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="decoder" tabindex="-1"><a class="header-anchor" href="#decoder"><span>Decoder</span></a></h4><p>For the decoder, four types of blocks are available: stateless (&#39;stateless&#39;), RNN (&#39;rnn&#39;), MEGA (&#39;mega&#39;) or RWKV (&#39;rwkv&#39;). Contrary to the encoder, the parameters are shared across the blocks, meaning we only define one block in the configuration. The type of the stack of blocks is defined by passing the corresponding type string to the parameter <code>decoder</code>. The internal parts are defined through the field <code>decoder_conf</code> containing the following controlable parameters:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>decoder_conf:</span></span>
<span class="line"><span>  embed_size: Size of the embedding layer (int, default = 256).</span></span>
<span class="line"><span>  num_blocks: Number of decoder blocks/layers (int, default = 4 for MEGA or 1 for RNN).</span></span>
<span class="line"><span>  rnn_type (RNN only): Type of RNN cells (int, default = &quot;lstm&quot;).</span></span>
<span class="line"><span>  hidden_size (RNN only): Size of the hidden layers (int, default = 256).</span></span>
<span class="line"><span>  block_size (MEGA/RWKV only): Size of the block&#39;s input/output (int, default = 512).</span></span>
<span class="line"><span>  linear_size (MEGA/RWKV only): Feed-Forward module hidden size (int, default = 1024).</span></span>
<span class="line"><span>  attention_size (RWKV only): Hidden-size of the attention module. (int, default = None).</span></span>
<span class="line"><span>  context_size (RWKV only): Context size for the WKV kernel module (int, default = 1024).</span></span>
<span class="line"><span>  qk_size (MEGA only): Shared query and key size for attention module (int, default = 128).</span></span>
<span class="line"><span>  v_size (MEGA only): Value size for attention module (int, default = 1024).</span></span>
<span class="line"><span>  chunk_size (MEGA only): Chunk size for attention computation (int, default = -1, i.e. full context).</span></span>
<span class="line"><span>  num_heads (MEGA only): Number of EMA heads (int, default = 4).</span></span>
<span class="line"><span>  rel_pos_bias (MEGA only): Type of relative position bias in attention module (str, default = &quot;simple&quot;).</span></span>
<span class="line"><span>  max_positions (MEGA only): Maximum number of position for RelativePositionBias (int, default = 2048).</span></span>
<span class="line"><span>  truncation_length (MEGA only): Maximum length for truncation in EMA module (int, default = None).</span></span>
<span class="line"><span>  normalization_type (MEGA/RWKV only): Normalization layer type (str, default = &quot;layer_norm&quot;).</span></span>
<span class="line"><span>  normalization_args (MEGA/RKWV only): Normalization layer arguments (dict, default = {}).</span></span>
<span class="line"><span>  activation_type (MEGA only): Activation function type (str, default = &quot;swish&quot;).</span></span>
<span class="line"><span>  activation_args (MEGA only): Activation function arguments (dict, default = {}).</span></span>
<span class="line"><span>  rescale_every (RWKV only): Whether to rescale input every N blocks during inference (int, default = 0)</span></span>
<span class="line"><span>  dropout_rate (excl. RWKV): Dropout rate for main block modules (float, default = 0.0).</span></span>
<span class="line"><span>  embed_dropout_rate: Dropout rate for embedding layer (float, default = 0.0).</span></span>
<span class="line"><span>  att_dropout_rate (MEGA/RWKV only): Dropout rate for the attention module.</span></span>
<span class="line"><span>  ema_dropout_rate (MEGA only): Dropout rate for the EMA module.</span></span>
<span class="line"><span>  ffn_dropout_rate (MEGA/RWKV only): Dropout rate for the feed-forward module.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example 1: RNN decoder.</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">decoder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">rnn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">decoder_conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    rnn_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">lstm</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    num_layers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    embed_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    hidden_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    embed_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example 2: MEGA decoder.</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">decoder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">mega</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">decoder_conf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    block_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    linear_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2048</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    qk_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">128</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    v_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1024</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    max_positions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1024</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    num_heads</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    rel_pos_bias_type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;rotary&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    chunk_size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">256</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    num_blocks</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">6</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    ffn_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    att_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">    embed_dropout_rate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="joint-network" tabindex="-1"><a class="header-anchor" href="#joint-network"><span>Joint network</span></a></h4><p>Currently, we only propose the standard joint network module composed of three linear layers and an activation function. The module definition is optional but the following parameters can be modified through the configuration parameter <code>joint_network_conf</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>joint_network_conf:</span></span>
<span class="line"><span>  joint_space_size: Size of the joint space (int, default = 256).</span></span>
<span class="line"><span>  joint_act_type: Type of activation in the joint network (str, default = &quot;tanh&quot;).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The options related to the activation functions can also be modified through the parameters introduced in the Encoder section (See <code>main_conf</code> description).</p><h3 id="multi-task-learning" tabindex="-1"><a class="header-anchor" href="#multi-task-learning"><span>Multi-task learning</span></a></h3><p>We also support multi-task learning with two auxiliary tasks: CTC and cross-entropy w/ label smoothing option (called LM loss here). The auxiliary tasks contribute to the overal task defined as:</p><p><strong>L_tot = (λ_trans x L_trans) + (λ_auxCTC x L_auxCTC) + (λ_auxLM x L_auxLM)</strong></p><p>where the losses (L_*) are respectively, in order: The Transducer loss, the CTC loss and the LM loss. Lambda values define their respective contribution to the total loss. Each task can be parameterized using the following options, passed to <code>model_conf</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>model_conf:</span></span>
<span class="line"><span>  transducer_weight: Weight of the Transducer loss (float, default = 1.0)</span></span>
<span class="line"><span>  auxiliary_ctc_weight: Weight of the CTC loss. (float, default = 0.0)</span></span>
<span class="line"><span>  auxiliary_ctc_dropout_rate: Dropout rate for the CTC loss inputs. (float, default = 0.0)</span></span>
<span class="line"><span>  auxiliary_lm_loss_weight: Weight of the LM loss. (float, default = 0.2)</span></span>
<span class="line"><span>  auxiliary_lm_loss_smoothing: Smoothing rate for LM loss. If &gt; 0, label smoothing is enabled. (float, default = 0.0)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note:</strong> We do not support other auxiliary tasks in ESPnet2 yet.</p><h3 id="inference" tabindex="-1"><a class="header-anchor" href="#inference"><span>Inference</span></a></h3><p>Various decoding algorithms are also available for Transducer by setting <code>search_type</code> parameter in your decode config:</p><ul><li>Beam search algorithm without prefix search <a href="https://arxiv.org/pdf/1211.3711.pdf" target="_blank" rel="noopener noreferrer">[Graves, 2012]</a>. (<code>search_type: default</code>)</li><li>Time Synchronous Decoding <a href="https://ieeexplore.ieee.org/abstract/document/9053040" target="_blank" rel="noopener noreferrer">[Saon et al., 2020]</a>. (<code>search_type: tsd</code>)</li><li>Alignment-Length Synchronous Decoding <a href="https://ieeexplore.ieee.org/abstract/document/9053040" target="_blank" rel="noopener noreferrer">[Saon et al., 2020]</a>. (<code>search_type: alsd</code>)</li><li>modified Adaptive Expansion Search, based on <a href="https://ieeexplore.ieee.org/abstract/document/9250505" target="_blank" rel="noopener noreferrer">[Kim et al., 2021]</a> and <a href="https://arxiv.org/pdf/2201.05420.pdf" target="_blank" rel="noopener noreferrer">[Boyer et al., 2021]</a>. (<code>search_type: maes</code>)</li></ul><p>The algorithms share two parameters to control the beam size (<code>beam_size</code>) and the partial/final hypotheses normalization (<code>score_norm</code>). In addition, three algorithms have specific parameters:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># Time-synchronous decoding</span></span>
<span class="line"><span>search_type: tsd</span></span>
<span class="line"><span>max_sym_exp : Number of maximum symbol expansions at each time step. (int &gt; 1, default = 3)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Alignement-Length Synchronous decoding</span></span>
<span class="line"><span>search_type: alsd</span></span>
<span class="line"><span>u_max: Maximum expected target sequence length. (int, default = 50)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># modified Adaptive Expansion Search</span></span>
<span class="line"><span>search_type: maes</span></span>
<span class="line"><span>nstep: Number of maximum expansion steps at each time step (int, default = 2)</span></span>
<span class="line"><span>expansion_gamma: Number of additional candidates in expanded hypotheses selection. (int, default = 2)</span></span>
<span class="line"><span>expansion_beta: Allowed logp difference for prune-by-value method. (float, default = 2.3)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Note:</strong></em> Except for the default algorithm, the described parameters are used to control the performance and decoding speed. The optimal values for each parameter are task-dependent; a high value will typically increase decoding time to focus on performance while a low value will improve decoding time at the expense of performance.</p><p><em><strong>Note 2:</strong></em> The algorithms in the standalone version are the same as the one in the other version.. However, due to design choices, some parts were reworked and minor optimizations were added in the same time.</p><h3 id="streaming" tabindex="-1"><a class="header-anchor" href="#streaming"><span>Streaming</span></a></h3><p>To enable streaming capabilities for Transducer models, we support dynamic chunk training and chunk-by-chunk decoding as proposed in <a href="https://arxiv.org/pdf/2012.05481.pdf" target="_blank" rel="noopener noreferrer">[Zhang et al., 2021]</a>. Our implementation is based on the version proposed in <a href="https://github.com/k2-fsa/icefall/" target="_blank" rel="noopener noreferrer">Icefall</a>, based itself on the original <a href="https://github.com/wenet-e2e/wenet/" target="_blank" rel="noopener noreferrer">WeNet</a> one.</p><p>For a complete explanation on the different procedure and parameters, we refer the reader to the corresponding paper.</p><h4 id="training-1" tabindex="-1"><a class="header-anchor" href="#training-1"><span>Training</span></a></h4><p>To train a streaming model, the parameter <code>dynamic_chunk_training</code> should be set to <code>True</code> in <code>main_conf</code> (See section <a href="https://github.com/espnet/espnet/blob/master/doc/espnet2_tutorial.md#encoder" target="_blank" rel="noopener noreferrer">Encoder</a>. From here, the user has access to two parameters in order to control the dynamic chunk selection (<code>short_chunk_threshold</code> and <code>short_chunk_size</code>) and another one to control the left context in the causal convolution and the attention module (<code>num_left_chunks</code>).</p><p>All these parameters can be configured through <code>main_conf</code>, introduced in the Encoder section:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>dynamic_chunk_training: Whether to train streaming model with dynamic chunks. (bool, default = False)</span></span>
<span class="line"><span>short_chunk_threshold: Chunk length threshold (in percent) for dynamic chunk selection. (int, default = 0.75)</span></span>
<span class="line"><span>short_chunk_size: Minimum number of frames during dynamic chunk training. (int, default = 25)</span></span>
<span class="line"><span>num_left_chunks: The number of left chunks the attention module can see during training, where the actual size is defined by \`short_chunk_threshold\` and \`short_chunk_size\`. (int, default = 0, i.e. full context)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="decoding-1" tabindex="-1"><a class="header-anchor" href="#decoding-1"><span>Decoding</span></a></h4><p>To perform chunk-by-chunk inference, the parameter <code>streaming</code> should be set to True in the decoding configuration (otherwise, offline decoding will be performed). Two parameters are available to control the decoding process:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>    decoding_window: The input audio length, in milliseconds, to process during decoding. (int, default = 640)</span></span>
<span class="line"><span>    left_context: Number of previous frames (AFTER subsampling) the attention module can see in current chunk. (int, default = 32)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Note:</strong></em> All search algorithms but ALSD are available with chunk-by-chunk inference.</p><h3 id="faq-1" tabindex="-1"><a class="header-anchor" href="#faq-1"><span>FAQ</span></a></h3><h4 id="how-to-add-a-new-block-type-to-the-custom-encoder" tabindex="-1"><a class="header-anchor" href="#how-to-add-a-new-block-type-to-the-custom-encoder"><span>How to add a new block type to the custom encoder?</span></a></h4><p><em><strong>Provided paths are relative to the directory: <code>espnet2/asr_transducer/encoder/</code></strong></em></p><p>Adding support to a new block type can be achieved in three main steps:</p><ol><li>Write your need block class in <code>encoder/blocks/</code>. The class should have the following methods: <code>__init__(...)</code>, <code>forward(...)</code> (training + offline), <code>chunk_forward(...)</code> (online decoding), <code>reset_streaming_cache(...)</code> (online cache definition). For more details on implementing internal parts, we refer the user to the existing block definition and the Streaming section.</li><li>In <code>building.py</code>, write a block constructor method and add a new condition in <code>build_body_blocks(...)</code> for your block type, calling the constructor method. If you need additional parameters to share across blocks, you can add them in <code>build_main_parameters(...)</code> and pass <code>main_conf</code> to your constructor.</li><li>In <code>validation.py</code>, add new conditions to \`validate_block_arguments(...) in order to set and validate the mandatory block parameters before building (if not already covered).</li></ol><p>For additional information or examples, please refer to the named files. If you need to add other classes related to the new block, they should be added within the block class or in <code>modules/</code>.</p>`,118);function C(_,F){const a=r("RouteLink");return p(),h("div",null,[o,s("ol",null,[k,s("li",null,[c,s("ul",null,[u,s("li",null,[s("p",null,[g,i(" is used for specifying the backend of the job scheduler. If you don't have such a system in your local machine environment, you don't need to change anything about this file. See "),n(a,{to:"/parallelization.html"},{default:t(()=>[i("Using Job scheduling system")]),_:1})])])])]),m]),b,s("p",null,[i("See "),n(a,{to:"/espnet2_training_option.html"},{default:t(()=>[i("Change the configuration for training")]),_:1}),i(" for more detail about the usage of training tools.")]),f,s("p",null,[i("We also support submitting jobs to multiple hosts to accelerate your experiment: See "),n(a,{to:"/parallelization.html"},{default:t(()=>[i("Using Job scheduling system")]),_:1})]),v,s("ul",null,[s("li",null,[n(a,{to:"/espnet2_distributed.html"},{default:t(()=>[i("Distributed training")]),_:1})]),s("li",null,[n(a,{to:"/parallelization.html"},{default:t(()=>[i("Using Job scheduling system")]),_:1})])]),y])}const B=l(d,[["render",C],["__file","espnet2_tutorial.html.vue"]]),w=JSON.parse(`{"path":"/espnet2_tutorial.html","title":"ESPnet2 Tutorial","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Main changing from ESPnet1","slug":"main-changing-from-espnet1","link":"#main-changing-from-espnet1","children":[]},{"level":2,"title":"Recipes using ESPnet2","slug":"recipes-using-espnet2","link":"#recipes-using-espnet2","children":[]},{"level":2,"title":"See training status","slug":"see-training-status","link":"#see-training-status","children":[{"level":3,"title":"Show the log file","slug":"show-the-log-file","link":"#show-the-log-file","children":[]},{"level":3,"title":"Show the training status in a image file","slug":"show-the-training-status-in-a-image-file","link":"#show-the-training-status-in-a-image-file","children":[]},{"level":3,"title":"Use tensorboard","slug":"use-tensorboard","link":"#use-tensorboard","children":[]}]},{"level":2,"title":"How to parse command-line arguments in shell scripts?","slug":"how-to-parse-command-line-arguments-in-shell-scripts","link":"#how-to-parse-command-line-arguments-in-shell-scripts","children":[]},{"level":2,"title":"Start from a specified stage and stop at a specified stage","slug":"start-from-a-specified-stage-and-stop-at-a-specified-stage","link":"#start-from-a-specified-stage-and-stop-at-a-specified-stage","children":[]},{"level":2,"title":"Change the configuration for training","slug":"change-the-configuration-for-training","link":"#change-the-configuration-for-training","children":[]},{"level":2,"title":"Change the number of parallel jobs","slug":"change-the-number-of-parallel-jobs","link":"#change-the-number-of-parallel-jobs","children":[]},{"level":2,"title":"Multi GPUs training and distributed training","slug":"multi-gpus-training-and-distributed-training","link":"#multi-gpus-training-and-distributed-training","children":[{"level":3,"title":"Relationship between mini-batch size and number of GPUs","slug":"relationship-between-mini-batch-size-and-number-of-gpus","link":"#relationship-between-mini-batch-size-and-number-of-gpus","children":[]}]},{"level":2,"title":"Use specified experiment directory for evaluation","slug":"use-specified-experiment-directory-for-evaluation","link":"#use-specified-experiment-directory-for-evaluation","children":[]},{"level":2,"title":"Evaluation without training using pretrained model","slug":"evaluation-without-training-using-pretrained-model","link":"#evaluation-without-training-using-pretrained-model","children":[{"level":3,"title":"Evaluation using OpenAI Whisper","slug":"evaluation-using-openai-whisper","link":"#evaluation-using-openai-whisper","children":[]}]},{"level":2,"title":"Packing and sharing your trained model","slug":"packing-and-sharing-your-trained-model","link":"#packing-and-sharing-your-trained-model","children":[]},{"level":2,"title":"Usage of Self-Supervised Learning Representations as feature","slug":"usage-of-self-supervised-learning-representations-as-feature","link":"#usage-of-self-supervised-learning-representations-as-feature","children":[{"level":3,"title":"Prerequisite","slug":"prerequisite","link":"#prerequisite","children":[]},{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]}]},{"level":2,"title":"Streaming ASR","slug":"streaming-asr","link":"#streaming-asr","children":[{"level":3,"title":"Training","slug":"training","link":"#training","children":[]},{"level":3,"title":"Decoding","slug":"decoding","link":"#decoding","children":[]},{"level":3,"title":"FAQ","slug":"faq","link":"#faq","children":[]}]},{"level":2,"title":"Real-Time-Factor and Latency","slug":"real-time-factor-and-latency","link":"#real-time-factor-and-latency","children":[{"level":3,"title":"Usage","slug":"usage-1","link":"#usage-1","children":[]},{"level":3,"title":"Notes","slug":"notes","link":"#notes","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"Limitations","slug":"limitations","link":"#limitations","children":[]}]},{"level":2,"title":"Transducer ASR","slug":"transducer-asr","link":"#transducer-asr","children":[{"level":3,"title":"General usage","slug":"general-usage","link":"#general-usage","children":[]},{"level":3,"title":"Architecture","slug":"architecture","link":"#architecture","children":[]},{"level":3,"title":"Multi-task learning","slug":"multi-task-learning","link":"#multi-task-learning","children":[]},{"level":3,"title":"Inference","slug":"inference","link":"#inference","children":[]},{"level":3,"title":"Streaming","slug":"streaming","link":"#streaming","children":[]},{"level":3,"title":"FAQ","slug":"faq-1","link":"#faq-1","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":18.3,"words":5491},"filePathRelative":"espnet2_tutorial.md","excerpt":"\\n<p>We are planning a super major update, called <code>ESPnet2</code>. The developing status is still <strong>under construction</strong> yet, so please be very careful to use with understanding following cautions:</p>\\n<ul>\\n<li>There might be fatal bugs related to essential parts.</li>\\n<li>We haven't achieved comparable results to espnet1 on each task yet.</li>\\n</ul>"}`);export{B as comp,w as data};

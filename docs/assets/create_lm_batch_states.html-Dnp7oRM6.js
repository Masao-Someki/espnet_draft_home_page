import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as s,a,o as r}from"./app-KOUU_Wij.js";const n={},c=a('<h1 id="espnet-nets-pytorch-backend-transducer-utils-create-lm-batch-states" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-transducer-utils-create-lm-batch-states"><span>espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states</span></a></h1><div class="custom-h3"><p>espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states<span class="small-bracket">(lm_states: List[Any] | Dict[str, Any], lm_layers, is_wordlm: bool)</span></p></div><p>Create LM hidden states.</p><ul><li><strong>Parameters:</strong><ul><li><strong>lm_states</strong> – LM hidden states.</li><li><strong>lm_layers</strong> – Number of LM layers.</li><li><strong>is_wordlm</strong> – Whether provided LM is a word-level LM.</li></ul></li><li><strong>Returns:</strong> LM hidden states.</li><li><strong>Return type:</strong> new_states</li></ul>',4);function l(_,i){return r(),e("div",null,[s(" _espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states "),c])}const m=t(n,[["render",l],["__file","create_lm_batch_states.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet/nets/create_lm_batch_states.html","title":"espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.18,"words":54},"filePathRelative":"guide/espnet/nets/create_lm_batch_states.md","excerpt":"<!-- _espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states -->\\n<h1>espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.transducer.utils.create_lm_batch_states<span class=\\"small-bracket\\">(lm_states: List[Any] | Dict[str, Any], lm_layers, is_wordlm: bool)</span></p></div>"}');export{m as comp,h as data};

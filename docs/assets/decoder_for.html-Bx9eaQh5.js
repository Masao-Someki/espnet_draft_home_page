import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as r,a as t,o as s}from"./app-KOUU_Wij.js";const o={},d=t('<h1 id="espnet-nets-chainer-backend-rnn-decoders-decoder-for" tabindex="-1"><a class="header-anchor" href="#espnet-nets-chainer-backend-rnn-decoders-decoder-for"><span>espnet.nets.chainer_backend.rnn.decoders.decoder_for</span></a></h1><div class="custom-h3"><p>espnet.nets.chainer_backend.rnn.decoders.decoder_for<span class="small-bracket">(args, odim, sos, eos, att, labeldist)</span></p></div><p>Return the decoding layer corresponding to the args.</p><ul><li><strong>Parameters:</strong><ul><li><strong>args</strong> (<em>Namespace</em>) – The program arguments.</li><li><strong>odim</strong> (<em>int</em>) – The output dimension.</li><li><strong>sos</strong> (<em>int</em>) – Number to indicate the start of sequences.</li><li><strong>eos</strong> (<em>int</em>) –</li><li><strong>att</strong> (<em>Module</em>) – Attention module defined at espnet.nets.chainer_backend.attentions.</li><li><strong>labeldist</strong> (<em>numpy.array</em>) – Distributed array of length od transcript.</li></ul></li><li><strong>Returns:</strong> The decoder module.</li><li><strong>Return type:</strong> chainer.Chain</li></ul>',4);function a(c,i){return s(),n("div",null,[r(" _espnet.nets.chainer_backend.rnn.decoders.decoder_for "),d])}const p=e(o,[["render",a],["__file","decoder_for.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet/nets/decoder_for.html","title":"espnet.nets.chainer_backend.rnn.decoders.decoder_for","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.24,"words":73},"filePathRelative":"guide/espnet/nets/decoder_for.md","excerpt":"<!-- _espnet.nets.chainer_backend.rnn.decoders.decoder_for -->\\n<h1>espnet.nets.chainer_backend.rnn.decoders.decoder_for</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.chainer_backend.rnn.decoders.decoder_for<span class=\\"small-bracket\\">(args, odim, sos, eos, att, labeldist)</span></p></div>\\n<p>Return the decoding layer corresponding to the args.</p>"}');export{p as comp,h as data};

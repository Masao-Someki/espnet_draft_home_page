import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,c as a,f as p,b as s,d as e,e as o,w as n,a as r,o as m}from"./app-KOUU_Wij.js";const c={},h=r('<h1 id="espnet2-enh-loss-wrappers-mixit-solver-mixitsolver" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-loss-wrappers-mixit-solver-mixitsolver"><span>espnet2.enh.loss.wrappers.mixit_solver.MixITSolver</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.loss.wrappers.mixit_solver.MixITSolver<span class="small-bracket">(criterion: <a href="AbsEnhLoss.md#espnet2.enh.loss.criterions.abs_loss.AbsEnhLoss">AbsEnhLoss</a></span>, weight: float = 1.0)</p></div>',2),d=s("code",null,"AbsLossWrapper",-1),u=s("p",null,"Mixture Invariant Training Solver.",-1),_=s("strong",null,"Parameters:",-1),v=s("strong",null,"criterion",-1),x=s("em",null,"AbsEnhLoss",-1),b=s("li",null,[s("strong",null,"weight"),e(" ("),s("em",null,"float"),e(") – weight (between 0 and 1) of current loss for multi-task learning.")],-1),g=r('<div class="custom-h4"><p>forward<span class="small-bracket">(ref: List[Tensor] | List[ComplexTensor], inf: List[Tensor] | List[ComplexTensor], others: Dict = {})</span></p></div><p>MixIT solver.</p><ul><li><strong>Parameters:</strong><ul><li><strong>ref</strong> (<em>List</em> *[*<em>torch.Tensor</em> <em>]</em>) – [(batch, …), …] x n_spk</li><li><strong>inf</strong> (<em>List</em> *[*<em>torch.Tensor</em> <em>]</em>) – [(batch, …), …] x n_est</li></ul></li><li><strong>Returns:</strong> (torch.Tensor): minimum loss with the best permutation stats: dict, for collecting training status others: dict, in this PIT solver, permutation order will be returned</li><li><strong>Return type:</strong> loss</li></ul><div class="custom-h4"><p><em>property</em> name</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',5);function f(T,w){const t=i("RouteLink");return m(),a("div",null,[p(" _espnet2.enh.loss.wrappers.mixit_solver.MixITSolver "),h,s("p",null,[e("Bases: "),o(t,{to:"/guide/espnet2/enh/AbsLossWrapper.html#espnet2.enh.loss.wrappers.abs_wrapper.AbsLossWrapper"},{default:n(()=>[d]),_:1})]),u,s("ul",null,[s("li",null,[_,s("ul",null,[s("li",null,[v,e(" ("),o(t,{to:"/guide/espnet2/enh/AbsEnhLoss.html#espnet2.enh.loss.criterions.abs_loss.AbsEnhLoss"},{default:n(()=>[x]),_:1}),e(") – an instance of AbsEnhLoss")]),b])])]),g])}const I=l(c,[["render",f],["__file","MixITSolver.html.vue"]]),A=JSON.parse('{"path":"/guide/espnet2/enh/MixITSolver.html","title":"espnet2.enh.loss.wrappers.mixit_solver.MixITSolver","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.5,"words":149},"filePathRelative":"guide/espnet2/enh/MixITSolver.md","excerpt":"<!-- _espnet2.enh.loss.wrappers.mixit_solver.MixITSolver -->\\n<h1>espnet2.enh.loss.wrappers.mixit_solver.MixITSolver</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.loss.wrappers.mixit_solver.MixITSolver<span class=\\"small-bracket\\">(criterion: <a href=\\"AbsEnhLoss.md#espnet2.enh.loss.criterions.abs_loss.AbsEnhLoss\\">AbsEnhLoss</a></span>, weight: float = 1.0)</p></div>"}');export{I as comp,A as data};

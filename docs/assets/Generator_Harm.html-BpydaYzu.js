import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as r,a as s,o as t}from"./app-KOUU_Wij.js";const a={},i=s('<h1 id="espnet2-gan-svs-visinger2-visinger2-vocoder-generator-harm" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-svs-visinger2-visinger2-vocoder-generator-harm"><span>espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm<span class="small-bracket">(hidden_channels: int = 192, n_harmonic: int = 64, kernel_size: int = 3, padding: int = 1, dropout_rate: float = 0.1, sample_rate: int = 22050, hop_size: int = 256)</span></p></div><p>Bases: <code>Module</code></p><p>Initialize harmonic generator module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>hidden_channels</strong> (<em>int</em>) – Number of channels in the input and hidden layers.</li><li><strong>n_harmonic</strong> (<em>int</em>) – Number of harmonic channels.</li><li><strong>kernel_size</strong> (<em>int</em>) – Size of the convolutional kernel.</li><li><strong>padding</strong> (<em>int</em>) – Amount of padding added to the input.</li><li><strong>dropout_rate</strong> (<em>float</em>) – Dropout rate.</li><li><strong>sample_rate</strong> (<em>int</em>) – Sampling rate of the input audio.</li><li><strong>hop_size</strong> (<em>int</em>) – Hop size used in the analysis of the input audio.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(f0, harm, mask)</span></p></div><p>Generate harmonics from F0 and harmonic data.</p><ul><li><strong>Parameters:</strong><ul><li><strong>f0</strong> (<em>Tensor</em>) – Pitch (F0) tensor (B, 1, T).</li><li><strong>harm</strong> (<em>Tensor</em>) – Harmonic data tensor (B, hidden_channels, T).</li><li><strong>mask</strong> (<em>Tensor</em>) – Mask tensor for harmonic data (B, 1, T).</li></ul></li><li><strong>Returns:</strong> Harmonic signal tensor (B, n_harmonic, T * hop_length).</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',9);function o(l,m){return t(),n("div",null,[r(" _espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm "),i])}const c=e(a,[["render",o],["__file","Generator_Harm.html.vue"]]),p=JSON.parse('{"path":"/guide/espnet2/gan_svs/Generator_Harm.html","title":"espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.6,"words":179},"filePathRelative":"guide/espnet2/gan_svs/Generator_Harm.md","excerpt":"<!-- _espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm -->\\n<h1>espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_svs.visinger2.visinger2_vocoder.Generator_Harm<span class=\\"small-bracket\\">(hidden_channels: int = 192, n_harmonic: int = 64, kernel_size: int = 3, padding: int = 1, dropout_rate: float = 0.1, sample_rate: int = 22050, hop_size: int = 256)</span></p></div>"}');export{c as comp,p as data};

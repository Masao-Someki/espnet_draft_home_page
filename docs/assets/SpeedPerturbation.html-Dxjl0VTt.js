import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as r,a as s}from"./app-KOUU_Wij.js";const p={},o=s('<p>&lt;!-- _espnet.transform.perturb.SpeedPerturbation --&gt;</p><h1 id="espnet-transform-perturb-speedperturbation" tabindex="-1"><a class="header-anchor" href="#espnet-transform-perturb-speedperturbation"><span>espnet.transform.perturb.SpeedPerturbation</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.transform.perturb.SpeedPerturbation<span class="small-bracket">(lower=0.9, upper=1.1, utt2ratio=None, keep_length=True, res_type=&#39;kaiser_best&#39;, seed=None)</span></p></div><p>Bases: <code>object</code></p><p>The speed perturbation in kaldi uses sox-speed instead of sox-tempo, and sox-speed just to resample the input, i.e pitch and tempo are changed both.</p><p>“Why use speed option instead of tempo -s in SoX for speed perturbation” <a href="https://groups.google.com/forum/#!topic/kaldi-help/8OOG7eE4sZ8" target="_blank" rel="noopener noreferrer">https://groups.google.com/forum/#!topic/kaldi-help/8OOG7eE4sZ8</a></p><div class="custom-h4"><p>WARNING</p></div><p>This function is very slow because of resampling. I recommmend to apply speed-perturb outside the training using sox.</p>',8),a=[o];function n(i,d){return r(),t("div",null,a)}const l=e(p,[["render",n],["__file","SpeedPerturbation.html.vue"]]),m=JSON.parse(`{"path":"/guide/espnet/transform/SpeedPerturbation.html","title":"espnet.transform.perturb.SpeedPerturbation","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"guide/espnet/transform/SpeedPerturbation.md","excerpt":"<p>&lt;!-- _espnet.transform.perturb.SpeedPerturbation --&gt;</p>\\n<h1>espnet.transform.perturb.SpeedPerturbation</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.transform.perturb.SpeedPerturbation<span class=\\"small-bracket\\">(lower=0.9, upper=1.1, utt2ratio=None, keep_length=True, res_type='kaiser_best', seed=None)</span></p></div>"}`);export{l as comp,m as data};

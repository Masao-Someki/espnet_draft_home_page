import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as n,a as p}from"./app-KOUU_Wij.js";const t={},r=p('<p>&lt;!-- _espnet2.enh.layers.ncsnpp.NCSNpp --&gt;</p><h1 id="espnet2-enh-layers-ncsnpp-ncsnpp" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-ncsnpp-ncsnpp"><span>espnet2.enh.layers.ncsnpp.NCSNpp</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.ncsnpp.NCSNpp<span class="small-bracket">(scale_by_sigma=True, nonlinearity=&#39;swish&#39;, nf=128, ch_mult=(1, 1, 2, 2, 2, 2, 2)</span>, num_res_blocks=2, attn_resolutions=(16,), resamp_with_conv=True, conditional=True, fir=True, fir_kernel=[1, 3, 3, 1], skip_rescale=True, resblock_type=&#39;biggan&#39;, progressive=&#39;output_skip&#39;, progressive_input=&#39;input_skip&#39;, progressive_combine=&#39;sum&#39;, init_scale=0.0, fourier_scale=16, image_size=256, embedding_type=&#39;fourier&#39;, dropout=0.0, centered=True, **unused_kwargs)</p></div><p>Bases: <code>Module</code></p><p>NCSN++ model, adapted from <a href="https://github.com/yang-song/score_sde" target="_blank" rel="noopener noreferrer">https://github.com/yang-song/score_sde</a> and</p><p><a href="https://github.com/sp-uhh/sgmse" target="_blank" rel="noopener noreferrer">https://github.com/sp-uhh/sgmse</a> repository</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x, time_cond)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>pad_spec<span class="small-bracket">(Y)</span></p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',14),a=[r];function i(o,c){return n(),s("div",null,a)}const h=e(t,[["render",i],["__file","NCSNpp.html.vue"]]),u=JSON.parse(`{"path":"/guide/espnet2/enh/NCSNpp.html","title":"espnet2.enh.layers.ncsnpp.NCSNpp","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"guide/espnet2/enh/NCSNpp.md","excerpt":"<p>&lt;!-- _espnet2.enh.layers.ncsnpp.NCSNpp --&gt;</p>\\n<h1>espnet2.enh.layers.ncsnpp.NCSNpp</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.ncsnpp.NCSNpp<span class=\\"small-bracket\\">(scale_by_sigma=True, nonlinearity='swish', nf=128, ch_mult=(1, 1, 2, 2, 2, 2, 2)</span>, num_res_blocks=2, attn_resolutions=(16,), resamp_with_conv=True, conditional=True, fir=True, fir_kernel=[1, 3, 3, 1], skip_rescale=True, resblock_type='biggan', progressive='output_skip', progressive_input='input_skip', progressive_combine='sum', init_scale=0.0, fourier_scale=16, image_size=256, embedding_type='fourier', dropout=0.0, centered=True, **unused_kwargs)</p></div>"}`);export{h as comp,u as data};

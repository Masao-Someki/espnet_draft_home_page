import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as t,a as e}from"./app-KOUU_Wij.js";const a={},n=e('<p>&lt;!-- _espnet2.gan_svs.avocodo.avocodo.CoMBDBlock --&gt;</p><h1 id="espnet2-gan-svs-avocodo-avocodo-combdblock" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-svs-avocodo-avocodo-combdblock"><span>espnet2.gan_svs.avocodo.avocodo.CoMBDBlock</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_svs.avocodo.avocodo.CoMBDBlock<span class="small-bracket">(h_u: List[int], d_k: List[int], d_s: List[int], d_d: List[int], d_g: List[int], d_p: List[int], op_f: int, op_k: int, op_g: int, use_spectral_norm=False)</span></p></div><p>Bases: <code>Module</code></p><p>CoMBD (Collaborative Multi-band Discriminator) block module</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Forward pass through the CoMBD block.</p><ul><li><p><strong>Parameters:</strong><strong>x</strong> (<em>Tensor</em>) â€“ Input tensor of shape (B, C_in, T_in).</p></li><li><p><strong>Returns:</strong> Tuple containing the output tensor of : shape (B, C_out, T_out)</p><p>and a list of feature maps of shape (B, C, T) at each Conv1d layer.</p></li><li><p><strong>Return type:</strong> Tuple[Tensor, List[Tensor]]</p></li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10),i=[n];function c(p,l){return t(),s("div",null,i)}const _=o(a,[["render",c],["__file","CoMBDBlock.html.vue"]]),v=JSON.parse('{"path":"/guide/espnet2/gan_svs/CoMBDBlock.html","title":"espnet2.gan_svs.avocodo.avocodo.CoMBDBlock","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"guide/espnet2/gan_svs/CoMBDBlock.md","excerpt":"<p>&lt;!-- _espnet2.gan_svs.avocodo.avocodo.CoMBDBlock --&gt;</p>\\n<h1>espnet2.gan_svs.avocodo.avocodo.CoMBDBlock</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_svs.avocodo.avocodo.CoMBDBlock<span class=\\"small-bracket\\">(h_u: List[int], d_k: List[int], d_s: List[int], d_d: List[int], d_g: List[int], d_p: List[int], op_f: int, op_k: int, op_g: int, use_spectral_norm=False)</span></p></div>"}');export{_ as comp,v as data};

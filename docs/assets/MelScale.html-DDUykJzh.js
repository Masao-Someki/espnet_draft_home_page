import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as n,a,o as t}from"./app-KOUU_Wij.js";const i={},r=a('<h1 id="espnet2-gan-svs-visinger2-visinger2-vocoder-melscale" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-svs-visinger2-visinger2-vocoder-melscale"><span>espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale<span class="small-bracket">(n_mels: int = 128, sample_rate: int = 24000, f_min: float = 0.0, f_max: float | None = None, n_stft: int | None = None)</span></p></div><p>Bases: <code>Module</code></p><p>Turn a normal STFT into a mel frequency STFT, using a conversion</p><p>matrix. This uses triangular filter banks. User can control which device the filter bank (fb) is (e.g. fb.to(spec_f.device)). :param n_mels: Number of mel filterbanks. (Default: 128) :type n_mels: int, optional :param sample_rate: Sample rate of audio signal. (Default: 16000) :type sample_rate: int, optional :param f_min: Minimum frequency. (Default: 0.) :type f_min: float, optional :param f_max: Maximum frequency.</p><blockquote><p>(Default: sample_rate // 2)</p></blockquote><ul><li><strong>Parameters:</strong><strong>n_stft</strong> (<em>int</em> <em>,</em> <em>optional</em>) – Number of bins in STFT. Calculated from first input if None is given. See n_fft in :class:Spectrogram. (Default: None)</li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(specgram: Tensor)</span></p></div><p>Forward MelScale</p><ul><li><strong>Parameters:</strong><strong>specgram</strong> (<em>Tensor</em>) – A spectrogram STFT of dimension (…, freq, time).</li><li><strong>Returns:</strong> Mel frequency spectrogram of size (…, n_mels, time).</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',12);function l(o,c){return t(),s("div",null,[n(" _espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale "),r])}const g=e(i,[["render",l],["__file","MelScale.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/gan_svs/MelScale.html","title":"espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"guide/espnet2/gan_svs/MelScale.md","excerpt":"<!-- _espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale -->\\n<h1>espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_svs.visinger2.visinger2_vocoder.MelScale<span class=\\"small-bracket\\">(n_mels: int = 128, sample_rate: int = 24000, f_min: float = 0.0, f_max: float | None = None, n_stft: int | None = None)</span></p></div>"}');export{g as comp,_ as data};

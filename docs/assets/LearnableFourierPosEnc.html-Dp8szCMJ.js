import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as r,a as t,o as a}from"./app-KOUU_Wij.js";const s={},o=t('<h1 id="espnet-nets-pytorch-backend-transformer-embedding-learnablefourierposenc" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-transformer-embedding-learnablefourierposenc"><span>espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc<span class="small-bracket">(d_model, dropout_rate=0.0, max_len=5000, gamma=1.0, apply_scaling=False, hidden_dim=None)</span></p></div><p>Bases: <code>Module</code></p><p>Learnable Fourier Features for Positional Encoding.</p><p>See <a href="https://arxiv.org/pdf/2106.02795.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/2106.02795.pdf</a></p><ul><li><strong>Parameters:</strong><ul><li><strong>d_model</strong> (<em>int</em>) – Embedding dimension.</li><li><strong>dropout_rate</strong> (<em>float</em>) – Dropout rate.</li><li><strong>max_len</strong> (<em>int</em>) – Maximum input length.</li><li><strong>gamma</strong> (<em>float</em>) – init parameter for the positional kernel variance see <a href="https://arxiv.org/pdf/2106.02795.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/2106.02795.pdf</a>.</li><li><strong>apply_scaling</strong> (<em>bool</em>) – Whether to scale the input before adding the pos encoding.</li><li><strong>hidden_dim</strong> (<em>int</em>) – if not None, we modulate the pos encodings with an MLP whose hidden layer has hidden_dim neurons.</li></ul></li></ul><p>Initialize class.</p><div class="custom-h4"><p>extend_pe<span class="small-bracket">(x)</span></p></div><p>Reset the positional encodings.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor)</span></p></div><p>Add positional encoding.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – Input tensor (batch, time, *).</li><li><strong>Returns:</strong> Encoded tensor (batch, time, *).</li><li><strong>Return type:</strong> torch.Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function i(l,d){return a(),n("div",null,[r(" _espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc "),o])}const m=e(s,[["render",i],["__file","LearnableFourierPosEnc.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet/nets/LearnableFourierPosEnc.html","title":"espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.56,"words":168},"filePathRelative":"guide/espnet/nets/LearnableFourierPosEnc.md","excerpt":"<!-- _espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc -->\\n<h1>espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.transformer.embedding.LearnableFourierPosEnc<span class=\\"small-bracket\\">(d_model, dropout_rate=0.0, max_len=5000, gamma=1.0, apply_scaling=False, hidden_dim=None)</span></p></div>"}');export{m as comp,g as data};

import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,c as n,f as l,b as s,d as i,e as h,w as k,a as r,o as p}from"./app-KOUU_Wij.js";const d={},o=s("h1",{id:"espnet2-train-abs-gan-espnet-model-absganespnetmodel",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#espnet2-train-abs-gan-espnet-model-absganespnetmodel"},[s("span",null,"espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel")])],-1),g=s("div",{class:"custom-h3"},[s("p",null,[s("em",null,"class"),i(" espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel")])],-1),c=s("code",null,"AbsESPnetModel",-1),y=s("code",null,"Module",-1),m=s("code",null,"ABC",-1),A=r(`<p>The common abstract class among each GAN-based task.</p><p>“ESPnetModel” is referred to a class which inherits torch.nn.Module, and makes the dnn-models “forward” as its member field, a.k.a delegate pattern. And “forward” must accept the argument “forward_generator” and Return the dict of “loss”, “stats”, “weight”, and “optim_idx”. “optim_idx” for generator must be 0 and that for discriminator must be 1.</p><div class="custom-h3"><p>Example</p></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> espnet2.tasks.abs_task </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> AbsTask</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> YourESPnetModel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">AbsGANESPnetModel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> forward</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">input_lengths</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">forward_generator</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">         ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">         if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> forward_generator:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             # return loss for the generator</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             # optim idx 0 indicates generator optimizer</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">             return</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">loss</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">loss, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">stats</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stats, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">weight, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">optim_idx</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">         else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             # return loss for the discriminator</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">             # optim idx 1 indicates discriminator optimizer</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">             return</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">loss</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">loss, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">stats</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">stats, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">weight</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">weight, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">optim_idx</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> YourTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">AbsTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">     @</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">classmethod</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> build_model</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">cls</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: argparse.Namespace) -&gt; YourESPnetModel:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>abstract</em> collect_feats<span class="small-bracket">(**batch: Tensor)</span></p></div><div class="custom-h4"><p><em>abstract</em> forward<span class="small-bracket">(forward_generator: bool = True, **batch: Tensor)</span></p></div><p>Return the generator loss or the discrimiantor loss.</p><p>This method must have an argument “forward_generator” to switch the generator loss calculation and the discrimiantor loss calculation. If forward_generator is true, return the generator loss with optim_idx 0. If forward_generator is false, return the discrimiantor loss with optim_idx 1.</p><ul><li><strong>Parameters:</strong><strong>forward_generator</strong> (<em>bool</em>) – Whether to return the generator loss or the discrimiantor loss. This must have the default value.</li><li><strong>Returns:</strong><ul><li>loss (Tensor): Loss scalar tensor.</li><li>stats (Dict[str, float]): Statistics to be monitored.</li><li>weight (Tensor): Weight tensor to summarize losses.</li><li>optim_idx (int): Optimizer index (0 for G and 1 for D).</li></ul></li><li><strong>Return type:</strong> Dict[str, Any]</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>`,11);function B(u,C){const t=e("RouteLink");return p(),n("div",null,[l(" _espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel "),o,g,s("p",null,[i("Bases: "),h(t,{to:"/guide/espnet2/train/AbsESPnetModel.html#espnet2.train.abs_espnet_model.AbsESPnetModel"},{default:k(()=>[c]),_:1}),i(", "),y,i(", "),m]),A])}const b=a(d,[["render",B],["__file","AbsGANESPnetModel.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/train/AbsGANESPnetModel.html","title":"espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.12,"words":337},"filePathRelative":"guide/espnet2/train/AbsGANESPnetModel.md","excerpt":"<!-- _espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel -->\\n<h1>espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.abs_gan_espnet_model.AbsGANESPnetModel</p></div>\\n<p>Bases: <a href=\\"/guide/espnet2/train/AbsESPnetModel.html#espnet2.train.abs_espnet_model.AbsESPnetModel\\" target=\\"_blank\\"><code>AbsESPnetModel</code></a>, <code>Module</code>, <code>ABC</code></p>"}');export{b as comp,_ as data};

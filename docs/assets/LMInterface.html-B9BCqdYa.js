import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as a,b as e,d as t,e as c,w as l,a as o,o as i}from"./app-KOUU_Wij.js";const p={},m=e("p",null,"<!-- _espnet.nets.lm_interface.LMInterface -->",-1),d=e("h1",{id:"espnet-nets-lm-interface-lminterface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-nets-lm-interface-lminterface"},[e("span",null,"espnet.nets.lm_interface.LMInterface")])],-1),f=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet.nets.lm_interface.LMInterface")])],-1),u=e("code",null,"ScorerInterface",-1),h=o('<p>LM Interface for ESPnet model implementation.</p><div class="custom-h4"><p><em>static</em> add_arguments<span class="small-bracket">(parser)</span></p></div><p>Add arguments to command line argument parser.</p><div class="custom-h4"><p><em>classmethod</em> build<span class="small-bracket">(n_vocab: int, **kwargs)</span></p></div><p>Initialize this class with python-level args.</p><ul><li><strong>Parameters:</strong><strong>idim</strong> (<em>int</em>) – The number of vocabulary.</li><li><strong>Returns:</strong> A new instance of LMInterface.</li><li><strong>Return type:</strong> LMinterface</li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x, t)</span></p></div><p>Compute LM loss value from buffer sequences.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>torch.Tensor</em>) – Input ids. (batch, len)</li><li><strong>t</strong> (<em>torch.Tensor</em>) – Target ids. (batch, len)</li></ul></li><li><strong>Returns:</strong> Tuple of : loss to backward (scalar), negative log-likelihood of t: -log p(t) (scalar) and the number of elements in x (scalar)</li><li><strong>Return type:</strong> tuple[torch.Tensor, torch.Tensor, torch.Tensor]</li></ul><div class="custom-h3"><p>Notes</p></div><p>The last two return values are used in perplexity: p(t)^{-n} = exp(-log p(t) / n)</p>',11);function _(g,v){const n=r("RouteLink");return i(),a("div",null,[m,d,f,e("p",null,[t("Bases: "),c(n,{to:"/guide/espnet/nets/ScorerInterface.html#espnet.nets.scorer_interface.ScorerInterface"},{default:l(()=>[u]),_:1})]),h])}const b=s(p,[["render",_],["__file","LMInterface.html.vue"]]),M=JSON.parse('{"path":"/guide/espnet/nets/LMInterface.html","title":"espnet.nets.lm_interface.LMInterface","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.61,"words":182},"filePathRelative":"guide/espnet/nets/LMInterface.md","excerpt":"<p>&lt;!-- _espnet.nets.lm_interface.LMInterface --&gt;</p>\\n<h1>espnet.nets.lm_interface.LMInterface</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.lm_interface.LMInterface</p></div>\\n<p>Bases: <a href=\\"/guide/espnet/nets/ScorerInterface.html#espnet.nets.scorer_interface.ScorerInterface\\" target=\\"_blank\\"><code>ScorerInterface</code></a></p>"}');export{b as comp,M as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as s,a as t}from"./app-KOUU_Wij.js";const o={},a=t('<p>&lt;!-- _espnet2.enh.encoder.abs_encoder.AbsEncoder --&gt;</p><h1 id="espnet2-enh-encoder-abs-encoder-absencoder" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-encoder-abs-encoder-absencoder"><span>espnet2.enh.encoder.abs_encoder.AbsEncoder</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.encoder.abs_encoder.AbsEncoder</p></div><p>Bases: <code>Module</code>, <code>ABC</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>abstract</em> forward<span class="small-bracket">(input: Tensor, ilens: Tensor, fs: int | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>forward_streaming<span class="small-bracket">(input: Tensor)</span></p></div><div class="custom-h4"><p><em>abstract property</em> output_dim <em>: int</em></p></div><div class="custom-h4"><p>streaming_frame<span class="small-bracket">(audio: Tensor)</span></p></div><p>Stream frame.</p><p>It splits the continuous audio into frame-level audio chunks in the streaming <em>simulation</em>. It is noted that this function takes the entire long audio as input for a streaming simulation. You may refer to this function to manage your streaming input buffer in a real streaming application.</p><ul><li><strong>Parameters:</strong><strong>audio</strong> â€“ (B, T)</li><li><strong>Returns:</strong> List [(B, frame_size),]</li><li><strong>Return type:</strong> chunked</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',17),r=[a];function i(d,c){return s(),n("div",null,r)}const h=e(o,[["render",i],["__file","AbsEncoder.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet2/enh/AbsEncoder.html","title":"espnet2.enh.encoder.abs_encoder.AbsEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.74,"words":223},"filePathRelative":"guide/espnet2/enh/AbsEncoder.md","excerpt":"<p>&lt;!-- _espnet2.enh.encoder.abs_encoder.AbsEncoder --&gt;</p>\\n<h1>espnet2.enh.encoder.abs_encoder.AbsEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.encoder.abs_encoder.AbsEncoder</p></div>\\n<p>Bases: <code>Module</code>, <code>ABC</code></p>\\n<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>"}');export{h as comp,m as data};

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as a,f as p,b as e,d as s,e as o,w as l,a as i,o as c}from"./app-KOUU_Wij.js";const m={},d=e("h1",{id:"espnet2-asr-pit-espnet-model-pitlosswrapper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-pit-espnet-model-pitlosswrapper"},[e("span",null,"espnet2.asr.pit_espnet_model.PITLossWrapper")])],-1),_=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.asr.pit_espnet_model.PITLossWrapper"),e("span",{class:"small-bracket"},"(criterion_fn: Callable, num_ref: int)")])],-1),h=e("code",null,"AbsLossWrapper",-1),u=i('<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(inf: Tensor, inf_lens: Tensor, ref: Tensor, ref_lens: Tensor, others: Dict | None = None)</span></p></div><p>PITLoss Wrapper function. Similar to espnet2/enh/loss/wrapper/pit_solver.py</p><ul><li><strong>Parameters:</strong><ul><li><strong>inf</strong> – Iterable[torch.Tensor], (batch, num_inf, …)</li><li><strong>inf_lens</strong> – Iterable[torch.Tensor], (batch, num_inf, …)</li><li><strong>ref</strong> – Iterable[torch.Tensor], (batch, num_ref, …)</li><li><strong>ref_lens</strong> – Iterable[torch.Tensor], (batch, num_ref, …)</li><li><strong>permute_inf</strong> – If true, permute the inference and inference_lens according to the optimal permutation.</li></ul></li></ul><div class="custom-h4"><p><em>classmethod</em> permutate<span class="small-bracket">(perm, *args)</span></p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',6);function f(b,T){const r=n("RouteLink");return c(),a("div",null,[p(" _espnet2.asr.pit_espnet_model.PITLossWrapper "),d,_,e("p",null,[s("Bases: "),o(r,{to:"/guide/espnet2/enh/AbsLossWrapper.html#espnet2.enh.loss.wrappers.abs_wrapper.AbsLossWrapper"},{default:l(()=>[h]),_:1})]),u])}const I=t(m,[["render",f],["__file","PITLossWrapper.html.vue"]]),W=JSON.parse('{"path":"/guide/espnet2/asr/PITLossWrapper.html","title":"espnet2.asr.pit_espnet_model.PITLossWrapper","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.43,"words":130},"filePathRelative":"guide/espnet2/asr/PITLossWrapper.md","excerpt":"<!-- _espnet2.asr.pit_espnet_model.PITLossWrapper -->\\n<h1>espnet2.asr.pit_espnet_model.PITLossWrapper</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.pit_espnet_model.PITLossWrapper<span class=\\"small-bracket\\">(criterion_fn: Callable, num_ref: int)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet2/enh/AbsLossWrapper.html#espnet2.enh.loss.wrappers.abs_wrapper.AbsLossWrapper\\" target=\\"_blank\\"><code>AbsLossWrapper</code></a></p>"}');export{I as comp,W as data};

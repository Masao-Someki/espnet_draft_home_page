import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as a,a as n,o as t}from"./app-KOUU_Wij.js";const i={},l=n('<h1 id="espnet2-layers-mask-along-axis-maskalongaxis" tabindex="-1"><a class="header-anchor" href="#espnet2-layers-mask-along-axis-maskalongaxis"><span>espnet2.layers.mask_along_axis.MaskAlongAxis</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.layers.mask_along_axis.MaskAlongAxis<span class="small-bracket">(mask_width_range: int | Sequence[int] = (0, 30)</span>, num_mask: int = 2, dim: int | str = &#39;time&#39;, replace_with_zero: bool = True)</p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>extra_repr()</p></div><p>Set the extra representation of the module</p><p>To print customized extra information, you should re-implement this method in your own modules. Both single-line and multi-line strings are acceptable.</p><div class="custom-h4"><p>forward<span class="small-bracket">(spec: Tensor, spec_lengths: Tensor | None = None)</span></p></div><p>Forward function.</p><ul><li><strong>Parameters:</strong><strong>spec</strong> â€“ (Batch, Length, Freq)</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function o(r,m){return t(),s("div",null,[a(" _espnet2.layers.mask_along_axis.MaskAlongAxis "),l])}const d=e(i,[["render",o],["__file","MaskAlongAxis.html.vue"]]),_=JSON.parse(`{"path":"/guide/espnet2/layers/MaskAlongAxis.html","title":"espnet2.layers.mask_along_axis.MaskAlongAxis","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.41,"words":122},"filePathRelative":"guide/espnet2/layers/MaskAlongAxis.md","excerpt":"<!-- _espnet2.layers.mask_along_axis.MaskAlongAxis -->\\n<h1>espnet2.layers.mask_along_axis.MaskAlongAxis</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.layers.mask_along_axis.MaskAlongAxis<span class=\\"small-bracket\\">(mask_width_range: int | Sequence[int] = (0, 30)</span>, num_mask: int = 2, dim: int | str = 'time', replace_with_zero: bool = True)</p></div>"}`);export{d as comp,_ as data};

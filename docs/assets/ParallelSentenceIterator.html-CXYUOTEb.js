import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as a,a as s,o as l}from"./app-KOUU_Wij.js";const r={},n=s('<h1 id="espnet-lm-lm-utils-parallelsentenceiterator" tabindex="-1"><a class="header-anchor" href="#espnet-lm-lm-utils-parallelsentenceiterator"><span>espnet.lm.lm_utils.ParallelSentenceIterator</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.lm.lm_utils.ParallelSentenceIterator<span class="small-bracket">(dataset, batch_size, max_length=0, sos=0, eos=0, repeat=True, shuffle=True)</span></p></div><p>Bases: <code>Iterator</code></p><p>Dataset iterator to create a batch of sentences.</p><p>This iterator returns a pair of sentences, where one token is shifted between the sentences like ‘&lt;sos&gt; w1 w2 w3’ and ‘w1 w2 w3 &lt;eos&gt;’ Sentence batches are made in order of longer sentences, and then randomly shuffled.</p><div class="custom-h4"><p><em>property</em> epoch_detail</p></div><div class="custom-h4"><p><em>property</em> previous_epoch_detail</p></div><div class="custom-h4"><p>serialize<span class="small-bracket">(serializer)</span></p></div><p>Serializes the internal state of the iterator.</p><p>This is a method to support the serializer protocol of Chainer.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>It should only serialize the internal state that changes over the iteration. It should not serialize what is set manually by users such as the batch size.</p><div class="custom-h4"><p>start_shuffle()</p></div>',13);function o(i,c){return l(),t("div",null,[a(" _espnet.lm.lm_utils.ParallelSentenceIterator "),n])}const h=e(r,[["render",o],["__file","ParallelSentenceIterator.html.vue"]]),d=JSON.parse('{"path":"/guide/espnet/lm/ParallelSentenceIterator.html","title":"espnet.lm.lm_utils.ParallelSentenceIterator","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.57,"words":172},"filePathRelative":"guide/espnet/lm/ParallelSentenceIterator.md","excerpt":"<!-- _espnet.lm.lm_utils.ParallelSentenceIterator -->\\n<h1>espnet.lm.lm_utils.ParallelSentenceIterator</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.lm.lm_utils.ParallelSentenceIterator<span class=\\"small-bracket\\">(dataset, batch_size, max_length=0, sos=0, eos=0, repeat=True, shuffle=True)</span></p></div>"}');export{h as comp,d as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as o,a as n,o as r}from"./app-KOUU_Wij.js";const s={},i=n('<h1 id="espnet2-gan-svs-vits-phoneme-predictor-phonemepredictor" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-svs-vits-phoneme-predictor-phonemepredictor"><span>espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor<span class="small-bracket">(vocabs: int, hidden_channels: int = 192, attention_dim: int = 192, attention_heads: int = 2, linear_units: int = 768, blocks: int = 2, positionwise_layer_type: str = &#39;conv1d&#39;, positionwise_conv_kernel_size: int = 3, positional_encoding_layer_type: str = &#39;rel_pos&#39;, self_attention_layer_type: str = &#39;rel_selfattn&#39;, activation_type: str = &#39;swish&#39;, normalize_before: bool = True, use_macaron_style: bool = False, use_conformer_conv: bool = False, conformer_kernel_size: int = 7, dropout_rate: float = 0.1, positional_dropout_rate: float = 0.0, attention_dropout_rate: float = 0.0)</span></p></div><p>Bases: <code>Module</code></p><p>Phoneme Predictor module in VISinger.</p><p>Initialize PhonemePredictor module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>vocabs</strong> (<em>int</em>) – The number of vocabulary.</li><li><strong>hidden_channels</strong> (<em>int</em>) – The number of hidden channels.</li><li><strong>attention_dim</strong> (<em>int</em>) – The number of attention dimension.</li><li><strong>attention_heads</strong> (<em>int</em>) – The number of attention heads.</li><li><strong>linear_units</strong> (<em>int</em>) – The number of linear units.</li><li><strong>blocks</strong> (<em>int</em>) – The number of encoder blocks.</li><li><strong>positionwise_layer_type</strong> (<em>str</em>) – The type of position-wise layer.</li><li><strong>positionwise_conv_kernel_size</strong> (<em>int</em>) – The size of position-wise convolution kernel.</li><li><strong>positional_encoding_layer_type</strong> (<em>str</em>) – The type of positional encoding layer.</li><li><strong>self_attention_layer_type</strong> (<em>str</em>) – The type of self-attention layer.</li><li><strong>activation_type</strong> (<em>str</em>) – The type of activation function.</li><li><strong>normalize_before</strong> (<em>bool</em>) – Whether to apply normalization before the position-wise layer or not.</li><li><strong>use_macaron_style</strong> (<em>bool</em>) – Whether to use macaron style or not.</li><li><strong>use_conformer_conv</strong> (<em>bool</em>) – Whether to use Conformer convolution or not.</li><li><strong>conformer_kernel_size</strong> (<em>int</em>) – The size of Conformer kernel.</li><li><strong>dropout_rate</strong> (<em>float</em>) – The dropout rate.</li><li><strong>positional_dropout_rate</strong> (<em>float</em>) – The dropout rate for positional encoding.</li><li><strong>attention_dropout_rate</strong> (<em>float</em>) – The dropout rate for attention.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x, x_mask)</span></p></div><p>Perform forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>Tensor</em>) – The input tensor of shape (B, dim, length).</li><li><strong>x_mask</strong> (<em>Tensor</em>) – The mask tensor for the input tensor of shape (B, length).</li></ul></li><li><strong>Returns:</strong> The predicted phoneme tensor of shape (length, B, vocab_size).</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function a(l,m){return r(),t("div",null,[o(" _espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor "),i])}const c=e(s,[["render",a],["__file","PhonemePredictor.html.vue"]]),d=JSON.parse(`{"path":"/guide/espnet2/gan_svs/PhonemePredictor.html","title":"espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.97,"words":290},"filePathRelative":"guide/espnet2/gan_svs/PhonemePredictor.md","excerpt":"<!-- _espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor -->\\n<h1>espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_svs.vits.phoneme_predictor.PhonemePredictor<span class=\\"small-bracket\\">(vocabs: int, hidden_channels: int = 192, attention_dim: int = 192, attention_heads: int = 2, linear_units: int = 768, blocks: int = 2, positionwise_layer_type: str = 'conv1d', positionwise_conv_kernel_size: int = 3, positional_encoding_layer_type: str = 'rel_pos', self_attention_layer_type: str = 'rel_selfattn', activation_type: str = 'swish', normalize_before: bool = True, use_macaron_style: bool = False, use_conformer_conv: bool = False, conformer_kernel_size: int = 7, dropout_rate: float = 0.1, positional_dropout_rate: float = 0.0, attention_dropout_rate: float = 0.0)</span></p></div>"}`);export{c as comp,d as data};

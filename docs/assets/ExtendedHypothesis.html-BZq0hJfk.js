import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a as n,o}from"./app-KOUU_Wij.js";const d={},r=n('<h1 id="espnet-nets-transducer-decoder-interface-extendedhypothesis" tabindex="-1"><a class="header-anchor" href="#espnet-nets-transducer-decoder-interface-extendedhypothesis"><span>espnet.nets.transducer_decoder_interface.ExtendedHypothesis</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.transducer_decoder_interface.ExtendedHypothesis<span class="small-bracket">(score: float, yseq: List[int], dec_state: Tuple[Tensor, Tensor | None] | List[Tensor | None] | Tensor, lm_state: Dict[str, Any] | List[Any] | None = None, dec_out: List[Tensor] | None = None, lm_scores: Tensor | None = None)</span></p></div><p>Bases: <code>Hypothesis</code></p><p>Extended hypothesis definition for NSC beam search and mAES.</p><div class="custom-h4"><p>dec_out <em>: List[Tensor]</em> <em>= None</em></p></div><div class="custom-h4"><p>lm_scores <em>: Tensor</em> <em>= None</em></p></div>',6);function c(a,i){return o(),s("div",null,[t(" _espnet.nets.transducer_decoder_interface.ExtendedHypothesis "),r])}const _=e(d,[["render",c],["__file","ExtendedHypothesis.html.vue"]]),l=JSON.parse('{"path":"/guide/espnet/nets/ExtendedHypothesis.html","title":"espnet.nets.transducer_decoder_interface.ExtendedHypothesis","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.3,"words":89},"filePathRelative":"guide/espnet/nets/ExtendedHypothesis.md","excerpt":"<!-- _espnet.nets.transducer_decoder_interface.ExtendedHypothesis -->\\n<h1>espnet.nets.transducer_decoder_interface.ExtendedHypothesis</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.transducer_decoder_interface.ExtendedHypothesis<span class=\\"small-bracket\\">(score: float, yseq: List[int], dec_state: Tuple[Tensor, Tensor | None] | List[Tensor | None] | Tensor, lm_state: Dict[str, Any] | List[Any] | None = None, dec_out: List[Tensor] | None = None, lm_scores: Tensor | None = None)</span></p></div>"}');export{_ as comp,l as data};

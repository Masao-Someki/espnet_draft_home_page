import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as r,a,o as n}from"./app-KOUU_Wij.js";const t={},o=a('<h1 id="espnet2-asr-encoder-avhubert-encoder-resencoder" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-encoder-avhubert-encoder-resencoder"><span>espnet2.asr.encoder.avhubert_encoder.ResEncoder</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.encoder.avhubert_encoder.ResEncoder<span class="small-bracket">(relu_type, weights)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>threeD_to_2D_tensor<span class="small-bracket">(x)</span></p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function c(d,l){return n(),s("div",null,[r(" _espnet2.asr.encoder.avhubert_encoder.ResEncoder "),o])}const h=e(t,[["render",c],["__file","ResEncoder.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/asr/ResEncoder.html","title":"espnet2.asr.encoder.avhubert_encoder.ResEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.41,"words":124},"filePathRelative":"guide/espnet2/asr/ResEncoder.md","excerpt":"<!-- _espnet2.asr.encoder.avhubert_encoder.ResEncoder -->\\n<h1>espnet2.asr.encoder.avhubert_encoder.ResEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.encoder.avhubert_encoder.ResEncoder<span class=\\"small-bracket\\">(relu_type, weights)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{h as comp,u as data};

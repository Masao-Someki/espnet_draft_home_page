import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as i,b as t,d as e,e as r,w as o,a as l,o as c}from"./app-KOUU_Wij.js";const p={},d=t("p",null,"<!-- _espnet2.tts.feats_extract.ying.Ying -->",-1),g=t("h1",{id:"espnet2-tts-feats-extract-ying-ying",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#espnet2-tts-feats-extract-ying-ying"},[t("span",null,"espnet2.tts.feats_extract.ying.Ying")])],-1),m=t("div",{class:"custom-h3"},[t("p",null,[t("em",null,"class"),e(" espnet2.tts.feats_extract.ying.Ying"),t("span",{class:"small-bracket"},"(fs: int = 22050, w_step: int = 256, W: int = 2048, tau_max: int = 2048, midi_start: int = -5, midi_end: int = 75, octave_range: int = 24, use_token_averaged_ying: bool = False)")])],-1),u=t("code",null,"AbsFeatsExtract",-1),_=l('<p>Extact Ying-based Features.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>crop_scope<span class="small-bracket">(x, yin_start, scope_shift)</span></p></div><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor | None = None, feats_lengths: Tensor | None = None, durations: Tensor | None = None, durations_lengths: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>get_parameters()</p></div><div class="custom-h4"><p>midi_to_lag<span class="small-bracket">(m: int, octave_range: float = 12)</span></p></div><p>converts midi-to-lag, eq. (4)</p><ul><li><strong>Parameters:</strong><ul><li><strong>m</strong> – midi</li><li><strong>fs</strong> – sample_rate</li><li><strong>octave_range</strong> –</li></ul></li><li><strong>Returns:</strong> time lag(tau, c(m)) calculated from midi, eq. (4)</li><li><strong>Return type:</strong> lag</li></ul><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div><div class="custom-h4"><p>yingram<span class="small-bracket">(x: Tensor)</span></p></div><p>calculates yingram from raw audio (multi segment)</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> – raw audio, torch.Tensor of shape (t)</li><li><strong>W</strong> – yingram Window Size</li><li><strong>tau_max</strong> –</li><li><strong>fs</strong> – sampling rate</li><li><strong>w_step</strong> – yingram bin step size</li></ul></li><li><strong>Returns:</strong> yingram. torch.Tensor of shape (80 x t’)</li><li><strong>Return type:</strong> yingram</li></ul><div class="custom-h4"><p>yingram_from_cmndf<span class="small-bracket">(cmndfs: Tensor)</span></p></div><p>yingram calculator from cMNDFs.</p><p>(cumulative Mean Normalized Difference Functions)</p><ul><li><strong>Parameters:</strong><ul><li><strong>cmndfs</strong> – torch.Tensor calculated cumulative mean normalized difference function for details, see models/yin.py or eq. (1) and (2)</li><li><strong>ms</strong> – list of midi(int)</li><li><strong>fs</strong> – sampling rate</li></ul></li><li><strong>Returns:</strong> calculated batch yingram</li><li><strong>Return type:</strong> y</li></ul>',21);function h(f,v){const s=a("RouteLink");return c(),i("div",null,[d,g,m,t("p",null,[e("Bases: "),r(s,{to:"/guide/espnet2/tts/AbsFeatsExtract.html#espnet2.tts.feats_extract.abs_feats_extract.AbsFeatsExtract"},{default:o(()=>[u]),_:1})]),_])}const b=n(p,[["render",h],["__file","Ying.html.vue"]]),N=JSON.parse('{"path":"/guide/espnet2/tts/Ying.html","title":"espnet2.tts.feats_extract.ying.Ying","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"guide/espnet2/tts/Ying.md","excerpt":"<p>&lt;!-- _espnet2.tts.feats_extract.ying.Ying --&gt;</p>\\n<h1>espnet2.tts.feats_extract.ying.Ying</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.tts.feats_extract.ying.Ying<span class=\\"small-bracket\\">(fs: int = 22050, w_step: int = 256, W: int = 2048, tau_max: int = 2048, midi_start: int = -5, midi_end: int = 75, octave_range: int = 24, use_token_averaged_ying: bool = False)</span></p></div>"}');export{b as comp,N as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as i,f as a,b as e,d as s,e as r,w as l,a as c,o as d}from"./app-KOUU_Wij.js";const h={},m=e("h1",{id:"espnet2-enh-loss-criterions-time-domain-cisdrloss",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-enh-loss-criterions-time-domain-cisdrloss"},[e("span",null,"espnet2.enh.loss.criterions.time_domain.CISDRLoss")])],-1),p=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.enh.loss.criterions.time_domain.CISDRLoss"),e("span",{class:"small-bracket"},"(filter_length=512, name=None, only_for_test=False, is_noise_loss=False, is_dereverb_loss=False)")])],-1),_=e("code",null,"TimeDomainLoss",-1),u=c('<p>CI-SDR loss</p><p>Reference: : Convolutive Transfer Function Invariant SDR Training Criteria for Multi-Channel Reverberant Speech Separation; C. Boeddeker et al., 2021; <a href="https://arxiv.org/abs/2011.15003" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/2011.15003</a></p><ul><li><strong>Parameters:</strong><ul><li><strong>ref</strong> – (Batch, samples)</li><li><strong>inf</strong> – (Batch, samples)</li><li><strong>filter_length</strong> (<em>int</em>) – a time-invariant filter that allows slight distortion via filtering</li></ul></li><li><strong>Returns:</strong> (Batch,)</li><li><strong>Return type:</strong> loss</li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(ref: Tensor, inf: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function f(g,v){const t=o("RouteLink");return d(),i("div",null,[a(" _espnet2.enh.loss.criterions.time_domain.CISDRLoss "),m,p,e("p",null,[s("Bases: "),r(t,{to:"/guide/espnet2/enh/TimeDomainLoss.html#espnet2.enh.loss.criterions.time_domain.TimeDomainLoss"},{default:l(()=>[_]),_:1})]),u])}const S=n(h,[["render",f],["__file","CISDRLoss.html.vue"]]),C=JSON.parse('{"path":"/guide/espnet2/enh/CISDRLoss.html","title":"espnet2.enh.loss.criterions.time_domain.CISDRLoss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.58,"words":173},"filePathRelative":"guide/espnet2/enh/CISDRLoss.md","excerpt":"<!-- _espnet2.enh.loss.criterions.time_domain.CISDRLoss -->\\n<h1>espnet2.enh.loss.criterions.time_domain.CISDRLoss</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.loss.criterions.time_domain.CISDRLoss<span class=\\"small-bracket\\">(filter_length=512, name=None, only_for_test=False, is_noise_loss=False, is_dereverb_loss=False)</span></p></div>"}');export{S as comp,C as data};

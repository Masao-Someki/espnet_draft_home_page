import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as r,f as a,b as e,d as t,e as c,w as l,a as i,o as h}from"./app-KOUU_Wij.js";const u={},p=e("h1",{id:"espnet-nets-scorers-length-bonus-lengthbonus",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-nets-scorers-length-bonus-lengthbonus"},[e("span",null,"espnet.nets.scorers.length_bonus.LengthBonus")])],-1),g=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet.nets.scorers.length_bonus.LengthBonus"),e("span",{class:"small-bracket"},"(n_vocab: int)")])],-1),m=e("code",null,"BatchScorerInterface",-1),_=i('<p>Length bonus in beam search.</p><p>Initialize class.</p><ul><li><strong>Parameters:</strong><strong>n_vocab</strong> (<em>int</em>) – The number of tokens in vocabulary for beam search</li></ul><div class="custom-h4"><p>batch_score<span class="small-bracket">(ys: Tensor, states: List[Any], xs: Tensor)</span></p></div><p>Score new token batch.</p><ul><li><strong>Parameters:</strong><ul><li><strong>ys</strong> (<em>torch.Tensor</em>) – torch.int64 prefix tokens (n_batch, ylen).</li><li><strong>states</strong> (<em>List</em> *[*<em>Any</em> <em>]</em>) – Scorer states for prefix tokens.</li><li><strong>xs</strong> (<em>torch.Tensor</em>) – The encoder feature that generates ys (n_batch, xlen, n_feat).</li></ul></li><li><strong>Returns:</strong> Tuple of : batchfied scores for next token with shape of (n_batch, n_vocab) and next state list for ys.</li><li><strong>Return type:</strong> tuple[torch.Tensor, List[Any]]</li></ul><div class="custom-h4"><p>score<span class="small-bracket">(y, state, x)</span></p></div><p>Score new token.</p><ul><li><strong>Parameters:</strong><ul><li><strong>y</strong> (<em>torch.Tensor</em>) – 1D torch.int64 prefix tokens.</li><li><strong>state</strong> – Scorer state for prefix tokens</li><li><strong>x</strong> (<em>torch.Tensor</em>) – 2D encoder feature that generates ys.</li></ul></li><li><strong>Returns:</strong> Tuple of : torch.float32 scores for next token (n_vocab) and None</li><li><strong>Return type:</strong> tuple[torch.Tensor, Any]</li></ul>',9);function d(f,b){const s=o("RouteLink");return h(),r("div",null,[a(" _espnet.nets.scorers.length_bonus.LengthBonus "),p,g,e("p",null,[t("Bases: "),c(s,{to:"/guide/espnet/nets/BatchScorerInterface.html#espnet.nets.scorer_interface.BatchScorerInterface"},{default:l(()=>[m]),_:1})]),_])}const k=n(u,[["render",d],["__file","LengthBonus.html.vue"]]),v=JSON.parse('{"path":"/guide/espnet/nets/LengthBonus.html","title":"espnet.nets.scorers.length_bonus.LengthBonus","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"guide/espnet/nets/LengthBonus.md","excerpt":"<!-- _espnet.nets.scorers.length_bonus.LengthBonus -->\\n<h1>espnet.nets.scorers.length_bonus.LengthBonus</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.scorers.length_bonus.LengthBonus<span class=\\"small-bracket\\">(n_vocab: int)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet/nets/BatchScorerInterface.html#espnet.nets.scorer_interface.BatchScorerInterface\\" target=\\"_blank\\"><code>BatchScorerInterface</code></a></p>"}');export{k as comp,v as data};

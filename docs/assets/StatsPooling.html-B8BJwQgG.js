import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as a,f as i,b as e,d as t,e as l,w as p,a as r,o as d}from"./app-KOUU_Wij.js";const c={},g=e("h1",{id:"espnet2-spk-pooling-stat-pooling-statspooling",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-spk-pooling-stat-pooling-statspooling"},[e("span",null,"espnet2.spk.pooling.stat_pooling.StatsPooling")])],-1),h=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.spk.pooling.stat_pooling.StatsPooling"),e("span",{class:"small-bracket"},"(input_size: int = 1536)")])],-1),u=e("code",null,"AbsPooling",-1),m=r('<p>Aggregates frame-level features to single utterance-level feature.</p><p>Proposed in D. Snyder et al., “X-vectors: Robust dnn embeddings for speaker recognition”</p><ul><li><strong>Parameters:</strong><strong>input_size</strong> – dimensionality of the input frame-level embeddings. Determined by encoder hyperparameter. For this pooling layer, the output dimensionality will be double of the input_size</li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x, task_tokens: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function _(f,b){const o=n("RouteLink");return d(),a("div",null,[i(" _espnet2.spk.pooling.stat_pooling.StatsPooling "),g,h,e("p",null,[t("Bases: "),l(o,{to:"/guide/espnet2/spk/AbsPooling.html#espnet2.spk.pooling.abs_pooling.AbsPooling"},{default:p(()=>[u]),_:1})]),m])}const v=s(c,[["render",_],["__file","StatsPooling.html.vue"]]),S=JSON.parse('{"path":"/guide/espnet2/spk/StatsPooling.html","title":"espnet2.spk.pooling.stat_pooling.StatsPooling","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.58,"words":174},"filePathRelative":"guide/espnet2/spk/StatsPooling.md","excerpt":"<!-- _espnet2.spk.pooling.stat_pooling.StatsPooling -->\\n<h1>espnet2.spk.pooling.stat_pooling.StatsPooling</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.pooling.stat_pooling.StatsPooling<span class=\\"small-bracket\\">(input_size: int = 1536)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet2/spk/AbsPooling.html#espnet2.spk.pooling.abs_pooling.AbsPooling\\" target=\\"_blank\\"><code>AbsPooling</code></a></p>"}');export{v as comp,S as data};

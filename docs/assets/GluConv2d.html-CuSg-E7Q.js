import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as s,a as t}from"./app-KOUU_Wij.js";const l={},r=t('<p>&lt;!-- _espnet2.enh.layers.dc_crn.GluConv2d --&gt;</p><h1 id="espnet2-enh-layers-dc-crn-gluconv2d" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-dc-crn-gluconv2d"><span>espnet2.enh.layers.dc_crn.GluConv2d</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.dc_crn.GluConv2d<span class="small-bracket">(in_channels, out_channels, kernel_size, stride, padding=0)</span></p></div><p>Bases: <code>Module</code></p><p>Conv2d with Gated Linear Units (GLU).</p><p>Input and output shapes are the same as regular Conv2d layers.</p><p>Reference: Section III-B in [1]</p><ul><li><strong>Parameters:</strong><ul><li><strong>in_channels</strong> (<em>int</em>) – number of input channels</li><li><strong>out_channels</strong> (<em>int</em>) – number of output channels</li><li><strong>kernel_size</strong> (<em>int/tuple</em>) – kernel size in Conv2d</li><li><strong>stride</strong> (<em>int/tuple</em>) – stride size in Conv2d</li><li><strong>padding</strong> (<em>int/tuple</em>) – padding size in Conv2d</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>ConvGLU forward.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – (B, C_in, H_in, W_in)</li><li><strong>Returns:</strong> (B, C_out, H_out, W_out)</li><li><strong>Return type:</strong> out (torch.Tensor)</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',12),o=[r];function a(i,c){return s(),n("div",null,o)}const u=e(l,[["render",a],["__file","GluConv2d.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet2/enh/GluConv2d.html","title":"espnet2.enh.layers.dc_crn.GluConv2d","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":126},"filePathRelative":"guide/espnet2/enh/GluConv2d.md","excerpt":"<p>&lt;!-- _espnet2.enh.layers.dc_crn.GluConv2d --&gt;</p>\\n<h1>espnet2.enh.layers.dc_crn.GluConv2d</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.dc_crn.GluConv2d<span class=\\"small-bracket\\">(in_channels, out_channels, kernel_size, stride, padding=0)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{u as comp,m as data};

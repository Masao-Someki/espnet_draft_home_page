import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as o,f as n,b as e,d as t,e as i,w as l,a as p,o as m}from"./app-KOUU_Wij.js";const c={},d=e("h1",{id:"espnet2-diar-separator-tcn-separator-nomask-tcnseparatornomask",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-diar-separator-tcn-separator-nomask-tcnseparatornomask"},[e("span",null,"espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask")])],-1),u=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask"),e("span",{class:"small-bracket"},"(input_dim: int, layer: int = 8, stack: int = 3, bottleneck_dim: int = 128, hidden_dim: int = 512, kernel: int = 3, causal: bool = False, norm_type: str = 'gLN')")])],-1),_=e("code",null,"AbsSeparator",-1),h=p('<p>Temporal Convolution Separator</p><p>Note that this separator is equivalent to TCNSeparator except for not having the mask estimation part. This separator outputs the intermediate bottleneck feats (which is used as the input to diarization branch in enh_diar task). This separator is followed by MultiMask module, which estimates the masks.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_dim</strong> – input feature dimension</li><li><strong>layer</strong> – int, number of layers in each stack.</li><li><strong>stack</strong> – int, number of stacks</li><li><strong>bottleneck_dim</strong> – bottleneck dimension</li><li><strong>hidden_dim</strong> – number of convolution channel</li><li><strong>kernel</strong> – int, kernel size.</li><li><strong>causal</strong> – bool, defalut False.</li><li><strong>norm_type</strong> – str, choose from ‘BN’, ‘gLN’, ‘cLN’</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor | ComplexTensor, ilens: Tensor)</span></p></div><p>Forward.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input</strong> (<em>torch.Tensor</em> <em>or</em> <em>ComplexTensor</em>) – Encoded feature [B, T, N]</li><li><strong>ilens</strong> (<em>torch.Tensor</em>) – input lengths [Batch]</li></ul></li><li><strong>Returns:</strong> [B, T, bottleneck_dim] ilens (torch.Tensor): (B,)</li><li><strong>Return type:</strong> feats (torch.Tensor)</li></ul><div class="custom-h4"><p><em>property</em> num_spk</p></div><div class="custom-h4"><p><em>property</em> output_dim <em>: int</em></p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',9);function k(g,N){const a=r("RouteLink");return m(),o("div",null,[n(" _espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask "),d,u,e("p",null,[t("Bases: "),i(a,{to:"/guide/espnet2/enh/AbsSeparator.html#espnet2.enh.separator.abs_separator.AbsSeparator"},{default:l(()=>[_]),_:1})]),h])}const f=s(c,[["render",k],["__file","TCNSeparatorNomask.html.vue"]]),v=JSON.parse(`{"path":"/guide/espnet2/diar/TCNSeparatorNomask.html","title":"espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.72,"words":217},"filePathRelative":"guide/espnet2/diar/TCNSeparatorNomask.md","excerpt":"<!-- _espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask -->\\n<h1>espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.diar.separator.tcn_separator_nomask.TCNSeparatorNomask<span class=\\"small-bracket\\">(input_dim: int, layer: int = 8, stack: int = 3, bottleneck_dim: int = 128, hidden_dim: int = 512, kernel: int = 3, causal: bool = False, norm_type: str = 'gLN')</span></p></div>"}`);export{f as comp,v as data};

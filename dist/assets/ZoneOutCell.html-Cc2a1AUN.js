import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a as i,o as n}from"./app-KOUU_Wij.js";const l={},a=i(`<h1 id="espnet-nets-pytorch-backend-tacotron2-decoder-zoneoutcell" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-tacotron2-decoder-zoneoutcell"><span>espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell<span class="small-bracket">(cell, zoneout_rate=0.1)</span></p></div><p>Bases: <code>Module</code></p><p>ZoneOut Cell module.</p><p>This is a module of zoneout described in <a href="https://arxiv.org/abs/1606.01305" target="_blank" rel="noopener noreferrer">Zoneout: Regularizing RNNs by Randomly Preserving Hidden Activations</a>. This code is modified from <a href="https://github.com/eladhoffer/seq2seq.pytorch" target="_blank" rel="noopener noreferrer">eladhoffer/seq2seq.pytorch</a>.</p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lstm </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> torch.nn.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">LSTMCell</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lstm </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> ZoneOutCell</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(lstm, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Initialize zone out cell module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>cell</strong> (<em>torch.nn.Module</em>) – Pytorch recurrent cell module e.g. torch.nn.Module.LSTMCell.</li><li><strong>zoneout_rate</strong> (<em>float</em> <em>,</em> <em>optional</em>) – Probability of zoneout from 0.0 to 1.0.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(inputs, hidden)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>inputs</strong> (<em>Tensor</em>) – Batch of input tensor (B, input_size).</li><li><strong>hidden</strong> (<em>tuple</em>) – <ul><li>Tensor: Batch of initial hidden states (B, hidden_size).</li><li>Tensor: Batch of initial cell states (B, hidden_size).</li></ul></li></ul></li><li><strong>Returns:</strong><ul><li>Tensor: Batch of next hidden states (B, hidden_size).</li><li>Tensor: Batch of next cell states (B, hidden_size).</li></ul></li><li><strong>Return type:</strong> tuple</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>`,13);function o(r,d){return n(),s("div",null,[t(" _espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell "),a])}const c=e(l,[["render",o],["__file","ZoneOutCell.html.vue"]]),k=JSON.parse('{"path":"/guide/espnet/nets/ZoneOutCell.html","title":"espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"guide/espnet/nets/ZoneOutCell.md","excerpt":"<!-- _espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell -->\\n<h1>espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.tacotron2.decoder.ZoneOutCell<span class=\\"small-bracket\\">(cell, zoneout_rate=0.1)</span></p></div>"}');export{c as comp,k as data};

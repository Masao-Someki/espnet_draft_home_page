import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a,o}from"./app-KOUU_Wij.js";const r={},i=a('<h1 id="espnet2-gan-tts-hifigan-loss-featurematchloss" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-hifigan-loss-featurematchloss"><span>espnet2.gan_tts.hifigan.loss.FeatureMatchLoss</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.hifigan.loss.FeatureMatchLoss<span class="small-bracket">(average_by_layers: bool = True, average_by_discriminators: bool = True, include_final_outputs: bool = False)</span></p></div><p>Bases: <code>Module</code></p><p>Feature matching loss module.</p><p>Initialize FeatureMatchLoss module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>average_by_layers</strong> (<em>bool</em>) – Whether to average the loss by the number of layers.</li><li><strong>average_by_discriminators</strong> (<em>bool</em>) – Whether to average the loss by the number of discriminators.</li><li><strong>include_final_outputs</strong> (<em>bool</em>) – Whether to include the final output of each discriminator for loss calculation.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(feats_hat: List[List[Tensor]] | List[Tensor], feats: List[List[Tensor]] | List[Tensor])</span></p></div><p>Calculate feature matching loss.</p><ul><li><strong>Parameters:</strong><ul><li><strong>feats_hat</strong> (<em>Union</em> *[*<em>List</em> *[*<em>List</em> *[*<em>Tensor</em> <em>]</em> <em>]</em> <em>,</em> <em>List</em> *[*<em>Tensor</em> <em>]</em> <em>]</em>) – List of list of discriminator outputs or list of discriminator outputs calcuated from generator’s outputs.</li><li><strong>feats</strong> (<em>Union</em> *[*<em>List</em> *[*<em>List</em> *[*<em>Tensor</em> <em>]</em> <em>]</em> <em>,</em> <em>List</em> *[*<em>Tensor</em> <em>]</em> <em>]</em>) – List of list of discriminator outputs or list of discriminator outputs calcuated from groundtruth..</li></ul></li><li><strong>Returns:</strong> Feature matching loss value.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function n(l,m){return o(),s("div",null,[t(" _espnet2.gan_tts.hifigan.loss.FeatureMatchLoss "),i])}const h=e(r,[["render",n],["__file","FeatureMatchLoss.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/gan_tts/FeatureMatchLoss.html","title":"espnet2.gan_tts.hifigan.loss.FeatureMatchLoss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.56,"words":168},"filePathRelative":"guide/espnet2/gan_tts/FeatureMatchLoss.md","excerpt":"<!-- _espnet2.gan_tts.hifigan.loss.FeatureMatchLoss -->\\n<h1>espnet2.gan_tts.hifigan.loss.FeatureMatchLoss</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.hifigan.loss.FeatureMatchLoss<span class=\\"small-bracket\\">(average_by_layers: bool = True, average_by_discriminators: bool = True, include_final_outputs: bool = False)</span></p></div>"}');export{h as comp,g as data};

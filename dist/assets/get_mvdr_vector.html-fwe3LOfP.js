import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,f as t,a as n,o}from"./app-KOUU_Wij.js";const s={},c=n('<h1 id="espnet-nets-pytorch-backend-frontends-beamformer-get-mvdr-vector" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-frontends-beamformer-get-mvdr-vector"><span>espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector</span></a></h1><div class="custom-h3"><p>espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector<span class="small-bracket">(psd_s: ComplexTensor, psd_n: ComplexTensor, reference_vector: Tensor, eps: float = 1e-15)</span></p></div><p>Return the MVDR(Minimum Variance Distortionless Response) vector:</p><blockquote><p>h = (Npsd^-1 @ Spsd) / (Tr(Npsd^-1 @ Spsd)) @ u</p></blockquote><p>Reference: : On optimal frequency-domain multichannel linear filtering for noise reduction; M. Souden et al., 2010; <a href="https://ieeexplore.ieee.org/document/5089420" target="_blank" rel="noopener noreferrer">https://ieeexplore.ieee.org/document/5089420</a></p><ul><li><strong>Parameters:</strong><ul><li><strong>psd_s</strong> (<em>ComplexTensor</em>) – (…, F, C, C)</li><li><strong>psd_n</strong> (<em>ComplexTensor</em>) – (…, F, C, C)</li><li><strong>reference_vector</strong> (<em>torch.Tensor</em>) – (…, C)</li><li><strong>eps</strong> (<em>float</em>) –</li></ul></li><li><strong>Returns:</strong> (…, F, C)</li><li><strong>Return type:</strong> beamform_vector (ComplexTensor)r</li></ul>',6);function a(m,p){return o(),r("div",null,[t(" _espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector "),c])}const i=e(s,[["render",a],["__file","get_mvdr_vector.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet/nets/get_mvdr_vector.html","title":"espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.3,"words":90},"filePathRelative":"guide/espnet/nets/get_mvdr_vector.md","excerpt":"<!-- _espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector -->\\n<h1>espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.frontends.beamformer.get_mvdr_vector<span class=\\"small-bracket\\">(psd_s: ComplexTensor, psd_n: ComplexTensor, reference_vector: Tensor, eps: float = 1e-15)</span></p></div>"}');export{i as comp,_ as data};

import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as n,f as a,b as e,d as t,e as i,w as l,a as d,o as c}from"./app-KOUU_Wij.js";const p={},u=e("h1",{id:"espnet2-asr-transducer-decoder-rwkv-decoder-rwkvdecoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-transducer-decoder-rwkv-decoder-rwkvdecoder"},[e("span",null,"espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder")])],-1),_=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder"),e("span",{class:"small-bracket"},"(vocab_size: int, block_size: int = 512, context_size: int = 1024, linear_size: int | None = None, attention_size: int | None = None, normalization_type: str = 'layer_norm', normalization_args: Dict = {}, num_blocks: int = 4, rescale_every: int = 0, embed_dropout_rate: float = 0.0, att_dropout_rate: float = 0.0, ffn_dropout_rate: float = 0.0, embed_pad: int = 0)")])],-1),g=e("code",null,"AbsDecoder",-1),m=d('<p>RWKV decoder module.</p><p>Based on <a href="https://arxiv.org/pdf/2305.13048.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/2305.13048.pdf</a>.</p><ul><li><strong>Parameters:</strong><ul><li><strong>vocab_size</strong> – Vocabulary size.</li><li><strong>block_size</strong> – Input/Output size.</li><li><strong>context_size</strong> – Context size for WKV computation.</li><li><strong>linear_size</strong> – FeedForward hidden size.</li><li><strong>attention_size</strong> – SelfAttention hidden size.</li><li><strong>normalization_type</strong> – Normalization layer type.</li><li><strong>normalization_args</strong> – Normalization layer arguments.</li><li><strong>num_blocks</strong> – Number of RWKV blocks.</li><li><strong>rescale_every</strong> – Whether to rescale input every N blocks (inference only).</li><li><strong>embed_dropout_rate</strong> – Dropout rate for embedding layer.</li><li><strong>att_dropout_rate</strong> – Dropout rate for the attention module.</li><li><strong>ffn_dropout_rate</strong> – Dropout rate for the feed-forward module.</li><li><strong>embed_pad</strong> – Embedding padding symbol ID.</li></ul></li></ul><p>Construct a RWKVDecoder object.</p><div class="custom-h4"><p>batch_score<span class="small-bracket">(hyps: List[<a href="Hypothesis.md#espnet2.asr_transducer.beam_search_transducer.Hypothesis">Hypothesis</a></span>])</p></div><p>One-step forward hypotheses.</p><ul><li><strong>Parameters:</strong><strong>hyps</strong> – Hypotheses.</li><li><strong>Returns:</strong> Decoder output sequence. (B, D_dec) states: Decoder hidden states. [5 x (B, 1, D_att/D_dec, N)]</li><li><strong>Return type:</strong> out</li></ul><div class="custom-h4"><p>create_batch_states<span class="small-bracket">(new_states: List[List[Dict[str, Tensor]]])</span></p></div><p>Create batch of decoder hidden states given a list of new states.</p><ul><li><strong>Parameters:</strong><strong>new_states</strong> – Decoder hidden states. [B x [5 x (1, 1, D_att/D_dec, N)]</li><li><strong>Returns:</strong> Decoder hidden states. [5 x (B, 1, D_att/D_dec, N)]</li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(labels: Tensor)</span></p></div><p>Encode source label sequences.</p><ul><li><strong>Parameters:</strong><strong>labels</strong> – Decoder input sequences. (B, L)</li><li><strong>Returns:</strong> Decoder output sequences. (B, U, D_dec)</li><li><strong>Return type:</strong> out</li></ul><div class="custom-h4"><p>inference<span class="small-bracket">(labels: Tensor, states: Tensor)</span></p></div><p>Encode source label sequences.</p><ul><li><strong>Parameters:</strong><ul><li><strong>labels</strong> – Decoder input sequences. (B, L)</li><li><strong>states</strong> – Decoder hidden states. [5 x (B, D_att/D_dec, N)]</li></ul></li><li><strong>Returns:</strong> Decoder output sequences. (B, U, D_dec) states: Decoder hidden states. [5 x (B, D_att/D_dec, N)]</li><li><strong>Return type:</strong> out</li></ul><div class="custom-h4"><p>init_state<span class="small-bracket">(batch_size: int = 1)</span></p></div><p>Initialize RWKVDecoder states.</p><ul><li><strong>Parameters:</strong><strong>batch_size</strong> – Batch size.</li><li><strong>Returns:</strong> Decoder hidden states. [5 x (B, 1, D_att/D_dec, N)]</li><li><strong>Return type:</strong> states</li></ul><div class="custom-h4"><p>score<span class="small-bracket">(label_sequence: List[int], states: List[Tensor])</span></p></div><p>One-step forward hypothesis.</p><ul><li><strong>Parameters:</strong><ul><li><strong>label_sequence</strong> – Current label sequence.</li><li><strong>states</strong> – Decoder hidden states. [5 x (1, 1, D_att/D_dec, N)]</li></ul></li><li><strong>Returns:</strong> Decoder output sequence. (D_dec) states: Decoder hidden states. [5 x (1, 1, D_att/D_dec, N)]</li></ul><div class="custom-h4"><p>select_state<span class="small-bracket">(states: List[Tensor], idx: int)</span></p></div><p>Select ID state from batch of decoder hidden states.</p><ul><li><strong>Parameters:</strong><strong>states</strong> – Decoder hidden states. [5 x (B, 1, D_att/D_dec, N)]</li><li><strong>Returns:</strong> Decoder hidden states for given ID. [5 x (1, 1, D_att/D_dec, N)]</li></ul><div class="custom-h4"><p>set_device<span class="small-bracket">(device: device)</span></p></div><p>Set GPU device to use.</p><ul><li><strong>Parameters:</strong><strong>device</strong> – Device ID.</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',29);function h(D,b){const s=o("RouteLink");return c(),n("div",null,[a(" _espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder "),u,_,e("p",null,[t("Bases: "),i(s,{to:"/guide/espnet2/asr_transducer/AbsDecoder.html#espnet2.asr_transducer.decoder.abs_decoder.AbsDecoder"},{default:l(()=>[g]),_:1})]),m])}const k=r(p,[["render",h],["__file","RWKVDecoder.html.vue"]]),z=JSON.parse(`{"path":"/guide/espnet2/asr_transducer/RWKVDecoder.html","title":"espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"guide/espnet2/asr_transducer/RWKVDecoder.md","excerpt":"<!-- _espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder -->\\n<h1>espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.decoder.rwkv_decoder.RWKVDecoder<span class=\\"small-bracket\\">(vocab_size: int, block_size: int = 512, context_size: int = 1024, linear_size: int | None = None, attention_size: int | None = None, normalization_type: str = 'layer_norm', normalization_args: Dict = {}, num_blocks: int = 4, rescale_every: int = 0, embed_dropout_rate: float = 0.0, att_dropout_rate: float = 0.0, ffn_dropout_rate: float = 0.0, embed_pad: int = 0)</span></p></div>"}`);export{k as comp,z as data};

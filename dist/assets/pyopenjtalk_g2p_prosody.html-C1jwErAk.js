import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as e,a as t,o as a}from"./app-KOUU_Wij.js";const n={},p=t(`<h1 id="espnet2-text-phoneme-tokenizer-pyopenjtalk-g2p-prosody" tabindex="-1"><a class="header-anchor" href="#espnet2-text-phoneme-tokenizer-pyopenjtalk-g2p-prosody"><span>espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody</span></a></h1><div class="custom-h3"><p>espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody<span class="small-bracket">(text: str, drop_unvoiced_vowels: bool = True)</span></p></div><p>Extract phoneme + prosoody symbol sequence from input full-context labels.</p><p>The algorithm is based on <a href="https://doi.org/10.1587/transinf.2020EDP7104" target="_blank" rel="noopener noreferrer">Prosodic features control by symbols as input of sequence-to-sequence acoustic modeling for neural TTS</a> with some r9y9’s tweaks.</p><ul><li><strong>Parameters:</strong><ul><li><strong>text</strong> (<em>str</em>) – Input text.</li><li><strong>drop_unvoiced_vowels</strong> (<em>bool</em>) – whether to drop unvoiced vowels.</li></ul></li><li><strong>Returns:</strong> List of phoneme + prosody symbols.</li><li><strong>Return type:</strong> List[str]</li></ul><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> espnet2.text.phoneme_tokenizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> pyopenjtalk_g2p_prosody</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> pyopenjtalk_g2p_prosody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;こんにちは。&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;^&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;k&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;o&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;[&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;N&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;n&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;i&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;ch&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;i&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;w&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;$&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function l(o,h){return a(),i("div",null,[e(" _espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody "),p])}const d=s(n,[["render",l],["__file","pyopenjtalk_g2p_prosody.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/text/pyopenjtalk_g2p_prosody.html","title":"espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"guide/espnet2/text/pyopenjtalk_g2p_prosody.md","excerpt":"<!-- _espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody -->\\n<h1>espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.text.phoneme_tokenizer.pyopenjtalk_g2p_prosody<span class=\\"small-bracket\\">(text: str, drop_unvoiced_vowels: bool = True)</span></p></div>"}');export{d as comp,g as data};

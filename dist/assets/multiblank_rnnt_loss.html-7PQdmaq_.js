import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as a,a as e,o as l}from"./app-KOUU_Wij.js";const r={},s=e('<h1 id="espnet2-asr-transducer-rnnt-multi-blank-rnnt-multi-blank-multiblank-rnnt-loss" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-rnnt-multi-blank-rnnt-multi-blank-multiblank-rnnt-loss"><span>espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss</span></a></h1><div class="custom-h3"><p>espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss<span class="small-bracket">(acts, labels, act_lens, label_lens, blank, big_blank_durations=[], reduction=&#39;mean&#39;, fastemit_lambda: float = 0.0, clamp: float = 0.0)</span></p></div><p>Multi-blank RNN Transducer (<a href="https://arxiv.org/pdf/2211.03541.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/2211.03541.pdf</a>)</p><p>Loss (functional form) :param acts: Tensor of (batch x seqLength x labelLength x outputDim) containing :param output from network: :param labels: 2 dimensional Tensor containing all the targets of the batch with</p><blockquote><p>zero padded</p></blockquote><ul><li><strong>Parameters:</strong><ul><li><strong>act_lens</strong> – Tensor of size (batch) containing size of each output sequence from the network</li><li><strong>label_lens</strong> – Tensor of (batch) containing label length of each example</li><li><strong>blank</strong> (<em>int</em>) – standard blank label.</li><li><strong>big_blank_durations</strong> – list of durations for multi-blank transducer, e.g. [2, 4, 8].</li><li><strong>sigma</strong> – hyper-parameter for logit under-normalization method for training multi-blank transducers. Recommended value 0.05.</li><li><strong>https</strong> (<em>Refer to</em>) – //arxiv.org/pdf/2211.03541 for detailed explanations for the last two params.</li><li><strong>reduction</strong> (<em>string</em> <em>,</em> <em>optional</em>) – Specifies the reduction to apply to the output: ‘none’ | ‘mean’ | ‘sum’. ‘none’: no reduction will be applied, ‘mean’: the output losses will be divided by the target lengths and then the mean over the batch is taken. Default: ‘mean’</li></ul></li></ul>',6);function o(i,m){return l(),t("div",null,[a(" _espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss "),s])}const c=n(r,[["render",o],["__file","multiblank_rnnt_loss.html.vue"]]),b=JSON.parse(`{"path":"/guide/espnet2/asr/multiblank_rnnt_loss.html","title":"espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.62,"words":185},"filePathRelative":"guide/espnet2/asr/multiblank_rnnt_loss.md","excerpt":"<!-- _espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss -->\\n<h1>espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.multiblank_rnnt_loss<span class=\\"small-bracket\\">(acts, labels, act_lens, label_lens, blank, big_blank_durations=[], reduction='mean', fastemit_lambda: float = 0.0, clamp: float = 0.0)</span></p></div>"}`);export{c as comp,b as data};

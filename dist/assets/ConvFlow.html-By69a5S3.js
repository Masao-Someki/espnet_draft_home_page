import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as t,a as s}from"./app-KOUU_Wij.js";const o={},l=s('<p>&lt;!-- _espnet2.gan_tts.vits.flow.ConvFlow --&gt;</p><h1 id="espnet2-gan-tts-vits-flow-convflow" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-vits-flow-convflow"><span>espnet2.gan_tts.vits.flow.ConvFlow</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.vits.flow.ConvFlow<span class="small-bracket">(in_channels: int, hidden_channels: int, kernel_size: int, layers: int, bins: int = 10, tail_bound: float = 5.0)</span></p></div><p>Bases: <code>Module</code></p><p>Convolutional flow module.</p><p>Initialize ConvFlow module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>in_channels</strong> (<em>int</em>) – Number of input channels.</li><li><strong>hidden_channels</strong> (<em>int</em>) – Number of hidden channels.</li><li><strong>kernel_size</strong> (<em>int</em>) – Kernel size.</li><li><strong>layers</strong> (<em>int</em>) – Number of layers.</li><li><strong>bins</strong> (<em>int</em>) – Number of bins.</li><li><strong>tail_bound</strong> (<em>float</em>) – Tail bound value.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor, x_mask: Tensor, g: Tensor | None = None, inverse: bool = False)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>Tensor</em>) – Input tensor (B, channels, T).</li><li><strong>x_mask</strong> (<em>Tensor</em>) – Mask tensor (B,).</li><li><strong>g</strong> (<em>Optional</em> *[*<em>Tensor</em> <em>]</em>) – Global conditioning tensor (B, channels, 1).</li><li><strong>inverse</strong> (<em>bool</em>) – Whether to inverse the flow.</li></ul></li><li><strong>Returns:</strong> Output tensor (B, channels, T). Tensor: Log-determinant tensor for NLL (B,) if not inverse.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11),i=[l];function a(r,m){return t(),e("div",null,i)}const g=n(o,[["render",a],["__file","ConvFlow.html.vue"]]),d=JSON.parse('{"path":"/guide/espnet2/gan_tts/ConvFlow.html","title":"espnet2.gan_tts.vits.flow.ConvFlow","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.55,"words":164},"filePathRelative":"guide/espnet2/gan_tts/ConvFlow.md","excerpt":"<p>&lt;!-- _espnet2.gan_tts.vits.flow.ConvFlow --&gt;</p>\\n<h1>espnet2.gan_tts.vits.flow.ConvFlow</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.vits.flow.ConvFlow<span class=\\"small-bracket\\">(in_channels: int, hidden_channels: int, kernel_size: int, layers: int, bins: int = 10, tail_bound: float = 5.0)</span></p></div>"}');export{g as comp,d as data};

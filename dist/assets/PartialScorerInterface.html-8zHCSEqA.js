import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c,f as i,b as e,d as t,e as n,w as s,a as l,o as p}from"./app-KOUU_Wij.js";const f={},d=e("h1",{id:"espnet-nets-scorer-interface-partialscorerinterface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-nets-scorer-interface-partialscorerinterface"},[e("span",null,"espnet.nets.scorer_interface.PartialScorerInterface")])],-1),h=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet.nets.scorer_interface.PartialScorerInterface")])],-1),_=e("code",null,"ScorerInterface",-1),u=e("p",null,"Partial scorer interface for beam search.",-1),m=e("p",null,"The partial scorer performs scoring when non-partial scorer finished scoring, and receives pre-pruned next tokens to score because it is too heavy to score all the tokens.",-1),g=e("h5",{id:"examples",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#examples"},[e("span",null,"Examples")])],-1),x=e("code",null,"espnet.nets.scorers.ctc.CTCPrefixScorer",-1),S=l('<div class="custom-h4"><p>score_partial<span class="small-bracket">(y: Tensor, next_tokens: Tensor, state: Any, x: Tensor)</span></p></div><p>Score new token (required).</p><ul><li><strong>Parameters:</strong><ul><li><strong>y</strong> (<em>torch.Tensor</em>) – 1D prefix token</li><li><strong>next_tokens</strong> (<em>torch.Tensor</em>) – torch.int64 next token to score</li><li><strong>state</strong> – decoder state for prefix tokens</li><li><strong>x</strong> (<em>torch.Tensor</em>) – The encoder feature that generates ys</li></ul></li><li><strong>Returns:</strong> Tuple of a score tensor for y that has a shape (len(next_tokens),) and next state for ys</li><li><strong>Return type:</strong> tuple[torch.Tensor, Any]</li></ul>',3);function P(I,T){const r=a("RouteLink");return p(),c("div",null,[i(" _espnet.nets.scorer_interface.PartialScorerInterface "),d,h,e("p",null,[t("Bases: "),n(r,{to:"/guide/espnet/nets/ScorerInterface.html#espnet.nets.scorer_interface.ScorerInterface"},{default:s(()=>[_]),_:1})]),u,m,g,e("ul",null,[e("li",null,[t("Prefix search for connectionist-temporal-classification models : * "),n(r,{to:"/guide/espnet/nets/CTCPrefixScorer.html#espnet.nets.scorers.ctc.CTCPrefixScorer"},{default:s(()=>[x]),_:1})])]),S])}const y=o(f,[["render",P],["__file","PartialScorerInterface.html.vue"]]),C=JSON.parse('{"path":"/guide/espnet/nets/PartialScorerInterface.html","title":"espnet.nets.scorer_interface.PartialScorerInterface","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"guide/espnet/nets/PartialScorerInterface.md","excerpt":"<!-- _espnet.nets.scorer_interface.PartialScorerInterface -->\\n<h1>espnet.nets.scorer_interface.PartialScorerInterface</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.scorer_interface.PartialScorerInterface</p></div>\\n<p>Bases: <a href=\\"/guide/espnet/nets/ScorerInterface.html#espnet.nets.scorer_interface.ScorerInterface\\" target=\\"_blank\\"><code>ScorerInterface</code></a></p>"}');export{y as comp,C as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as s,a as t,o}from"./app-KOUU_Wij.js";const a={},d=t('<h1 id="espnet2-spk-encoder-ska-tdnn-encoder-semodule" tabindex="-1"><a class="header-anchor" href="#espnet2-spk-encoder-ska-tdnn-encoder-semodule"><span>espnet2.spk.encoder.ska_tdnn_encoder.SEModule</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.SEModule<span class="small-bracket">(channels, bottleneck=128)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function c(r,l){return o(),n("div",null,[s(" _espnet2.spk.encoder.ska_tdnn_encoder.SEModule "),d])}const h=e(a,[["render",c],["__file","SEModule.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/spk/SEModule.html","title":"espnet2.spk.encoder.ska_tdnn_encoder.SEModule","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.37,"words":111},"filePathRelative":"guide/espnet2/spk/SEModule.md","excerpt":"<!-- _espnet2.spk.encoder.ska_tdnn_encoder.SEModule -->\\n<h1>espnet2.spk.encoder.ska_tdnn_encoder.SEModule</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.encoder.ska_tdnn_encoder.SEModule<span class=\\"small-bracket\\">(channels, bottleneck=128)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{h as comp,u as data};

import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as t,a as i,o as a}from"./app-KOUU_Wij.js";const o={},n=i('<h1 id="espnet2-asr-transducer-decoder-modules-mega-positional-bias-rotaryrelativepositionbias" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-decoder-modules-mega-positional-bias-rotaryrelativepositionbias"><span>espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias<span class="small-bracket">(size: int, max_positions: int = 2048)</span></p></div><p>Bases: <code>Module</code></p><p>RotaryRelativePositionBias module definition.</p><ul><li><strong>Parameters:</strong><ul><li><strong>size</strong> – Module embedding size.</li><li><strong>max_positions</strong> – Maximum number of relative positions.</li></ul></li></ul><p>Construct a RotaryRelativePositionBias object.</p><div class="custom-h4"><p>forward<span class="small-bracket">(length: int)</span></p></div><p>Compute rotary relative position bias.</p><ul><li><strong>Parameters:</strong><strong>length</strong> – Sequence length.</li><li><strong>Returns:</strong> Rotary relative position bias. (L, L)</li><li><strong>Return type:</strong> bias</li></ul><div class="custom-h4"><p><em>static</em> get_sinusoid_embeddings<span class="small-bracket">(max_positions: int, size: int)</span></p></div><p>Compute sinusoidal positional embeddings.</p><ul><li><strong>Parameters:</strong><ul><li><strong>max_positions</strong> – Maximum number of positions.</li><li><strong>size</strong> – Input size.</li></ul></li><li><strong>Returns:</strong> Sine elements. (max_positions, size // 2) : Cos elements. (max_positions, size // 2)</li></ul><div class="custom-h4"><p>reset_parameters<span class="small-bracket">(val: float = 0.0, std: float = 0.02)</span></p></div><p>Reset module parameters.</p><ul><li><strong>Parameters:</strong><ul><li><strong>val</strong> – Initialization value.</li><li><strong>std</strong> – Standard deviation.</li></ul></li></ul><div class="custom-h4"><p>rotary<span class="small-bracket">(x: Tensor)</span></p></div><p>Compute rotary positional embeddings.</p><ul><li><strong>Parameters:</strong><strong>x</strong> – Input sequence. (L, size)</li><li><strong>Returns:</strong> Rotary positional embeddings. (L, size)</li><li><strong>Return type:</strong> x</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',19);function r(l,p){return a(),e("div",null,[t(" _espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias "),n])}const c=s(o,[["render",r],["__file","RotaryRelativePositionBias.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/asr_transducer/RotaryRelativePositionBias.html","title":"espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"guide/espnet2/asr_transducer/RotaryRelativePositionBias.md","excerpt":"<!-- _espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias -->\\n<h1>espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.decoder.modules.mega.positional_bias.RotaryRelativePositionBias<span class=\\"small-bracket\\">(size: int, max_positions: int = 2048)</span></p></div>"}');export{c as comp,u as data};

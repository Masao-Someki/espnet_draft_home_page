import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a as n,o as a}from"./app-KOUU_Wij.js";const c={},r=n('<h1 id="espnet-nets-pytorch-backend-transducer-utils-check-state" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-transducer-utils-check-state"><span>espnet.nets.pytorch_backend.transducer.utils.check_state</span></a></h1><div class="custom-h3"><p>espnet.nets.pytorch_backend.transducer.utils.check_state<span class="small-bracket">(state: List[Tensor | None], max_len: int, pad_id: int)</span></p></div><p>Check decoder hidden states and left pad or trim if necessary.</p><ul><li><strong>Parameters:</strong><ul><li><strong>state</strong> – Decoder hidden states. [N x (?, D_dec)]</li><li><strong>max_len</strong> – maximum sequence length.</li><li><strong>pad_id</strong> – Padding symbol ID.</li></ul></li><li><strong>Returns:</strong> Decoder hidden states. [N x (1, max_len, D_dec)]</li><li><strong>Return type:</strong> final</li></ul>',4);function i(d,l){return a(),t("div",null,[s(" _espnet.nets.pytorch_backend.transducer.utils.check_state "),r])}const h=e(c,[["render",i],["__file","check_state.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet/nets/check_state.html","title":"espnet.nets.pytorch_backend.transducer.utils.check_state","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.21,"words":62},"filePathRelative":"guide/espnet/nets/check_state.md","excerpt":"<!-- _espnet.nets.pytorch_backend.transducer.utils.check_state -->\\n<h1>espnet.nets.pytorch_backend.transducer.utils.check_state</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.transducer.utils.check_state<span class=\\"small-bracket\\">(state: List[Tensor | None], max_len: int, pad_id: int)</span></p></div>"}');export{h as comp,_ as data};

import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as a,b as e,d as t,e as i,w as r,a as c,o as l}from"./app-KOUU_Wij.js";const d={},p=e("p",null,"<!-- _espnet2.tts.feats_extract.dio.Dio -->",-1),h=e("h1",{id:"espnet2-tts-feats-extract-dio-dio",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-tts-feats-extract-dio-dio"},[e("span",null,"espnet2.tts.feats_extract.dio.Dio")])],-1),u=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.tts.feats_extract.dio.Dio"),e("span",{class:"small-bracket"},"(fs: int | str = 22050, n_fft: int = 1024, hop_length: int = 256, f0min: int = 80, f0max: int = 400, use_token_averaged_f0: bool = True, use_continuous_f0: bool = True, use_log_f0: bool = True, reduction_factor: int_or_none | None = None)")])],-1),_=e("code",null,"AbsFeatsExtract",-1),f=c('<p>F0 estimation with dio + stonemask algorithm.</p><p>This is f0 extractor based on dio + stonmask algorithm introduced in <a href="https://doi.org/10.1587/transinf.2015EDP7457" target="_blank" rel="noopener noreferrer">WORLD: a vocoder-based high-quality speech synthesis system for real-time applications</a>.</p><h6 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h6><p>This module is based on NumPy implementation. Therefore, the computational graph is not connected.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor | None = None, feats_lengths: Tensor | None = None, durations: Tensor | None = None, durations_lengths: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h6 id="note-1" tabindex="-1"><a class="header-anchor" href="#note-1"><span>NOTE</span></a></h6><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>get_parameters()</p></div><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function m(b,g){const s=n("RouteLink");return l(),a("div",null,[p,h,u,e("p",null,[t("Bases: "),i(s,{to:"/guide/espnet2/tts/AbsFeatsExtract.html#espnet2.tts.feats_extract.abs_feats_extract.AbsFeatsExtract"},{default:r(()=>[_]),_:1})]),f])}const N=o(d,[["render",m],["__file","Dio.html.vue"]]),T=JSON.parse('{"path":"/guide/espnet2/tts/Dio.html","title":"espnet2.tts.feats_extract.dio.Dio","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.74,"words":222},"filePathRelative":"guide/espnet2/tts/Dio.md","excerpt":"<p>&lt;!-- _espnet2.tts.feats_extract.dio.Dio --&gt;</p>\\n<h1>espnet2.tts.feats_extract.dio.Dio</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.tts.feats_extract.dio.Dio<span class=\\"small-bracket\\">(fs: int | str = 22050, n_fft: int = 1024, hop_length: int = 256, f0min: int = 80, f0max: int = 400, use_token_averaged_f0: bool = True, use_continuous_f0: bool = True, use_log_f0: bool = True, reduction_factor: int_or_none | None = None)</span></p></div>"}');export{N as comp,T as data};

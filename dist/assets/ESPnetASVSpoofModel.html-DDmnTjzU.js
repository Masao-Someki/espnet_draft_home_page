import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as r,f as t,b as e,d as p,e as d,w as l,a as s,o as c}from"./app-KOUU_Wij.js";const i={},m=s('<h1 id="espnet2-asvspoof-espnet-model-espnetasvspoofmodel" tabindex="-1"><a class="header-anchor" href="#espnet2-asvspoof-espnet-model-espnetasvspoofmodel"><span>espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel<span class="small-bracket">(frontend: <a href="../asr/AbsFrontend.md#espnet2.asr.frontend.abs_frontend.AbsFrontend">AbsFrontend</a></span> | None, specaug: <a href="../asr/AbsSpecAug.md#espnet2.asr.specaug.abs_specaug.AbsSpecAug">AbsSpecAug</a> | None, normalize: <a href="../layers/AbsNormalize.md#espnet2.layers.abs_normalize.AbsNormalize">AbsNormalize</a> | None, encoder: <a href="../asr/AbsEncoder.md#espnet2.asr.encoder.abs_encoder.AbsEncoder">AbsEncoder</a>, preencoder: <a href="../asr/AbsPreEncoder.md#espnet2.asr.preencoder.abs_preencoder.AbsPreEncoder">AbsPreEncoder</a> | None, decoder: <a href="AbsDecoder.md#espnet2.asvspoof.decoder.abs_decoder.AbsDecoder">AbsDecoder</a>, losses: Dict[str, <a href="AbsASVSpoofLoss.md#espnet2.asvspoof.loss.abs_loss.AbsASVSpoofLoss">AbsASVSpoofLoss</a>])</p></div>',2),b=e("code",null,"AbsESPnetModel",-1),f=s('<p>ASV Spoofing model</p><p>A simple ASV Spoofing model</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>collect_feats<span class="small-bracket">(speech: Tensor, speech_lengths: Tensor, **kwargs)</span></p></div><div class="custom-h4"><p>encode<span class="small-bracket">(speech: Tensor, speech_lengths: Tensor)</span></p></div><p>Frontend + Encoder</p><ul><li><strong>Parameters:</strong><ul><li><strong>speech</strong> – (Batch, Length, …)</li><li><strong>speech_lengths</strong> – (Batch,)</li><li><strong>bottleneck_feats</strong> – (Batch, Length, …): used for enh + diar</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(speech: Tensor, speech_lengths: Tensor | None = None, label: Tensor | None = None, **kwargs)</span></p></div><p>Frontend + Encoder + Decoder + Calc loss</p><ul><li><strong>Parameters:</strong><ul><li><strong>speech</strong> – (Batch, samples)</li><li><strong>spk_labels</strong> – (Batch, )</li><li><strong>kwargs</strong> – “utt_id” is among the input.</li></ul></li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function A(h,S){const o=a("RouteLink");return c(),r("div",null,[t(" _espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel "),m,e("p",null,[p("Bases: "),d(o,{to:"/guide/espnet2/train/AbsESPnetModel.html#espnet2.train.abs_espnet_model.AbsESPnetModel"},{default:l(()=>[b]),_:1})]),f])}const g=n(i,[["render",A],["__file","ESPnetASVSpoofModel.html.vue"]]),v=JSON.parse('{"path":"/guide/espnet2/asvspoof/ESPnetASVSpoofModel.html","title":"espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"guide/espnet2/asvspoof/ESPnetASVSpoofModel.md","excerpt":"<!-- _espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel -->\\n<h1>espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asvspoof.espnet_model.ESPnetASVSpoofModel<span class=\\"small-bracket\\">(frontend: <a href=\\"../asr/AbsFrontend.md#espnet2.asr.frontend.abs_frontend.AbsFrontend\\">AbsFrontend</a></span> | None, specaug: <a href=\\"../asr/AbsSpecAug.md#espnet2.asr.specaug.abs_specaug.AbsSpecAug\\">AbsSpecAug</a> | None, normalize: <a href=\\"../layers/AbsNormalize.md#espnet2.layers.abs_normalize.AbsNormalize\\">AbsNormalize</a> | None, encoder: <a href=\\"../asr/AbsEncoder.md#espnet2.asr.encoder.abs_encoder.AbsEncoder\\">AbsEncoder</a>, preencoder: <a href=\\"../asr/AbsPreEncoder.md#espnet2.asr.preencoder.abs_preencoder.AbsPreEncoder\\">AbsPreEncoder</a> | None, decoder: <a href=\\"AbsDecoder.md#espnet2.asvspoof.decoder.abs_decoder.AbsDecoder\\">AbsDecoder</a>, losses: Dict[str, <a href=\\"AbsASVSpoofLoss.md#espnet2.asvspoof.loss.abs_loss.AbsASVSpoofLoss\\">AbsASVSpoofLoss</a>])</p></div>"}');export{g as comp,v as data};

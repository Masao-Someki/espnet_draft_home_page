import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,f as t,a as e,o as a}from"./app-KOUU_Wij.js";const l={},i=e('<h1 id="espnet2-asr-transducer-encoder-modules-convolution-convolutionalspatialgatingunit" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-encoder-modules-convolution-convolutionalspatialgatingunit"><span>espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit<span class="small-bracket">(size: int, kernel_size: int, norm_class: ~torch.nn.modules.module.Module = &lt;class &#39;torch.nn.modules.normalization.LayerNorm&#39;&gt;, norm_args: ~typing.Dict = {}, dropout_rate: float = 0.0, causal: bool = False)</span></p></div><p>Bases: <code>Module</code></p><p>Convolutional Spatial Gating Unit module definition.</p><ul><li><strong>Parameters:</strong><ul><li><strong>size</strong> – Initial size to determine the number of channels.</li><li><strong>kernel_size</strong> – Size of the convolving kernel.</li><li><strong>norm_class</strong> – Normalization module class.</li><li><strong>norm_args</strong> – Normalization module arguments.</li><li><strong>dropout_rate</strong> – Dropout rate.</li><li><strong>causal</strong> – Whether to use causal convolution (set to True if streaming).</li></ul></li></ul><p>Construct a ConvolutionalSpatialGatingUnit object.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor, mask: Tensor | None = None, cache: Tensor | None = None)</span></p></div><p>Compute convolution module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> – ConvolutionalSpatialGatingUnit input sequences. (B, T, D_hidden)</li><li><strong>mask</strong> – Source mask. (B, T_2)</li><li><strong>cache</strong> – ConvolutionalSpationGatingUnit input cache. (1, D_hidden, conv_kernel)</li></ul></li><li><strong>Returns:</strong> ConvolutionalSpatialGatingUnit output sequences. (B, ?, D_hidden)</li><li><strong>Return type:</strong> x</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function s(r,u){return a(),o("div",null,[t(" _espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit "),i])}const p=n(l,[["render",s],["__file","ConvolutionalSpatialGatingUnit.html.vue"]]),m=JSON.parse(`{"path":"/guide/espnet2/asr_transducer/ConvolutionalSpatialGatingUnit.html","title":"espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"guide/espnet2/asr_transducer/ConvolutionalSpatialGatingUnit.md","excerpt":"<!-- _espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit -->\\n<h1>espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.encoder.modules.convolution.ConvolutionalSpatialGatingUnit<span class=\\"small-bracket\\">(size: int, kernel_size: int, norm_class: ~torch.nn.modules.module.Module = &lt;class 'torch.nn.modules.normalization.LayerNorm'&gt;, norm_args: ~typing.Dict = {}, dropout_rate: float = 0.0, causal: bool = False)</span></p></div>"}`);export{p as comp,m as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as i,a as s}from"./app-KOUU_Wij.js";const t={},n=s('<p>&lt;!-- _espnet2.diar.abs_diar.AbsDiarization --&gt;</p><h1 id="espnet2-diar-abs-diar-absdiarization" tabindex="-1"><a class="header-anchor" href="#espnet2-diar-abs-diar-absdiarization"><span>espnet2.diar.abs_diar.AbsDiarization</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.diar.abs_diar.AbsDiarization</p></div><p>Bases: <code>Module</code>, <code>ABC</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>abstract</em> forward<span class="small-bracket">(input: Tensor, ilens: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p><em>abstract</em> forward_rawwav<span class="small-bracket">(input: Tensor, ilens: Tensor)</span></p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',12),r=[n];function o(d,c){return i(),a("div",null,r)}const h=e(t,[["render",o],["__file","AbsDiarization.html.vue"]]),b=JSON.parse('{"path":"/guide/espnet2/diar/AbsDiarization.html","title":"espnet2.diar.abs_diar.AbsDiarization","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.44,"words":132},"filePathRelative":"guide/espnet2/diar/AbsDiarization.md","excerpt":"<p>&lt;!-- _espnet2.diar.abs_diar.AbsDiarization --&gt;</p>\\n<h1>espnet2.diar.abs_diar.AbsDiarization</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.diar.abs_diar.AbsDiarization</p></div>\\n<p>Bases: <code>Module</code>, <code>ABC</code></p>\\n<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>"}');export{h as comp,b as data};

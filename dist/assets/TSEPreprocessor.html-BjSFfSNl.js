import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as t,b as e,d as r,e as a,w as _,o as p}from"./app-KOUU_Wij.js";const l={},i=e("p",null,"<!-- _espnet2.train.preprocessor.TSEPreprocessor -->",-1),c=e("h1",{id:"espnet2-train-preprocessor-tsepreprocessor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-train-preprocessor-tsepreprocessor"},[e("span",null,"espnet2.train.preprocessor.TSEPreprocessor")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),r(" espnet2.train.preprocessor.TSEPreprocessor"),e("span",{class:"small-bracket"},"(train: bool, train_spk2enroll: str | None = None, enroll_segment: int | None = None, load_spk_embedding: bool = False, load_all_speakers: bool = False, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_scp: str | None = None, noise_apply_prob: float = 1.0, noise_db_range: str = '3_10', short_noise_thres: float = 0.5, speech_volume_normalize: float | None = None, speech_name: str = 'speech_mix', speech_ref_name_prefix: str = 'speech_ref', noise_ref_name_prefix: str = 'noise_ref', dereverb_ref_name_prefix: str = 'dereverb_ref', use_reverberant_ref: bool = False, num_spk: int = 1, num_noise_type: int = 1, sample_rate: int = 8000, force_single_channel: bool = False, channel_reordering: bool = False, categories: List | None = None, data_aug_effects: List | None = None, data_aug_num: List[int] = [1, 1], data_aug_prob: float = 0.0, speech_segment: int | None = None, avoid_allzero_segment: bool = True, flexible_numspk: bool = False)")])],-1),d=e("code",null,"EnhPreprocessor",-1),f=e("p",null,"Preprocessor for Target Speaker Extraction.",-1);function h(u,b){const s=n("RouteLink");return p(),t("div",null,[i,c,m,e("p",null,[r("Bases: "),a(s,{to:"/guide/espnet2/train/EnhPreprocessor.html#espnet2.train.preprocessor.EnhPreprocessor"},{default:_(()=>[d]),_:1})]),f])}const x=o(l,[["render",h],["__file","TSEPreprocessor.html.vue"]]),T=JSON.parse(`{"path":"/guide/espnet2/train/TSEPreprocessor.html","title":"espnet2.train.preprocessor.TSEPreprocessor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":125},"filePathRelative":"guide/espnet2/train/TSEPreprocessor.md","excerpt":"<p>&lt;!-- _espnet2.train.preprocessor.TSEPreprocessor --&gt;</p>\\n<h1>espnet2.train.preprocessor.TSEPreprocessor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.preprocessor.TSEPreprocessor<span class=\\"small-bracket\\">(train: bool, train_spk2enroll: str | None = None, enroll_segment: int | None = None, load_spk_embedding: bool = False, load_all_speakers: bool = False, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_scp: str | None = None, noise_apply_prob: float = 1.0, noise_db_range: str = '3_10', short_noise_thres: float = 0.5, speech_volume_normalize: float | None = None, speech_name: str = 'speech_mix', speech_ref_name_prefix: str = 'speech_ref', noise_ref_name_prefix: str = 'noise_ref', dereverb_ref_name_prefix: str = 'dereverb_ref', use_reverberant_ref: bool = False, num_spk: int = 1, num_noise_type: int = 1, sample_rate: int = 8000, force_single_channel: bool = False, channel_reordering: bool = False, categories: List | None = None, data_aug_effects: List | None = None, data_aug_num: List[int] = [1, 1], data_aug_prob: float = 0.0, speech_segment: int | None = None, avoid_allzero_segment: bool = True, flexible_numspk: bool = False)</span></p></div>"}`);export{x as comp,T as data};

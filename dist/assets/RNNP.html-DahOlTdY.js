import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as s,a as t,o as r}from"./app-KOUU_Wij.js";const a={},i=t('<h1 id="espnet-nets-chainer-backend-rnn-encoders-rnnp" tabindex="-1"><a class="header-anchor" href="#espnet-nets-chainer-backend-rnn-encoders-rnnp"><span>espnet.nets.chainer_backend.rnn.encoders.RNNP</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.chainer_backend.rnn.encoders.RNNP<span class="small-bracket">(idim, elayers, cdim, hdim, subsample, dropout, typ=&#39;blstm&#39;)</span></p></div><p>Bases: <code>Chain</code></p><p>RNN with projection layer module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>idim</strong> (<em>int</em>) – Dimension of inputs.</li><li><strong>elayers</strong> (<em>int</em>) – Number of encoder layers.</li><li><strong>cdim</strong> (<em>int</em>) – Number of rnn units. (resulted in cdim * 2 if bidirectional)</li><li><strong>hdim</strong> (<em>int</em>) – Number of projection units.</li><li><strong>subsample</strong> (<em>np.ndarray</em>) – List to use sabsample the input array.</li><li><strong>dropout</strong> (<em>float</em>) – Dropout rate.</li><li><strong>typ</strong> (<em>str</em>) – The RNN type.</li></ul></li></ul>',5);function o(c,l){return r(),n("div",null,[s(" _espnet.nets.chainer_backend.rnn.encoders.RNNP "),i])}const p=e(a,[["render",o],["__file","RNNP.html.vue"]]),u=JSON.parse(`{"path":"/guide/espnet/nets/RNNP.html","title":"espnet.nets.chainer_backend.rnn.encoders.RNNP","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.27,"words":81},"filePathRelative":"guide/espnet/nets/RNNP.md","excerpt":"<!-- _espnet.nets.chainer_backend.rnn.encoders.RNNP -->\\n<h1>espnet.nets.chainer_backend.rnn.encoders.RNNP</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.chainer_backend.rnn.encoders.RNNP<span class=\\"small-bracket\\">(idim, elayers, cdim, hdim, subsample, dropout, typ='blstm')</span></p></div>"}`);export{p as comp,u as data};

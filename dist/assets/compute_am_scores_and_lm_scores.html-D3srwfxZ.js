import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as t,a as o,o as _}from"./app-KOUU_Wij.js";const a={},r=o('<h1 id="espnet2-fst-lm-rescore-compute-am-scores-and-lm-scores" tabindex="-1"><a class="header-anchor" href="#espnet2-fst-lm-rescore-compute-am-scores-and-lm-scores"><span>espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores</span></a></h1><div class="custom-h3"><p>espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores<span class="small-bracket">(lats: Fsa, word_fsas_with_epsilon_loops: Fsa, path_to_seq_map: Tensor, device: str = &#39;cuda&#39;, batch_size: int = 500)</span></p></div><p>Compute AM and LM scores of n-best lists (represented as word_fsas).</p><ul><li><strong>Parameters:</strong><ul><li><strong>lats</strong> – An FsaVec, which is the output of k2.intersect_dense_pruned. It must have the attribute lm_scores.</li><li><strong>word_fsas_with_epsilon_loops</strong> – An FsaVec representing a n-best list. Note that it has been processed by k2.add_epsilon_self_loops.</li><li><strong>path_to_seq_map</strong> – A 1-D torch.Tensor with dtype torch.int32. path_to_seq_map[i] indicates which sequence the i-th Fsa in word_fsas_with_epsilon_loops belongs to. path_to_seq_map.numel() == word_fsas_with_epsilon_loops.arcs.dim0().</li><li><strong>batch_size</strong> – Batchify the n-best list when intersecting with inverted_lats. You could tune this to avoid GPU OOM issue or increase the GPU usage.</li></ul></li><li><strong>Returns:</strong> Return a tuple of (1-D torch.Tensor, 1-D torch.Tensor) containing the AM and LM scores of each path. am_scores.numel() == word_fsas_with_epsilon_loops.shape[0] lm_scores.numel() == word_fsas_with_epsilon_loops.shape[0]</li></ul>',4);function n(c,l){return _(),e("div",null,[t(" _espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores "),r])}const p=s(a,[["render",n],["__file","compute_am_scores_and_lm_scores.html.vue"]]),d=JSON.parse(`{"path":"/guide/espnet2/fst/compute_am_scores_and_lm_scores.html","title":"espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.49,"words":146},"filePathRelative":"guide/espnet2/fst/compute_am_scores_and_lm_scores.md","excerpt":"<!-- _espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores -->\\n<h1>espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.fst.lm_rescore.compute_am_scores_and_lm_scores<span class=\\"small-bracket\\">(lats: Fsa, word_fsas_with_epsilon_loops: Fsa, path_to_seq_map: Tensor, device: str = 'cuda', batch_size: int = 500)</span></p></div>"}`);export{p as comp,d as data};

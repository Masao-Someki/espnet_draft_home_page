import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as s,a as t,o}from"./app-KOUU_Wij.js";const r={},a=t('<h1 id="espnet2-enh-layers-dc-crn-gluconvtranspose2d" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-dc-crn-gluconvtranspose2d"><span>espnet2.enh.layers.dc_crn.GluConvTranspose2d</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.dc_crn.GluConvTranspose2d<span class="small-bracket">(in_channels, out_channels, kernel_size, stride, padding=0, output_padding=(0, 0)</span>)</p></div><p>Bases: <code>Module</code></p><p>ConvTranspose2d with Gated Linear Units (GLU).</p><p>Input and output shapes are the same as regular ConvTranspose2d layers.</p><p>Reference: Section III-B in [1]</p><ul><li><strong>Parameters:</strong><ul><li><strong>in_channels</strong> (<em>int</em>) – number of input channels</li><li><strong>out_channels</strong> (<em>int</em>) – number of output channels</li><li><strong>kernel_size</strong> (<em>int/tuple</em>) – kernel size in ConvTranspose2d</li><li><strong>stride</strong> (<em>int/tuple</em>) – stride size in ConvTranspose2d</li><li><strong>padding</strong> (<em>int/tuple</em>) – padding size in ConvTranspose2d</li><li><strong>output_padding</strong> (<em>int/tuple</em>) – Additional size added to one side of each dimension in the output shape</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>DeconvGLU forward.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – (B, C_in, H_in, W_in)</li><li><strong>Returns:</strong> (B, C_out, H_out, W_out)</li><li><strong>Return type:</strong> out (torch.Tensor)</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function l(i,p){return o(),n("div",null,[s(" _espnet2.enh.layers.dc_crn.GluConvTranspose2d "),a])}const u=e(r,[["render",l],["__file","GluConvTranspose2d.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet2/enh/GluConvTranspose2d.html","title":"espnet2.enh.layers.dc_crn.GluConvTranspose2d","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.47,"words":142},"filePathRelative":"guide/espnet2/enh/GluConvTranspose2d.md","excerpt":"<!-- _espnet2.enh.layers.dc_crn.GluConvTranspose2d -->\\n<h1>espnet2.enh.layers.dc_crn.GluConvTranspose2d</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.dc_crn.GluConvTranspose2d<span class=\\"small-bracket\\">(in_channels, out_channels, kernel_size, stride, padding=0, output_padding=(0, 0)</span>)</p></div>"}');export{u as comp,m as data};

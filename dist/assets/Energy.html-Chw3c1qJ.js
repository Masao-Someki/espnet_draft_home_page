import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as o,b as e,d as t,e as r,w as i,a as l,o as c}from"./app-KOUU_Wij.js";const d={},p=e("p",null,"<!-- _espnet2.tts.feats_extract.energy.Energy -->",-1),h=e("h1",{id:"espnet2-tts-feats-extract-energy-energy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-tts-feats-extract-energy-energy"},[e("span",null,"espnet2.tts.feats_extract.energy.Energy")])],-1),_=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.tts.feats_extract.energy.Energy"),e("span",{class:"small-bracket"},"(fs: int | str = 22050, n_fft: int = 1024, win_length: int | None = None, hop_length: int = 256, window: str = 'hann', center: bool = True, normalized: bool = False, onesided: bool = True, use_token_averaged_energy: bool = True, reduction_factor: int | None = None)")])],-1),u=e("code",null,"AbsFeatsExtract",-1),g=l('<p>Energy extractor.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor | None = None, feats_lengths: Tensor | None = None, durations: Tensor | None = None, durations_lengths: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>get_parameters()</p></div><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function f(m,y){const n=a("RouteLink");return c(),o("div",null,[p,h,_,e("p",null,[t("Bases: "),r(n,{to:"/guide/espnet2/tts/AbsFeatsExtract.html#espnet2.tts.feats_extract.abs_feats_extract.AbsFeatsExtract"},{default:i(()=>[u]),_:1})]),g])}const N=s(d,[["render",f],["__file","Energy.html.vue"]]),v=JSON.parse(`{"path":"/guide/espnet2/tts/Energy.html","title":"espnet2.tts.feats_extract.energy.Energy","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.6,"words":180},"filePathRelative":"guide/espnet2/tts/Energy.md","excerpt":"<p>&lt;!-- _espnet2.tts.feats_extract.energy.Energy --&gt;</p>\\n<h1>espnet2.tts.feats_extract.energy.Energy</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.tts.feats_extract.energy.Energy<span class=\\"small-bracket\\">(fs: int | str = 22050, n_fft: int = 1024, win_length: int | None = None, hop_length: int = 256, window: str = 'hann', center: bool = True, normalized: bool = False, onesided: bool = True, use_token_averaged_energy: bool = True, reduction_factor: int | None = None)</span></p></div>"}`);export{N as comp,v as data};

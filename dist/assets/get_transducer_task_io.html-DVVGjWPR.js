import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a as r,o as n}from"./app-KOUU_Wij.js";const a={},i=r('<h1 id="espnet2-asr-transducer-utils-get-transducer-task-io" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-utils-get-transducer-task-io"><span>espnet2.asr_transducer.utils.get_transducer_task_io</span></a></h1><div class="custom-h3"><p>espnet2.asr_transducer.utils.get_transducer_task_io<span class="small-bracket">(labels: Tensor, encoder_out_lens: Tensor, ignore_id: int = -1, blank_id: int = 0)</span></p></div><p>Get Transducer loss I/O.</p><ul><li><strong>Parameters:</strong><ul><li><strong>labels</strong> – Label ID sequences. (B, L)</li><li><strong>encoder_out_lens</strong> – Encoder output lengths. (B,)</li><li><strong>ignore_id</strong> – Padding symbol ID.</li><li><strong>blank_id</strong> – Blank symbol ID.</li></ul></li><li><strong>Returns:</strong> Decoder inputs. (B, U) target: Target label ID sequences. (B, U) t_len: Time lengths. (B,) u_len: Label lengths. (B,)</li><li><strong>Return type:</strong> decoder_in</li></ul>',4);function l(o,_){return n(),t("div",null,[s(" _espnet2.asr_transducer.utils.get_transducer_task_io "),i])}const u=e(a,[["render",l],["__file","get_transducer_task_io.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/asr_transducer/get_transducer_task_io.html","title":"espnet2.asr_transducer.utils.get_transducer_task_io","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.24,"words":72},"filePathRelative":"guide/espnet2/asr_transducer/get_transducer_task_io.md","excerpt":"<!-- _espnet2.asr_transducer.utils.get_transducer_task_io -->\\n<h1>espnet2.asr_transducer.utils.get_transducer_task_io</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.asr_transducer.utils.get_transducer_task_io<span class=\\"small-bracket\\">(labels: Tensor, encoder_out_lens: Tensor, ignore_id: int = -1, blank_id: int = 0)</span></p></div>"}');export{u as comp,g as data};

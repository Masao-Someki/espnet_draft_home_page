import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as r,b as e,d as t,e as m,w as o,a as i,o as p}from"./app-KOUU_Wij.js";const l={},c=e("p",null,"<!-- _espnet.transform.spec_augment.SpecAugment -->",-1),u=e("h1",{id:"espnet-transform-spec-augment-specaugment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-transform-spec-augment-specaugment"},[e("span",null,"espnet.transform.spec_augment.SpecAugment")])],-1),g=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet.transform.spec_augment.SpecAugment"),e("span",{class:"small-bracket"},"(**kwargs)")])],-1),d=e("code",null,"FuncTrans",-1),f=i('<p>spec agument</p><p>apply random time warping and time/freq masking default setting is based on LD (Librispeech double) in Table 2</p><blockquote><p><a href="https://arxiv.org/pdf/1904.08779.pdf" target="_blank" rel="noopener noreferrer">https://arxiv.org/pdf/1904.08779.pdf</a></p></blockquote><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>numpy.ndarray</em>) – (time, freq)</li><li><strong>resize_mode</strong> (<em>str</em>) – “PIL” (fast, nondifferentiable) or “sparse_image_warp” (slow, differentiable)</li><li><strong>max_time_warp</strong> (<em>int</em>) – maximum frames to warp the center frame in spectrogram (W)</li><li><strong>freq_mask_width</strong> (<em>int</em>) – maximum width of the random freq mask (F)</li><li><strong>n_freq_mask</strong> (<em>int</em>) – the number of the random freq mask (m_F)</li><li><strong>time_mask_width</strong> (<em>int</em>) – maximum width of the random time mask (T)</li><li><strong>n_time_mask</strong> (<em>int</em>) – the number of the random time mask (m_T)</li><li><strong>inplace</strong> (<em>bool</em>) – overwrite intermediate array</li><li><strong>replace_with_zero</strong> (<em>bool</em>) – pad zero on mask if true else use mean</li></ul></li></ul>',4);function _(h,k){const n=a("RouteLink");return p(),r("div",null,[c,u,g,e("p",null,[t("Bases: "),m(n,{to:"/guide/espnet/transform/FuncTrans.html#espnet.transform.functional.FuncTrans"},{default:o(()=>[d]),_:1})]),f])}const x=s(l,[["render",_],["__file","SpecAugment.html.vue"]]),S=JSON.parse('{"path":"/guide/espnet/transform/SpecAugment.html","title":"espnet.transform.spec_augment.SpecAugment","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.44,"words":131},"filePathRelative":"guide/espnet/transform/SpecAugment.md","excerpt":"<p>&lt;!-- _espnet.transform.spec_augment.SpecAugment --&gt;</p>\\n<h1>espnet.transform.spec_augment.SpecAugment</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.transform.spec_augment.SpecAugment<span class=\\"small-bracket\\">(**kwargs)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet/transform/FuncTrans.html#espnet.transform.functional.FuncTrans\\" target=\\"_blank\\"><code>FuncTrans</code></a></p>"}');export{x as comp,S as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as n,a as s,o as r}from"./app-KOUU_Wij.js";const o={},c=s('<h1 id="espnet2-enh-layers-dcunet-unet-decoder-args" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-dcunet-unet-decoder-args"><span>espnet2.enh.layers.dcunet.unet_decoder_args</span></a></h1><div class="custom-h3"><p>espnet2.enh.layers.dcunet.unet_decoder_args<span class="small-bracket">(encoders, *, skip_connections)</span></p></div><p>Get list of decoder arguments for upsampling (right) side of a symmetric u-net,</p><p>given the arguments used to construct the encoder. :param encoders (tuple of length N of tuples of: (in_chan, out_chan, kernel_size, stride, padding)):</p><blockquote><p>List of arguments used to construct the encoders</p></blockquote><ul><li><strong>Parameters:</strong><strong>skip_connections</strong> (<em>bool</em>) â€“ Whether to include skip connections in the calculation of decoder input channels.</li><li><strong>Returns:</strong> tuple of length N of tuples of : (in_chan, out_chan, kernel_size, stride, padding): Arguments to be used to construct decoders</li></ul>',6);function a(d,u){return r(),t("div",null,[n(" _espnet2.enh.layers.dcunet.unet_decoder_args "),c])}const p=e(o,[["render",a],["__file","unet_decoder_args.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/enh/unet_decoder_args.html","title":"espnet2.enh.layers.dcunet.unet_decoder_args","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"guide/espnet2/enh/unet_decoder_args.md","excerpt":"<!-- _espnet2.enh.layers.dcunet.unet_decoder_args -->\\n<h1>espnet2.enh.layers.dcunet.unet_decoder_args</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.enh.layers.dcunet.unet_decoder_args<span class=\\"small-bracket\\">(encoders, *, skip_connections)</span></p></div>\\n<p>Get list of decoder arguments for upsampling (right) side of a symmetric u-net,</p>"}');export{p as comp,_ as data};

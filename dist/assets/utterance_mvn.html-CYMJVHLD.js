import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as t,a as r,o as s}from"./app-KOUU_Wij.js";const a={},o=r('<h1 id="espnet-nets-pytorch-backend-frontends-feature-transform-utterance-mvn" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-frontends-feature-transform-utterance-mvn"><span>espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn</span></a></h1><div class="custom-h3"><p>espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn<span class="small-bracket">(x: Tensor, ilens: LongTensor, norm_means: bool = True, norm_vars: bool = False, eps: float = 1e-20)</span></p></div><p>Apply utterance mean and variance normalization</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> – (B, T, D), assumed zero padded</li><li><strong>ilens</strong> – (B, T, D)</li><li><strong>norm_means</strong> –</li><li><strong>norm_vars</strong> –</li><li><strong>eps</strong> –</li></ul></li></ul>',4);function c(m,l){return s(),n("div",null,[t(" _espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn "),o])}const d=e(a,[["render",c],["__file","utterance_mvn.html.vue"]]),i=JSON.parse('{"path":"/guide/espnet/nets/utterance_mvn.html","title":"espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.17,"words":50},"filePathRelative":"guide/espnet/nets/utterance_mvn.md","excerpt":"<!-- _espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn -->\\n<h1>espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.frontends.feature_transform.utterance_mvn<span class=\\"small-bracket\\">(x: Tensor, ilens: LongTensor, norm_means: bool = True, norm_vars: bool = False, eps: float = 1e-20)</span></p></div>"}');export{d as comp,i as data};

import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,c as n,b as s,d as t,e as l,w as p,a as h,o as r}from"./app-KOUU_Wij.js";const d={},k=s("p",null,"<!-- _espnet2.train.dataset.ESPnetDataset -->",-1),o=s("h1",{id:"espnet2-train-dataset-espnetdataset",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#espnet2-train-dataset-espnetdataset"},[s("span",null,"espnet2.train.dataset.ESPnetDataset")])],-1),c=s("div",{class:"custom-h3"},[s("p",null,[s("em",null,"class"),t(" espnet2.train.dataset.ESPnetDataset"),s("span",{class:"small-bracket"},"(path_name_type_list: Collection[Tuple[str, str, str]], preprocess: Callable[[str, Dict[str, ndarray]], Dict[str, ndarray]] | None = None, float_dtype: str = 'float32', int_dtype: str = 'long', max_cache_size: float | int | str = 0.0, max_cache_fd: int = 0, allow_multi_rates: bool = False)")])],-1),_=s("code",null,"AbsDataset",-1),B=h(`<p>Pytorch Dataset class for ESPNet.</p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dataset </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> ESPnetDataset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">([(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;wav.scp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;sound&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                          (</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;token_int&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;output&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;text_int&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                         )</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> uttid, data </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dataset[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;uttid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: per_utt_array, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;output&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: per_utt_array}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-h4"><p>has_name<span class="small-bracket">(name)</span></p></div><div class="custom-h4"><p>names()</p></div>`,5);function g(m,u){const a=e("RouteLink");return r(),n("div",null,[k,o,c,s("p",null,[t("Bases: "),l(a,{to:"/guide/espnet2/train/AbsDataset.html#espnet2.train.dataset.AbsDataset"},{default:p(()=>[_]),_:1})]),B])}const F=i(d,[["render",g],["__file","ESPnetDataset.html.vue"]]),b=JSON.parse(`{"path":"/guide/espnet2/train/ESPnetDataset.html","title":"espnet2.train.dataset.ESPnetDataset","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.35,"words":106},"filePathRelative":"guide/espnet2/train/ESPnetDataset.md","excerpt":"<p>&lt;!-- _espnet2.train.dataset.ESPnetDataset --&gt;</p>\\n<h1>espnet2.train.dataset.ESPnetDataset</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.dataset.ESPnetDataset<span class=\\"small-bracket\\">(path_name_type_list: Collection[Tuple[str, str, str]], preprocess: Callable[[str, Dict[str, ndarray]], Dict[str, ndarray]] | None = None, float_dtype: str = 'float32', int_dtype: str = 'long', max_cache_size: float | int | str = 0.0, max_cache_fd: int = 0, allow_multi_rates: bool = False)</span></p></div>"}`);export{F as comp,b as data};

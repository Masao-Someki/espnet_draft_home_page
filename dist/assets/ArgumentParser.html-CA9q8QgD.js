import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as r,a,o as t}from"./app-KOUU_Wij.js";const n={},i=a('<h1 id="espnet2-utils-config-argparse-argumentparser" tabindex="-1"><a class="header-anchor" href="#espnet2-utils-config-argparse-argumentparser"><span>espnet2.utils.config_argparse.ArgumentParser</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.utils.config_argparse.ArgumentParser<span class="small-bracket">(*args, **kwargs)</span></p></div><p>Bases: <code>ArgumentParser</code></p><p>Simple implementation of ArgumentParser supporting config file</p><p>This class is originated from <a href="https://github.com/bw2/ConfigArgParse" target="_blank" rel="noopener noreferrer">https://github.com/bw2/ConfigArgParse</a>, but this class is lack of some features that it has.</p><ul><li>Not supporting multiple config files</li><li>Automatically adding “–config” as an option.</li><li>Not supporting any formats other than yaml</li><li>Not checking argument type</li></ul><div class="custom-h4"><p>parse_known_args<span class="small-bracket">(args=None, namespace=None)</span></p></div>',7);function p(o,l){return t(),s("div",null,[r(" _espnet2.utils.config_argparse.ArgumentParser "),i])}const m=e(n,[["render",p],["__file","ArgumentParser.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/utils/ArgumentParser.html","title":"espnet2.utils.config_argparse.ArgumentParser","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"guide/espnet2/utils/ArgumentParser.md","excerpt":"<!-- _espnet2.utils.config_argparse.ArgumentParser -->\\n<h1>espnet2.utils.config_argparse.ArgumentParser</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.utils.config_argparse.ArgumentParser<span class=\\"small-bracket\\">(*args, **kwargs)</span></p></div>\\n<p>Bases: <code>ArgumentParser</code></p>\\n<p>Simple implementation of ArgumentParser supporting config file</p>"}');export{m as comp,u as data};

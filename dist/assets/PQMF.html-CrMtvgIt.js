import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as s,a as n}from"./app-KOUU_Wij.js";const a={},r=n('<p>&lt;!-- _espnet2.gan_tts.melgan.pqmf.PQMF --&gt;</p><h1 id="espnet2-gan-tts-melgan-pqmf-pqmf" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-melgan-pqmf-pqmf"><span>espnet2.gan_tts.melgan.pqmf.PQMF</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.melgan.pqmf.PQMF<span class="small-bracket">(subbands: int = 4, taps: int = 62, cutoff_ratio: float = 0.142, beta: float = 9.0)</span></p></div><p>Bases: <code>Module</code></p><p>PQMF module.</p><p>This module is based on <a href="https://ieeexplore.ieee.org/document/258122" target="_blank" rel="noopener noreferrer">Near-perfect-reconstruction pseudo-QMF banks</a>.</p><p>Initilize PQMF module.</p><p>The cutoff_ratio and beta parameters are optimized for #subbands = 4. See dicussion in <a href="https://github.com/kan-bayashi/ParallelWaveGAN/issues/195" target="_blank" rel="noopener noreferrer">https://github.com/kan-bayashi/ParallelWaveGAN/issues/195</a>.</p><ul><li><strong>Parameters:</strong><ul><li><strong>subbands</strong> (<em>int</em>) – The number of subbands.</li><li><strong>taps</strong> (<em>int</em>) – The number of filter taps.</li><li><strong>cutoff_ratio</strong> (<em>float</em>) – Cut-off frequency ratio.</li><li><strong>beta</strong> (<em>float</em>) – Beta coefficient for kaiser window.</li></ul></li></ul><div class="custom-h4"><p>analysis<span class="small-bracket">(x: Tensor)</span></p></div><p>Analysis with PQMF.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>Tensor</em>) – Input tensor (B, 1, T).</li><li><strong>Returns:</strong> Output tensor (B, subbands, T // subbands).</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>synthesis<span class="small-bracket">(x: Tensor)</span></p></div><p>Synthesis with PQMF.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>Tensor</em>) – Input tensor (B, subbands, T // subbands).</li><li><strong>Returns:</strong> Output tensor (B, 1, T).</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',16),o=[r];function l(i,p){return s(),t("div",null,o)}const c=e(a,[["render",l],["__file","PQMF.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/gan_tts/PQMF.html","title":"espnet2.gan_tts.melgan.pqmf.PQMF","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.63,"words":189},"filePathRelative":"guide/espnet2/gan_tts/PQMF.md","excerpt":"<p>&lt;!-- _espnet2.gan_tts.melgan.pqmf.PQMF --&gt;</p>\\n<h1>espnet2.gan_tts.melgan.pqmf.PQMF</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.melgan.pqmf.PQMF<span class=\\"small-bracket\\">(subbands: int = 4, taps: int = 62, cutoff_ratio: float = 0.142, beta: float = 9.0)</span></p></div>\\n"}');export{c as comp,g as data};

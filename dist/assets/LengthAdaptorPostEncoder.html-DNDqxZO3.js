import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,c as r,f as a,b as e,d as t,e as p,w as d,a as c,o as l}from"./app-KOUU_Wij.js";const i={},_=e("h1",{id:"espnet2-asr-postencoder-length-adaptor-postencoder-lengthadaptorpostencoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-postencoder-length-adaptor-postencoder-lengthadaptorpostencoder"},[e("span",null,"espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder")])],-1),h=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder"),e("span",{class:"small-bracket"},"(input_size: int, length_adaptor_n_layers: int = 0, input_layer: str | None = None, output_size: int | None = None, dropout_rate: float = 0.1, return_int_enc: bool = False)")])],-1),u=e("code",null,"AbsPostEncoder",-1),m=c('<p>Length Adaptor PostEncoder.</p><p>Initialize the module.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor)</span></p></div><p>Forward.</p><div class="custom-h4"><p>output_size()</p></div><p>Get the output size.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',7);function g(E,P){const o=s("RouteLink");return l(),r("div",null,[a(" _espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder "),_,h,e("p",null,[t("Bases: "),p(o,{to:"/guide/espnet2/asr/AbsPostEncoder.html#espnet2.asr.postencoder.abs_postencoder.AbsPostEncoder"},{default:d(()=>[u]),_:1})]),m])}const L=n(i,[["render",g],["__file","LengthAdaptorPostEncoder.html.vue"]]),N=JSON.parse('{"path":"/guide/espnet2/asr/LengthAdaptorPostEncoder.html","title":"espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"guide/espnet2/asr/LengthAdaptorPostEncoder.md","excerpt":"<!-- _espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder -->\\n<h1>espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.postencoder.length_adaptor_postencoder.LengthAdaptorPostEncoder<span class=\\"small-bracket\\">(input_size: int, length_adaptor_n_layers: int = 0, input_layer: str | None = None, output_size: int | None = None, dropout_rate: float = 0.1, return_int_enc: bool = False)</span></p></div>"}');export{L as comp,N as data};

import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as n,b as e,d as t,e as a,w as p,o as l}from"./app-KOUU_Wij.js";const c={},_=e("p",null,"<!-- _espnet2.train.preprocessor.SLUPreprocessor -->",-1),i=e("h1",{id:"espnet2-train-preprocessor-slupreprocessor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-train-preprocessor-slupreprocessor"},[e("span",null,"espnet2.train.preprocessor.SLUPreprocessor")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.train.preprocessor.SLUPreprocessor"),e("span",{class:"small-bracket"},"(train: bool, token_type: str | None = None, token_list: Path | str | Iterable[str] | None = None, transcript_token_list: Path | str | Iterable[str] | None = None, bpemodel: Path | str | Iterable[str] | None = None, text_cleaner: Collection[str] | None = None, g2p_type: str | None = None, unk_symbol: str = '<unk>', space_symbol: str = '<space>', non_linguistic_symbols: Path | str | Iterable[str] | None = None, delimiter: str | None = None, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_scp: str | None = None, noise_apply_prob: float = 1.0, noise_db_range: str = '3_10', short_noise_thres: float = 0.5, speech_volume_normalize: float | None = None, speech_name: str = 'speech', text_name: str = 'text', fs: int = 0, data_aug_effects: List | None = None, data_aug_num: List[int] = [1, 1], data_aug_prob: float = 0.0)")])],-1),N=e("code",null,"CommonPreprocessor",-1);function d(u,h){const s=r("RouteLink");return l(),n("div",null,[_,i,m,e("p",null,[t("Bases: "),a(s,{to:"/guide/espnet2/train/CommonPreprocessor.html#espnet2.train.preprocessor.CommonPreprocessor"},{default:p(()=>[N]),_:1})])])}const P=o(c,[["render",d],["__file","SLUPreprocessor.html.vue"]]),g=JSON.parse(`{"path":"/guide/espnet2/train/SLUPreprocessor.html","title":"espnet2.train.preprocessor.SLUPreprocessor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.42,"words":126},"filePathRelative":"guide/espnet2/train/SLUPreprocessor.md","excerpt":"<p>&lt;!-- _espnet2.train.preprocessor.SLUPreprocessor --&gt;</p>\\n<h1>espnet2.train.preprocessor.SLUPreprocessor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.preprocessor.SLUPreprocessor<span class=\\"small-bracket\\">(train: bool, token_type: str | None = None, token_list: Path | str | Iterable[str] | None = None, transcript_token_list: Path | str | Iterable[str] | None = None, bpemodel: Path | str | Iterable[str] | None = None, text_cleaner: Collection[str] | None = None, g2p_type: str | None = None, unk_symbol: str = '&lt;unk&gt;', space_symbol: str = '&lt;space&gt;', non_linguistic_symbols: Path | str | Iterable[str] | None = None, delimiter: str | None = None, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_scp: str | None = None, noise_apply_prob: float = 1.0, noise_db_range: str = '3_10', short_noise_thres: float = 0.5, speech_volume_normalize: float | None = None, speech_name: str = 'speech', text_name: str = 'text', fs: int = 0, data_aug_effects: List | None = None, data_aug_num: List[int] = [1, 1], data_aug_prob: float = 0.0)</span></p></div>"}`);export{P as comp,g as data};

import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as o,b as e,d as t,e as p,w as c,a as i,o as r}from"./app-KOUU_Wij.js";const u={},l=e("p",null,"<!-- _espnet2.asr.specaug.specaug.SpecAug -->",-1),_=e("h1",{id:"espnet2-asr-specaug-specaug-specaug",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-specaug-specaug-specaug"},[e("span",null,"espnet2.asr.specaug.specaug.SpecAug")])],-1),d=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr.specaug.specaug.SpecAug"),e("span",{class:"small-bracket"},"(apply_time_warp: bool = True, time_warp_window: int = 5, time_warp_mode: str = 'bicubic', apply_freq_mask: bool = True, freq_mask_width_range: int | Sequence[int] = (0, 20)"),t(", num_freq_mask: int = 2, apply_time_mask: bool = True, time_mask_width_range: int | Sequence[int] | None = None, time_mask_width_ratio_range: float | Sequence[float] | None = None, num_time_mask: int = 2, replace_with_zero: bool = True)")])],-1),m=e("code",null,"AbsSpecAug",-1),h=i('<p>Implementation of SpecAug.</p><p>Reference: : Daniel S. Park et al. “SpecAugment: A Simple Data &lt;br/&gt;</p><blockquote><p>Augmentation Method for Automatic Speech Recognition”</p></blockquote><div class="custom-h4"><p>WARNING</p></div><p>When using cuda mode, time_warp doesn’t have reproducibility due to torch.nn.functional.interpolate.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x, x_lengths=None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',12);function g(f,b){const a=n("RouteLink");return r(),o("div",null,[l,_,d,e("p",null,[t("Bases: "),p(a,{to:"/guide/espnet2/asr/AbsSpecAug.html#espnet2.asr.specaug.abs_specaug.AbsSpecAug"},{default:c(()=>[m]),_:1})]),h])}const k=s(u,[["render",g],["__file","SpecAug.html.vue"]]),A=JSON.parse(`{"path":"/guide/espnet2/asr/SpecAug.html","title":"espnet2.asr.specaug.specaug.SpecAug","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.66,"words":198},"filePathRelative":"guide/espnet2/asr/SpecAug.md","excerpt":"<p>&lt;!-- _espnet2.asr.specaug.specaug.SpecAug --&gt;</p>\\n<h1>espnet2.asr.specaug.specaug.SpecAug</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.specaug.specaug.SpecAug<span class=\\"small-bracket\\">(apply_time_warp: bool = True, time_warp_window: int = 5, time_warp_mode: str = 'bicubic', apply_freq_mask: bool = True, freq_mask_width_range: int | Sequence[int] = (0, 20)</span>, num_freq_mask: int = 2, apply_time_mask: bool = True, time_mask_width_range: int | Sequence[int] | None = None, time_mask_width_ratio_range: float | Sequence[float] | None = None, num_time_mask: int = 2, replace_with_zero: bool = True)</p></div>"}`);export{k as comp,A as data};

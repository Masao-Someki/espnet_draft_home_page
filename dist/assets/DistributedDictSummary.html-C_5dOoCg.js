import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as a,a as s,o as r}from"./app-KOUU_Wij.js";const i={},c=s('<h1 id="espnet-asr-pytorch-backend-asr-distributeddictsummary" tabindex="-1"><a class="header-anchor" href="#espnet-asr-pytorch-backend-asr-distributeddictsummary"><span>espnet.asr.pytorch_backend.asr.DistributedDictSummary</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.asr.pytorch_backend.asr.DistributedDictSummary<span class="small-bracket">(device=None)</span></p></div><p>Bases: <code>object</code></p><p>Distributed version of DictSummary.</p><p>This implementation is based on an official implementation below. <a href="https://github.com/chainer/chainer/blob/v6.7.0/chainer/reporter.py" target="_blank" rel="noopener noreferrer">https://github.com/chainer/chainer/blob/v6.7.0/chainer/reporter.py</a></p><p>To gather stats information from all processes and calculate exact mean values, this class is running AllReduce operation in compute_mean().</p><div class="custom-h4"><p>add<span class="small-bracket">(d)</span></p></div><div class="custom-h4"><p>compute_mean()</p></div>',8);function n(o,m){return r(),t("div",null,[a(" _espnet.asr.pytorch_backend.asr.DistributedDictSummary "),c])}const u=e(i,[["render",n],["__file","DistributedDictSummary.html.vue"]]),l=JSON.parse('{"path":"/guide/espnet/asr/DistributedDictSummary.html","title":"espnet.asr.pytorch_backend.asr.DistributedDictSummary","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.27,"words":82},"filePathRelative":"guide/espnet/asr/DistributedDictSummary.md","excerpt":"<!-- _espnet.asr.pytorch_backend.asr.DistributedDictSummary -->\\n<h1>espnet.asr.pytorch_backend.asr.DistributedDictSummary</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.asr.pytorch_backend.asr.DistributedDictSummary<span class=\\"small-bracket\\">(device=None)</span></p></div>\\n<p>Bases: <code>object</code></p>"}');export{u as comp,l as data};

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,c as a,f as n,b as e,d as r,e as d,w as c,o as l}from"./app-KOUU_Wij.js";const _={},i=e("h1",{id:"espnet2-asr-decoder-transformer-decoder-transformerdecoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-decoder-transformer-decoder-transformerdecoder"},[e("span",null,"espnet2.asr.decoder.transformer_decoder.TransformerDecoder")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),r(" espnet2.asr.decoder.transformer_decoder.TransformerDecoder"),e("span",{class:"small-bracket"},"(vocab_size: int, encoder_output_size: int, attention_heads: int = 4, linear_units: int = 2048, num_blocks: int = 6, dropout_rate: float = 0.1, positional_dropout_rate: float = 0.1, self_attention_dropout_rate: float = 0.0, src_attention_dropout_rate: float = 0.0, input_layer: str = 'embed', use_output_layer: bool = True, pos_enc_class=<class 'espnet.nets.pytorch_backend.transformer.embedding.PositionalEncoding'>, normalize_before: bool = True, concat_after: bool = False, layer_drop_rate: float = 0.0)")])],-1),p=e("code",null,"BaseTransformerDecoder",-1),u=e("p",null,"Initializes internal Module state, shared by both nn.Module and ScriptModule.",-1),f=e("div",{class:"custom-h4"},[e("p",null,[r("training "),e("em",null,": bool")])],-1);function h(b,T){const o=s("RouteLink");return l(),a("div",null,[n(" _espnet2.asr.decoder.transformer_decoder.TransformerDecoder "),i,m,e("p",null,[r("Bases: "),d(o,{to:"/guide/espnet2/asr/BaseTransformerDecoder.html#espnet2.asr.decoder.transformer_decoder.BaseTransformerDecoder"},{default:c(()=>[p]),_:1})]),u,f])}const k=t(_,[["render",h],["__file","TransformerDecoder.html.vue"]]),v=JSON.parse(`{"path":"/guide/espnet2/asr/TransformerDecoder.html","title":"espnet2.asr.decoder.transformer_decoder.TransformerDecoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"guide/espnet2/asr/TransformerDecoder.md","excerpt":"<!-- _espnet2.asr.decoder.transformer_decoder.TransformerDecoder -->\\n<h1>espnet2.asr.decoder.transformer_decoder.TransformerDecoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.decoder.transformer_decoder.TransformerDecoder<span class=\\"small-bracket\\">(vocab_size: int, encoder_output_size: int, attention_heads: int = 4, linear_units: int = 2048, num_blocks: int = 6, dropout_rate: float = 0.1, positional_dropout_rate: float = 0.1, self_attention_dropout_rate: float = 0.0, src_attention_dropout_rate: float = 0.0, input_layer: str = 'embed', use_output_layer: bool = True, pos_enc_class=&lt;class 'espnet.nets.pytorch_backend.transformer.embedding.PositionalEncoding'&gt;, normalize_before: bool = True, concat_after: bool = False, layer_drop_rate: float = 0.0)</span></p></div>"}`);export{k as comp,v as data};

import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as s,f as a,b as e,d as t,e as l,w as c,a as i,o as p}from"./app-KOUU_Wij.js";const h={},m=e("h1",{id:"espnet2-asr-frontend-melspec-torch-melspectrogramtorch",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-frontend-melspec-torch-melspectrogramtorch"},[e("span",null,"espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch")])],-1),d=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch"),e("span",{class:"small-bracket"},"(preemp: bool = True, n_fft: int = 512, log: bool = False, win_length: int = 400, hop_length: int = 160, f_min: int = 20, f_max: int = 7600, n_mels: int = 80, window_fn: str = 'hamming', mel_scale: str = 'htk', normalize: str | None = None)")])],-1),_=e("code",null,"AbsFrontend",-1),u=i('<p>Mel-Spectrogram using Torchaudio Implementation.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_length: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><p>Return output length of feature dimension D.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function f(g,b){const n=r("RouteLink");return p(),s("div",null,[a(" _espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch "),m,d,e("p",null,[t("Bases: "),l(n,{to:"/guide/espnet2/asr/AbsFrontend.html#espnet2.asr.frontend.abs_frontend.AbsFrontend"},{default:c(()=>[_]),_:1})]),u])}const M=o(h,[["render",f],["__file","MelSpectrogramTorch.html.vue"]]),v=JSON.parse(`{"path":"/guide/espnet2/asr/MelSpectrogramTorch.html","title":"espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.56,"words":167},"filePathRelative":"guide/espnet2/asr/MelSpectrogramTorch.md","excerpt":"<!-- _espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch -->\\n<h1>espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.frontend.melspec_torch.MelSpectrogramTorch<span class=\\"small-bracket\\">(preemp: bool = True, n_fft: int = 512, log: bool = False, win_length: int = 400, hop_length: int = 160, f_min: int = 20, f_max: int = 7600, n_mels: int = 80, window_fn: str = 'hamming', mel_scale: str = 'htk', normalize: str | None = None)</span></p></div>"}`);export{M as comp,v as data};

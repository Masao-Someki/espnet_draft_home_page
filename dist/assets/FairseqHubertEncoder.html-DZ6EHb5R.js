import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as s,f as a,b as e,d as t,e as i,w as l,a as d,o as u}from"./app-KOUU_Wij.js";const c={},p=e("h1",{id:"espnet2-asr-encoder-hubert-encoder-fairseqhubertencoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-encoder-hubert-encoder-fairseqhubertencoder"},[e("span",null,"espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder")])],-1),_=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder"),e("span",{class:"small-bracket"},"(input_size: int, hubert_url: str = './', hubert_dir_path: str = './', output_size: int = 256, normalize_before: bool = False, freeze_finetune_updates: int = 0, dropout_rate: float = 0.0, activation_dropout: float = 0.1, attention_dropout: float = 0.0, mask_length: int = 10, mask_prob: float = 0.75, mask_selection: str = 'static', mask_other: int = 0, apply_mask: bool = True, mask_channel_length: int = 64, mask_channel_prob: float = 0.5, mask_channel_other: int = 0, mask_channel_selection: str = 'static', layerdrop: float = 0.1, feature_grad_mult: float = 0.0)")])],-1),h=e("code",null,"AbsEncoder",-1),m=d('<p>FairSeq Hubert encoder module, used for loading pretrained weight and finetuning</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_size</strong> – input dim</li><li><strong>hubert_url</strong> – url to Hubert pretrained model</li><li><strong>hubert_dir_path</strong> – directory to download the Wav2Vec2.0 pretrained model.</li><li><strong>output_size</strong> – dimension of attention</li><li><strong>normalize_before</strong> – whether to use layer_norm before the first block</li><li><strong>freeze_finetune_updates</strong> – steps that freeze all layers except output layer before tuning the whole model (nessasary to prevent overfit).</li><li><strong>dropout_rate</strong> – dropout rate</li><li><strong>activation_dropout</strong> – dropout rate in activation function</li><li><strong>attention_dropout</strong> – dropout rate in attention</li></ul></li></ul><p>Hubert specific Args: : Please refer to: <a href="https://github.com/pytorch/fairseq/blob/master/fairseq/models/hubert/hubert.py" target="_blank" rel="noopener noreferrer">https://github.com/pytorch/fairseq/blob/master/fairseq/models/hubert/hubert.py</a></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(xs_pad: Tensor, ilens: Tensor, prev_states: Tensor | None = None)</span></p></div><p>Forward Hubert ASR Encoder.</p><ul><li><strong>Parameters:</strong><ul><li><strong>xs_pad</strong> – input tensor (B, L, D)</li><li><strong>ilens</strong> – input length (B)</li><li><strong>prev_states</strong> – Not to be used now.</li></ul></li><li><strong>Returns:</strong> position embedded tensor and mask</li></ul><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>reload_pretrained_parameters()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function b(f,g){const r=n("RouteLink");return u(),s("div",null,[a(" _espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder "),p,_,e("p",null,[t("Bases: "),i(r,{to:"/guide/espnet2/asr/AbsEncoder.html#espnet2.asr.encoder.abs_encoder.AbsEncoder"},{default:l(()=>[h]),_:1})]),m])}const q=o(c,[["render",b],["__file","FairseqHubertEncoder.html.vue"]]),E=JSON.parse(`{"path":"/guide/espnet2/asr/FairseqHubertEncoder.html","title":"espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"guide/espnet2/asr/FairseqHubertEncoder.md","excerpt":"<!-- _espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder -->\\n<h1>espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.encoder.hubert_encoder.FairseqHubertEncoder<span class=\\"small-bracket\\">(input_size: int, hubert_url: str = './', hubert_dir_path: str = './', output_size: int = 256, normalize_before: bool = False, freeze_finetune_updates: int = 0, dropout_rate: float = 0.0, activation_dropout: float = 0.1, attention_dropout: float = 0.0, mask_length: int = 10, mask_prob: float = 0.75, mask_selection: str = 'static', mask_other: int = 0, apply_mask: bool = True, mask_channel_length: int = 64, mask_channel_prob: float = 0.5, mask_channel_other: int = 0, mask_channel_selection: str = 'static', layerdrop: float = 0.1, feature_grad_mult: float = 0.0)</span></p></div>"}`);export{q as comp,E as data};

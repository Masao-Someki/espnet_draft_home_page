import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as t,b as e,d as r,e as a,w as p,o as _}from"./app-KOUU_Wij.js";const i={},l=e("p",null,"<!-- _espnet2.train.preprocessor.EnhPreprocessor -->",-1),c=e("h1",{id:"espnet2-train-preprocessor-enhpreprocessor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-train-preprocessor-enhpreprocessor"},[e("span",null,"espnet2.train.preprocessor.EnhPreprocessor")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),r(" espnet2.train.preprocessor.EnhPreprocessor"),e("span",{class:"small-bracket"},"(train: bool, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_scp: str | None = None, noise_apply_prob: float = 1.0, noise_db_range: str = '3_10', short_noise_thres: float = 0.5, speech_volume_normalize: float | None = None, speech_name: str = 'speech_mix', speech_ref_name_prefix: str = 'speech_ref', noise_ref_name_prefix: str = 'noise_ref', dereverb_ref_name_prefix: str = 'dereverb_ref', use_reverberant_ref: bool = False, num_spk: int = 1, num_noise_type: int = 1, sample_rate: int = 8000, force_single_channel: bool = False, channel_reordering: bool = False, categories: List | None = None, data_aug_effects: List | None = None, data_aug_num: List[int] = [1, 1], data_aug_prob: float = 0.0, speech_segment: int | None = None, avoid_allzero_segment: bool = True, flexible_numspk: bool = False)")])],-1),h=e("code",null,"CommonPreprocessor",-1),f=e("p",null,"Preprocessor for Speech Enhancement (Enh) task.",-1);function d(u,b){const s=n("RouteLink");return _(),t("div",null,[l,c,m,e("p",null,[r("Bases: "),a(s,{to:"/guide/espnet2/train/CommonPreprocessor.html#espnet2.train.preprocessor.CommonPreprocessor"},{default:p(()=>[h]),_:1})]),f])}const v=o(i,[["render",d],["__file","EnhPreprocessor.html.vue"]]),x=JSON.parse(`{"path":"/guide/espnet2/train/EnhPreprocessor.html","title":"espnet2.train.preprocessor.EnhPreprocessor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.37,"words":112},"filePathRelative":"guide/espnet2/train/EnhPreprocessor.md","excerpt":"<p>&lt;!-- _espnet2.train.preprocessor.EnhPreprocessor --&gt;</p>\\n<h1>espnet2.train.preprocessor.EnhPreprocessor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.preprocessor.EnhPreprocessor<span class=\\"small-bracket\\">(train: bool, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_scp: str | None = None, noise_apply_prob: float = 1.0, noise_db_range: str = '3_10', short_noise_thres: float = 0.5, speech_volume_normalize: float | None = None, speech_name: str = 'speech_mix', speech_ref_name_prefix: str = 'speech_ref', noise_ref_name_prefix: str = 'noise_ref', dereverb_ref_name_prefix: str = 'dereverb_ref', use_reverberant_ref: bool = False, num_spk: int = 1, num_noise_type: int = 1, sample_rate: int = 8000, force_single_channel: bool = False, channel_reordering: bool = False, categories: List | None = None, data_aug_effects: List | None = None, data_aug_num: List[int] = [1, 1], data_aug_prob: float = 0.0, speech_segment: int | None = None, avoid_allzero_segment: bool = True, flexible_numspk: bool = False)</span></p></div>"}`);export{v as comp,x as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as i,b as e,d as s,e as o,w as r,a as p,o as l}from"./app-KOUU_Wij.js";const d={},c=e("p",null,"<!-- _espnet2.enh.diffusion.sdes.OUVPSDE -->",-1),m=e("h1",{id:"espnet2-enh-diffusion-sdes-ouvpsde",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-enh-diffusion-sdes-ouvpsde"},[e("span",null,"espnet2.enh.diffusion.sdes.OUVPSDE")])],-1),h=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.enh.diffusion.sdes.OUVPSDE"),e("span",{class:"small-bracket"},"(beta_min, beta_max, stiffness=1, N=1000, **ignored_kwargs)")])],-1),u=e("code",null,"SDE",-1),f=p('<p>OUVPSDE class.</p><p>!!! SGMSE authors observed instabilities around t=0.2. !!!</p><p>Construct an Ornstein-Uhlenbeck Variance Preserving SDE:</p><p>dx = -1/2 * beta(t) * stiffness * (y-x) dt + sqrt(beta(t)) * dw</p><p>with</p><p>beta(t) = beta_min + t(beta_max - beta_min)</p><p>Note that the “steady-state mean” y is not provided at construction, but must rather be given as an argument to the methods which require it (e.g., sde or marginal_prob).</p><ul><li><strong>Parameters:</strong><ul><li><strong>beta_min</strong> – smallest sigma.</li><li><strong>beta_max</strong> – largest sigma.</li><li><strong>stiffness</strong> – stiffness factor of the drift. 1 by default.</li><li><strong>N</strong> – number of discretization steps</li></ul></li></ul><div class="custom-h4"><p><em>property</em> T</p></div><p>End time of the SDE.</p><div class="custom-h4"><p>copy()</p></div><div class="custom-h4"><p>marginal_prob<span class="small-bracket">(x0, t, y)</span></p></div><p>Parameters to determine the marginal distribution of</p><p>the SDE, $p_t(x|args)$.</p><div class="custom-h4"><p>prior_logp<span class="small-bracket">(z)</span></p></div><p>Compute log-density of the prior distribution.</p><p>Useful for computing the log-likelihood via probability flow ODE.</p><ul><li><strong>Parameters:</strong><strong>z</strong> – latent code</li><li><strong>Returns:</strong> log probability density</li></ul><div class="custom-h4"><p>prior_sampling<span class="small-bracket">(shape, y)</span></p></div><p>Generate one sample from the prior distribution,</p><p>$p_T(x|args)$ with shape shape.</p><div class="custom-h4"><p>sde<span class="small-bracket">(x, t, y)</span></p></div>',22);function g(_,b){const t=a("RouteLink");return l(),i("div",null,[c,m,h,e("p",null,[s("Bases: "),o(t,{to:"/guide/espnet2/enh/SDE.html#espnet2.enh.diffusion.sdes.SDE"},{default:r(()=>[u]),_:1})]),f])}const E=n(d,[["render",g],["__file","OUVPSDE.html.vue"]]),D=JSON.parse('{"path":"/guide/espnet2/enh/OUVPSDE.html","title":"espnet2.enh.diffusion.sdes.OUVPSDE","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.85,"words":254},"filePathRelative":"guide/espnet2/enh/OUVPSDE.md","excerpt":"<p>&lt;!-- _espnet2.enh.diffusion.sdes.OUVPSDE --&gt;</p>\\n<h1>espnet2.enh.diffusion.sdes.OUVPSDE</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.diffusion.sdes.OUVPSDE<span class=\\"small-bracket\\">(beta_min, beta_max, stiffness=1, N=1000, **ignored_kwargs)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet2/enh/SDE.html#espnet2.enh.diffusion.sdes.SDE\\" target=\\"_blank\\"><code>SDE</code></a></p>"}');export{E as comp,D as data};

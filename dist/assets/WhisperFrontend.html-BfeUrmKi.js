import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as o,f as a,b as e,d as s,e as i,w as p,a as d,o as l}from"./app-KOUU_Wij.js";const h={},c=e("h1",{id:"espnet2-asr-frontend-whisper-whisperfrontend",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-frontend-whisper-whisperfrontend"},[e("span",null,"espnet2.asr.frontend.whisper.WhisperFrontend")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.asr.frontend.whisper.WhisperFrontend"),e("span",{class:"small-bracket"},"(whisper_model: str = 'small', fs: int | str = 16000, freeze_weights: bool = True, download_dir: str | None = None)")])],-1),u=e("code",null,"AbsFrontend",-1),f=d('<p>Speech Representation Using Encoder Outputs from OpenAIâ€™s Whisper Model:</p><p>URL: <a href="https://github.com/openai/whisper" target="_blank" rel="noopener noreferrer">https://github.com/openai/whisper</a></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>log_mel_spectrogram<span class="small-bracket">(audio: Tensor, ilens: Tensor | None = None)</span></p></div><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div><div class="custom-h4"><p>whisper_encode<span class="small-bracket">(input: Tensor, ilens: Tensor | None = None)</span></p></div>',12);function _(w,b){const n=r("RouteLink");return l(),o("div",null,[a(" _espnet2.asr.frontend.whisper.WhisperFrontend "),c,m,e("p",null,[s("Bases: "),i(n,{to:"/guide/espnet2/asr/AbsFrontend.html#espnet2.asr.frontend.abs_frontend.AbsFrontend"},{default:p(()=>[u]),_:1})]),f])}const N=t(h,[["render",_],["__file","WhisperFrontend.html.vue"]]),F=JSON.parse(`{"path":"/guide/espnet2/asr/WhisperFrontend.html","title":"espnet2.asr.frontend.whisper.WhisperFrontend","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.63,"words":188},"filePathRelative":"guide/espnet2/asr/WhisperFrontend.md","excerpt":"<!-- _espnet2.asr.frontend.whisper.WhisperFrontend -->\\n<h1>espnet2.asr.frontend.whisper.WhisperFrontend</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.frontend.whisper.WhisperFrontend<span class=\\"small-bracket\\">(whisper_model: str = 'small', fs: int | str = 16000, freeze_weights: bool = True, download_dir: str | None = None)</span></p></div>"}`);export{N as comp,F as data};

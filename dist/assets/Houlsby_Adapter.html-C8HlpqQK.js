import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as s,a as t,o as l}from"./app-KOUU_Wij.js";const r={},o=t('<h1 id="espnet2-layers-houlsby-adapter-layer-houlsby-adapter" tabindex="-1"><a class="header-anchor" href="#espnet2-layers-houlsby-adapter-layer-houlsby-adapter"><span>espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter<span class="small-bracket">(input_size: int, bottleneck: int)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function n(p,d){return l(),a("div",null,[s(" _espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter "),o])}const h=e(r,[["render",n],["__file","Houlsby_Adapter.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/layers/Houlsby_Adapter.html","title":"espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.37,"words":112},"filePathRelative":"guide/espnet2/layers/Houlsby_Adapter.md","excerpt":"<!-- _espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter -->\\n<h1>espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.layers.houlsby_adapter_layer.Houlsby_Adapter<span class=\\"small-bracket\\">(input_size: int, bottleneck: int)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{h as comp,u as data};

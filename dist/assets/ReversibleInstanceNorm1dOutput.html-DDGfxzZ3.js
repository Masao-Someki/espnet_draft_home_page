import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a,o as n}from"./app-KOUU_Wij.js";const r={},o=a('<h1 id="espnet2-asr-state-spaces-components-reversibleinstancenorm1doutput" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-state-spaces-components-reversibleinstancenorm1doutput"><span>espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput<span class="small-bracket">(norm_input)</span></p></div><p>Bases: <code>Module</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function c(p,i){return n(),s("div",null,[t(" _espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput "),o])}const m=e(r,[["render",c],["__file","ReversibleInstanceNorm1dOutput.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/asr/ReversibleInstanceNorm1dOutput.html","title":"espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"guide/espnet2/asr/ReversibleInstanceNorm1dOutput.md","excerpt":"<!-- _espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput -->\\n<h1>espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.state_spaces.components.ReversibleInstanceNorm1dOutput<span class=\\"small-bracket\\">(norm_input)</span></p></div>"}');export{m as comp,u as data};

import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as s,f as l,b as n,d as e,e as a,w as d,a as r,o as p}from"./app-KOUU_Wij.js";const g={},c=n("h1",{id:"espnet2-asr-frontend-windowing-slidingwindow",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#espnet2-asr-frontend-windowing-slidingwindow"},[n("span",null,"espnet2.asr.frontend.windowing.SlidingWindow")])],-1),u=n("div",{class:"custom-h3"},[n("p",null,[n("em",null,"class"),e(" espnet2.asr.frontend.windowing.SlidingWindow"),n("span",{class:"small-bracket"},"(win_length: int = 400, hop_length: int = 160, channels: int = 1, padding: int | None = None, fs=None)")])],-1),h=n("code",null,"AbsFrontend",-1),w=r('<p>Sliding Window.</p><p>Provides a sliding window over a batched continuous raw audio tensor. Optionally, provides padding (Currently not implemented). Combine this module with a pre-encoder compatible with raw audio data, for example Sinc convolutions.</p><p>Known issues: Output length is calculated incorrectly if audio shorter than win_length. WARNING: trailing values are discarded - padding not implemented yet. There is currently no additional window function applied to input values.</p><p>Initialize.</p><ul><li><strong>Parameters:</strong><ul><li><strong>win_length</strong> – Length of frame.</li><li><strong>hop_length</strong> – Relative starting point of next frame.</li><li><strong>channels</strong> – Number of input channels.</li><li><strong>padding</strong> – Padding (placeholder, currently not implemented).</li><li><strong>fs</strong> – Sampling rate (placeholder for compatibility, not used).</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor)</span></p></div><p>Apply a sliding window on the input.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input</strong> – Input (B, T, C*D) or (B, T*C*D), with D=C=1.</li><li><strong>input_lengths</strong> – Input lengths within batch.</li></ul></li><li><strong>Returns:</strong> Output with dimensions (B, T, C, D), with D=win_length. Tensor: Output lengths within batch.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>output_size()</p></div><p>Return output length of feature dimension D, i.e. the window length.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function m(f,_){const t=o("RouteLink");return p(),s("div",null,[l(" _espnet2.asr.frontend.windowing.SlidingWindow "),c,u,n("p",null,[e("Bases: "),a(t,{to:"/guide/espnet2/asr/AbsFrontend.html#espnet2.asr.frontend.abs_frontend.AbsFrontend"},{default:d(()=>[h]),_:1})]),w])}const S=i(g,[["render",m],["__file","SlidingWindow.html.vue"]]),N=JSON.parse('{"path":"/guide/espnet2/asr/SlidingWindow.html","title":"espnet2.asr.frontend.windowing.SlidingWindow","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.78,"words":233},"filePathRelative":"guide/espnet2/asr/SlidingWindow.md","excerpt":"<!-- _espnet2.asr.frontend.windowing.SlidingWindow -->\\n<h1>espnet2.asr.frontend.windowing.SlidingWindow</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.frontend.windowing.SlidingWindow<span class=\\"small-bracket\\">(win_length: int = 400, hop_length: int = 160, channels: int = 1, padding: int | None = None, fs=None)</span></p></div>"}');export{S as comp,N as data};

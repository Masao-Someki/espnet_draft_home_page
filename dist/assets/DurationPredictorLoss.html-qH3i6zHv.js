import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a as o,o as r}from"./app-KOUU_Wij.js";const n={},a=o('<h1 id="espnet-nets-pytorch-backend-fastspeech-duration-predictor-durationpredictorloss" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-fastspeech-duration-predictor-durationpredictorloss"><span>espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss<span class="small-bracket">(offset=1.0, reduction=&#39;mean&#39;)</span></p></div><p>Bases: <code>Module</code></p><p>Loss function module for duration predictor.</p><p>The loss value is Calculated in log domain to make it Gaussian.</p><p>Initilize duration predictor loss module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>offset</strong> (<em>float</em> <em>,</em> <em>optional</em>) – Offset value to avoid nan in log domain.</li><li><strong>reduction</strong> (<em>str</em>) – Reduction type in loss calculation.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(outputs, targets)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>outputs</strong> (<em>Tensor</em>) – Batch of prediction durations in log domain (B, T)</li><li><strong>targets</strong> (<em>LongTensor</em>) – Batch of groundtruth durations in linear domain (B, T)</li></ul></li><li><strong>Returns:</strong> Mean squared error loss value.</li><li><strong>Return type:</strong> Tensor</li></ul><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>outputs is in log domain but targets is in linear domain.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function i(c,d){return r(),t("div",null,[s(" _espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss "),a])}const u=e(n,[["render",i],["__file","DurationPredictorLoss.html.vue"]]),m=JSON.parse(`{"path":"/guide/espnet/nets/DurationPredictorLoss.html","title":"espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"guide/espnet/nets/DurationPredictorLoss.md","excerpt":"<!-- _espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss -->\\n<h1>espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.fastspeech.duration_predictor.DurationPredictorLoss<span class=\\"small-bracket\\">(offset=1.0, reduction='mean')</span></p></div>"}`);export{u as comp,m as data};

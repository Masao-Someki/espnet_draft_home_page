import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,c as m,f as n,b as e,d as s,e as r,w as p,o as c}from"./app-KOUU_Wij.js";const _={},o=e("h1",{id:"espnet2-samplers-num-elements-batch-sampler-numelementsbatchsampler",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-samplers-num-elements-batch-sampler-numelementsbatchsampler"},[e("span",null,"espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler")])],-1),h=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler"),e("span",{class:"small-bracket"},"(batch_bins: int, shape_files: Tuple[str, ...] | List[str], min_batch_size: int = 1, sort_in_batch: str = 'descending', sort_batch: str = 'ascending', drop_last: bool = False, padding: bool = True)")])],-1),i=e("code",null,"AbsSampler",-1);function u(d,b){const t=l("RouteLink");return c(),m("div",null,[n(" _espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler "),o,h,e("p",null,[s("Bases: "),r(t,{to:"/guide/espnet2/samplers/AbsSampler.html#espnet2.samplers.abs_sampler.AbsSampler"},{default:p(()=>[i]),_:1})])])}const B=a(_,[["render",u],["__file","NumElementsBatchSampler.html.vue"]]),f=JSON.parse(`{"path":"/guide/espnet2/samplers/NumElementsBatchSampler.html","title":"espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.15,"words":45},"filePathRelative":"guide/espnet2/samplers/NumElementsBatchSampler.md","excerpt":"<!-- _espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler -->\\n<h1>espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.samplers.num_elements_batch_sampler.NumElementsBatchSampler<span class=\\"small-bracket\\">(batch_bins: int, shape_files: Tuple[str, ...] | List[str], min_batch_size: int = 1, sort_in_batch: str = 'descending', sort_batch: str = 'ascending', drop_last: bool = False, padding: bool = True)</span></p></div>"}`);export{B as comp,f as data};

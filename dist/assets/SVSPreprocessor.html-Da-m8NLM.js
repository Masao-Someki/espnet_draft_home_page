import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as n,b as e,d as s,e as a,w as l,o as p}from"./app-KOUU_Wij.js";const i={},c=e("p",null,"<!-- _espnet2.train.preprocessor.SVSPreprocessor -->",-1),_=e("h1",{id:"espnet2-train-preprocessor-svspreprocessor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-train-preprocessor-svspreprocessor"},[e("span",null,"espnet2.train.preprocessor.SVSPreprocessor")])],-1),m=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),s(" espnet2.train.preprocessor.SVSPreprocessor"),e("span",{class:"small-bracket"},"(train: bool, token_type: str | None = None, token_list: Path | str | Iterable[str] | None = None, bpemodel: Path | str | Iterable[str] | None = None, text_cleaner: Collection[str] | None = None, g2p_type: str | None = None, unk_symbol: str = '<unk>', space_symbol: str = '<space>', non_linguistic_symbols: Path | str | Iterable[str] | None = None, delimiter: str | None = None, singing_volume_normalize: float | None = None, singing_name: str = 'singing', text_name: str = 'text', label_name: str = 'label', midi_name: str = 'score', fs: int32 = 0, hop_length: int32 = 256, phn_seg: dict = {1: [1], 2: [0.25, 1], 3: [0.1, 0.5, 1], 4: [0.05, 0.1, 0.5, 1]})")])],-1),d=e("code",null,"AbsPreprocessor",-1),N=e("p",null,"Preprocessor for Sing Voice Sythesis (SVS) task.",-1);function h(u,g){const t=o("RouteLink");return p(),n("div",null,[c,_,m,e("p",null,[s("Bases: "),a(t,{to:"/guide/espnet2/train/AbsPreprocessor.html#espnet2.train.preprocessor.AbsPreprocessor"},{default:l(()=>[d]),_:1})]),N])}const P=r(i,[["render",h],["__file","SVSPreprocessor.html.vue"]]),f=JSON.parse(`{"path":"/guide/espnet2/train/SVSPreprocessor.html","title":"espnet2.train.preprocessor.SVSPreprocessor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.4,"words":119},"filePathRelative":"guide/espnet2/train/SVSPreprocessor.md","excerpt":"<p>&lt;!-- _espnet2.train.preprocessor.SVSPreprocessor --&gt;</p>\\n<h1>espnet2.train.preprocessor.SVSPreprocessor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.preprocessor.SVSPreprocessor<span class=\\"small-bracket\\">(train: bool, token_type: str | None = None, token_list: Path | str | Iterable[str] | None = None, bpemodel: Path | str | Iterable[str] | None = None, text_cleaner: Collection[str] | None = None, g2p_type: str | None = None, unk_symbol: str = '&lt;unk&gt;', space_symbol: str = '&lt;space&gt;', non_linguistic_symbols: Path | str | Iterable[str] | None = None, delimiter: str | None = None, singing_volume_normalize: float | None = None, singing_name: str = 'singing', text_name: str = 'text', label_name: str = 'label', midi_name: str = 'score', fs: int32 = 0, hop_length: int32 = 256, phn_seg: dict = {1: [1], 2: [0.25, 1], 3: [0.1, 0.5, 1], 4: [0.05, 0.1, 0.5, 1]})</span></p></div>"}`);export{P as comp,f as data};

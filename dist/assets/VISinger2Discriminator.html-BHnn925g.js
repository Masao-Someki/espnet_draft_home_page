import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as i,a as n,o as r}from"./app-KOUU_Wij.js";const a={},o=n('<h1 id="espnet2-gan-svs-visinger2-visinger2-vocoder-visinger2discriminator" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-svs-visinger2-visinger2-vocoder-visinger2discriminator"><span>espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator<span class="small-bracket">(scales: int = 1, scale_downsample_pooling: str = &#39;AvgPool1d&#39;, scale_downsample_pooling_params: Dict[str, Any] = {&#39;kernel_size&#39;: 4, &#39;padding&#39;: 2, &#39;stride&#39;: 2}, scale_discriminator_params: Dict[str, Any] = {&#39;bias&#39;: True, &#39;channels&#39;: 128, &#39;downsample_scales&#39;: [2, 2, 4, 4, 1], &#39;in_channels&#39;: 1, &#39;kernel_sizes&#39;: [15, 41, 5, 3], &#39;max_downsample_channels&#39;: 1024, &#39;max_groups&#39;: 16, &#39;nonlinear_activation&#39;: &#39;LeakyReLU&#39;, &#39;nonlinear_activation_params&#39;: {&#39;negative_slope&#39;: 0.1}, &#39;out_channels&#39;: 1}, follow_official_norm: bool = True, periods: List[int] = [2, 3, 5, 7, 11], period_discriminator_params: Dict[str, Any] = {&#39;bias&#39;: True, &#39;channels&#39;: 32, &#39;downsample_scales&#39;: [3, 3, 3, 3, 1], &#39;in_channels&#39;: 1, &#39;kernel_sizes&#39;: [5, 3], &#39;max_downsample_channels&#39;: 1024, &#39;nonlinear_activation&#39;: &#39;LeakyReLU&#39;, &#39;nonlinear_activation_params&#39;: {&#39;negative_slope&#39;: 0.1}, &#39;out_channels&#39;: 1, &#39;use_spectral_norm&#39;: False, &#39;use_weight_norm&#39;: True}, multi_freq_disc_params: Dict[str, Any] = {&#39;divisors&#39;: [32, 16, 8, 4, 2, 1, 1], &#39;domain&#39;: &#39;double&#39;, &#39;hidden_channels&#39;: [256, 512, 512], &#39;hop_length_factors&#39;: [4, 8, 16], &#39;mel_scale&#39;: True, &#39;sample_rate&#39;: 22050, &#39;strides&#39;: [1, 2, 1, 2, 1, 2, 1]})</span></p></div><p>Bases: <code>Module</code></p><p>Discriminator module for VISinger2, including MSD, MPD, and MFD.</p><ul><li><strong>Parameters:</strong><ul><li><strong>scales</strong> (<em>int</em>) – Number of scales to be used in the multi-scale discriminator.</li><li><strong>scale_downsample_pooling</strong> (<em>str</em>) – Type of pooling used for downsampling.</li><li><strong>scale_downsample_pooling_params</strong> (<em>Dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – Parameters for the downsampling pooling layer.</li><li><strong>scale_discriminator_params</strong> (<em>Dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – Parameters for the scale discriminator.</li><li><strong>follow_official_norm</strong> (<em>bool</em>) – Whether to follow the official normalization.</li><li><strong>periods</strong> (<em>List</em> *[*<em>int</em> <em>]</em>) – List of periods to be used in the multi-period discriminator.</li><li><strong>period_discriminator_params</strong> (<em>Dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – Parameters for the period discriminator.</li><li><strong>multi_freq_disc_params</strong> (<em>Dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – Parameters for the multi-frequency discriminator.</li><li><strong>use_spectral_norm</strong> (<em>bool</em>) – Whether to use spectral normalization or not.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function t(l,m){return r(),s("div",null,[i(" _espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator "),o])}const d=e(a,[["render",t],["__file","VISinger2Discriminator.html.vue"]]),p=JSON.parse(`{"path":"/guide/espnet2/gan_svs/VISinger2Discriminator.html","title":"espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.08,"words":323},"filePathRelative":"guide/espnet2/gan_svs/VISinger2Discriminator.md","excerpt":"<!-- _espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator -->\\n<h1>espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_svs.visinger2.visinger2_vocoder.VISinger2Discriminator<span class=\\"small-bracket\\">(scales: int = 1, scale_downsample_pooling: str = 'AvgPool1d', scale_downsample_pooling_params: Dict[str, Any] = {'kernel_size': 4, 'padding': 2, 'stride': 2}, scale_discriminator_params: Dict[str, Any] = {'bias': True, 'channels': 128, 'downsample_scales': [2, 2, 4, 4, 1], 'in_channels': 1, 'kernel_sizes': [15, 41, 5, 3], 'max_downsample_channels': 1024, 'max_groups': 16, 'nonlinear_activation': 'LeakyReLU', 'nonlinear_activation_params': {'negative_slope': 0.1}, 'out_channels': 1}, follow_official_norm: bool = True, periods: List[int] = [2, 3, 5, 7, 11], period_discriminator_params: Dict[str, Any] = {'bias': True, 'channels': 32, 'downsample_scales': [3, 3, 3, 3, 1], 'in_channels': 1, 'kernel_sizes': [5, 3], 'max_downsample_channels': 1024, 'nonlinear_activation': 'LeakyReLU', 'nonlinear_activation_params': {'negative_slope': 0.1}, 'out_channels': 1, 'use_spectral_norm': False, 'use_weight_norm': True}, multi_freq_disc_params: Dict[str, Any] = {'divisors': [32, 16, 8, 4, 2, 1, 1], 'domain': 'double', 'hidden_channels': [256, 512, 512], 'hop_length_factors': [4, 8, 16], 'mel_scale': True, 'sample_rate': 22050, 'strides': [1, 2, 1, 2, 1, 2, 1]})</span></p></div>"}`);export{d as comp,p as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,a}from"./app-KOUU_Wij.js";const i={},l=a(`<p><a id="spm-encode"></a></p><h1 id="spm-encode" tabindex="-1"><a class="header-anchor" href="#spm-encode"><span>spm_encode</span></a></h1><div class="language-none line-numbers-mode" data-highlighter="shiki" data-ext="none" data-title="none" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>usage: spm_encode [-h] --model MODEL [--inputs INPUTS [INPUTS ...]]</span></span>
<span class="line"><span>                  [--outputs OUTPUTS [OUTPUTS ...]]</span></span>
<span class="line"><span>                  [--output_format {piece,id}] [--min-len N] [--max-len N]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>optional arguments:</span></span>
<span class="line"><span>  --model MODEL         sentencepiece model to use for encoding</span></span>
<span class="line"><span>  --inputs INPUTS [INPUTS ...]</span></span>
<span class="line"><span>                        input files to filter/encode</span></span>
<span class="line"><span>  --outputs OUTPUTS [OUTPUTS ...]</span></span>
<span class="line"><span>                        path to save encoded outputs</span></span>
<span class="line"><span>  --output_format {piece,id}</span></span>
<span class="line"><span>  --min-len N           filter sentence pairs with fewer than N tokens</span></span>
<span class="line"><span>  --max-len N           filter sentence pairs with more than N tokens</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),p=[l];function t(d,c){return e(),s("div",null,p)}const m=n(i,[["render",t],["__file","spm_encode.html.vue"]]),u=JSON.parse('{"path":"/tools/spm/spm_encode.html","title":"spm_encode","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.27,"words":81},"filePathRelative":"tools/spm/spm_encode.md","excerpt":"<p><a id=\\"spm-encode\\"></a></p>\\n<h1>spm_encode</h1>\\n<div class=\\"language-none line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"none\\" data-title=\\"none\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>usage: spm_encode [-h] --model MODEL [--inputs INPUTS [INPUTS ...]]</span></span>\\n<span class=\\"line\\"><span>                  [--outputs OUTPUTS [OUTPUTS ...]]</span></span>\\n<span class=\\"line\\"><span>                  [--output_format {piece,id}] [--min-len N] [--max-len N]</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>optional arguments:</span></span>\\n<span class=\\"line\\"><span>  --model MODEL         sentencepiece model to use for encoding</span></span>\\n<span class=\\"line\\"><span>  --inputs INPUTS [INPUTS ...]</span></span>\\n<span class=\\"line\\"><span>                        input files to filter/encode</span></span>\\n<span class=\\"line\\"><span>  --outputs OUTPUTS [OUTPUTS ...]</span></span>\\n<span class=\\"line\\"><span>                        path to save encoded outputs</span></span>\\n<span class=\\"line\\"><span>  --output_format {piece,id}</span></span>\\n<span class=\\"line\\"><span>  --min-len N           filter sentence pairs with fewer than N tokens</span></span>\\n<span class=\\"line\\"><span>  --max-len N           filter sentence pairs with more than N tokens</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{m as comp,u as data};

import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,b as e,d as n,o}from"./app-KOUU_Wij.js";const m={},r=e("h1",{id:"espnet-nets-pytorch-backend-maskctc-add-mask-token-mask-uniform",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-nets-pytorch-backend-maskctc-add-mask-token-mask-uniform"},[e("span",null,"espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform")])],-1),d=e("div",{class:"custom-h3"},[e("p",null,[n("espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform"),e("span",{class:"small-bracket"},"(ys_pad, mask_token, eos, ignore_id)")])],-1),c=e("p",null,"Replace random tokens with <mask> label and add <eos> label.",-1),k=e("p",null,"The number of <mask> is chosen from a uniform distribution between one and the target sequenceâ€™s length. :param torch.Tensor ys_pad: batch of padded target sequences (B, Lmax) :param int mask_token: index of <mask> :param int eos: index of <eos> :param int ignore_id: index of padding :return: padded tensor (B, Lmax) :rtype: torch.Tensor :return: padded tensor (B, Lmax) :rtype: torch.Tensor",-1);function _(i,p){return o(),s("div",null,[t(" _espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform "),r,d,c,k])}const u=a(m,[["render",_],["__file","mask_uniform.html.vue"]]),f=JSON.parse('{"path":"/guide/espnet/nets/mask_uniform.html","title":"espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"guide/espnet/nets/mask_uniform.md","excerpt":"<!-- _espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform -->\\n<h1>espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.maskctc.add_mask_token.mask_uniform<span class=\\"small-bracket\\">(ys_pad, mask_token, eos, ignore_id)</span></p></div>"}');export{u as comp,f as data};

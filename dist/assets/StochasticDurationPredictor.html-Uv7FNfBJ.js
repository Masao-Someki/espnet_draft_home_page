import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as o,a as n,o as r}from"./app-KOUU_Wij.js";const s={},i=n('<h1 id="espnet2-gan-tts-vits-duration-predictor-stochasticdurationpredictor" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-vits-duration-predictor-stochasticdurationpredictor"><span>espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor<span class="small-bracket">(channels: int = 192, kernel_size: int = 3, dropout_rate: float = 0.5, flows: int = 4, dds_conv_layers: int = 3, global_channels: int = -1)</span></p></div><p>Bases: <code>Module</code></p><p>Stochastic duration predictor module.</p><p>This is a module of stochastic duration predictor described in <a href="https://arxiv.org/abs/2006.04558" target="_blank" rel="noopener noreferrer">Conditional Variational Autoencoder with Adversarial Learning for End-to-End Text-to-Speech</a>.</p><p>Initialize StochasticDurationPredictor module.</p><ul><li><strong>Parameters:</strong><ul><li><strong>channels</strong> (<em>int</em>) – Number of channels.</li><li><strong>kernel_size</strong> (<em>int</em>) – Kernel size.</li><li><strong>dropout_rate</strong> (<em>float</em>) – Dropout rate.</li><li><strong>flows</strong> (<em>int</em>) – Number of flows.</li><li><strong>dds_conv_layers</strong> (<em>int</em>) – Number of conv layers in DDS conv.</li><li><strong>global_channels</strong> (<em>int</em>) – Number of global conditioning channels.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor, x_mask: Tensor, w: Tensor | None = None, g: Tensor | None = None, inverse: bool = False, noise_scale: float = 1.0)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>Tensor</em>) – Input tensor (B, channels, T_text).</li><li><strong>x_mask</strong> (<em>Tensor</em>) – Mask tensor (B, 1, T_text).</li><li><strong>w</strong> (<em>Optional</em> *[*<em>Tensor</em> <em>]</em>) – Duration tensor (B, 1, T_text).</li><li><strong>g</strong> (<em>Optional</em> *[*<em>Tensor</em> <em>]</em>) – Global conditioning tensor (B, channels, 1)</li><li><strong>inverse</strong> (<em>bool</em>) – Whether to inverse the flow.</li><li><strong>noise_scale</strong> (<em>float</em>) – Noise scale value.</li></ul></li><li><strong>Returns:</strong> If not inverse, negative log-likelihood (NLL) tensor (B,). : If inverse, log-duration tensor (B, 1, T_text).</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function a(l,c){return r(),e("div",null,[o(" _espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor "),i])}const p=t(s,[["render",a],["__file","StochasticDurationPredictor.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet2/gan_tts/StochasticDurationPredictor.html","title":"espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.74,"words":221},"filePathRelative":"guide/espnet2/gan_tts/StochasticDurationPredictor.md","excerpt":"<!-- _espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor -->\\n<h1>espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.vits.duration_predictor.StochasticDurationPredictor<span class=\\"small-bracket\\">(channels: int = 192, kernel_size: int = 3, dropout_rate: float = 0.5, flows: int = 4, dds_conv_layers: int = 3, global_channels: int = -1)</span></p></div>"}');export{p as comp,u as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as t,a as r,o as s}from"./app-KOUU_Wij.js";const o={},i=r('<h1 id="espnet2-tts-gst-style-encoder-referenceencoder" tabindex="-1"><a class="header-anchor" href="#espnet2-tts-gst-style-encoder-referenceencoder"><span>espnet2.tts.gst.style_encoder.ReferenceEncoder</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.tts.gst.style_encoder.ReferenceEncoder<span class="small-bracket">(idim=80, conv_layers: int = 6, conv_chans_list: Sequence[int] = (32, 32, 64, 64, 128, 128)</span>, conv_kernel_size: int = 3, conv_stride: int = 2, gru_layers: int = 1, gru_units: int = 128)</p></div><p>Bases: <code>Module</code></p><p>Reference encoder module.</p><p>This module is reference encoder introduced in Style Tokens: Unsupervised Style Modeling, Control and Transfer in End-to-End Speech Synthesis.</p><ul><li><strong>Parameters:</strong><ul><li><strong>idim</strong> (<em>int</em> <em>,</em> <em>optional</em>) – Dimension of the input mel-spectrogram.</li><li><strong>conv_layers</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The number of conv layers in the reference encoder.</li><li><strong>conv_chans_list</strong> – (Sequence[int], optional): List of the number of channels of conv layers in the referece encoder.</li><li><strong>conv_kernel_size</strong> (<em>int</em> <em>,</em> <em>optional</em>) – Kernel size of conv layers in the reference encoder.</li><li><strong>conv_stride</strong> (<em>int</em> <em>,</em> <em>optional</em>) – Stride size of conv layers in the reference encoder.</li><li><strong>gru_layers</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The number of GRU layers in the reference encoder.</li><li><strong>gru_units</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The number of GRU units in the reference encoder.</li></ul></li></ul><p>Initilize reference encoder module.</p><div class="custom-h4"><p>forward<span class="small-bracket">(speech: Tensor)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><strong>speech</strong> (<em>Tensor</em>) – Batch of padded target features (B, Lmax, idim).</li><li><strong>Returns:</strong> Reference embedding (B, gru_units)</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function c(l,a){return s(),n("div",null,[t(" _espnet2.tts.gst.style_encoder.ReferenceEncoder "),i])}const p=e(o,[["render",c],["__file","ReferenceEncoder.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/tts/ReferenceEncoder.html","title":"espnet2.tts.gst.style_encoder.ReferenceEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"guide/espnet2/tts/ReferenceEncoder.md","excerpt":"<!-- _espnet2.tts.gst.style_encoder.ReferenceEncoder -->\\n<h1>espnet2.tts.gst.style_encoder.ReferenceEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.tts.gst.style_encoder.ReferenceEncoder<span class=\\"small-bracket\\">(idim=80, conv_layers: int = 6, conv_chans_list: Sequence[int] = (32, 32, 64, 64, 128, 128)</span>, conv_kernel_size: int = 3, conv_stride: int = 2, gru_layers: int = 1, gru_units: int = 128)</p></div>"}');export{p as comp,g as data};

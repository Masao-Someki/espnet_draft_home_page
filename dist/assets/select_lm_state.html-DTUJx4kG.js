import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as s,a as n,o as l}from"./app-KOUU_Wij.js";const a={},r=n('<h1 id="espnet-nets-pytorch-backend-transducer-utils-select-lm-state" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-transducer-utils-select-lm-state"><span>espnet.nets.pytorch_backend.transducer.utils.select_lm_state</span></a></h1><div class="custom-h3"><p>espnet.nets.pytorch_backend.transducer.utils.select_lm_state<span class="small-bracket">(lm_states: List[Any] | Dict[str, Any], idx: int, lm_layers: int, is_wordlm: bool)</span></p></div><p>Get ID state from LM hidden states.</p><ul><li><strong>Parameters:</strong><ul><li><strong>lm_states</strong> – LM hidden states.</li><li><strong>idx</strong> – LM state ID to extract.</li><li><strong>lm_layers</strong> – Number of LM layers.</li><li><strong>is_wordlm</strong> – Whether provided LM is a word-level LM.</li></ul></li><li><strong>Returns:</strong> LM hidden state for given ID.</li><li><strong>Return type:</strong> idx_state</li></ul>',4);function c(i,o){return l(),e("div",null,[s(" _espnet.nets.pytorch_backend.transducer.utils.select_lm_state "),r])}const m=t(a,[["render",c],["__file","select_lm_state.html.vue"]]),p=JSON.parse('{"path":"/guide/espnet/nets/select_lm_state.html","title":"espnet.nets.pytorch_backend.transducer.utils.select_lm_state","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.23,"words":69},"filePathRelative":"guide/espnet/nets/select_lm_state.md","excerpt":"<!-- _espnet.nets.pytorch_backend.transducer.utils.select_lm_state -->\\n<h1>espnet.nets.pytorch_backend.transducer.utils.select_lm_state</h1>\\n<div class=\\"custom-h3\\"><p>espnet.nets.pytorch_backend.transducer.utils.select_lm_state<span class=\\"small-bracket\\">(lm_states: List[Any] | Dict[str, Any], idx: int, lm_layers: int, is_wordlm: bool)</span></p></div>"}');export{m as comp,p as data};

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as e,a as i,o as s}from"./app-KOUU_Wij.js";const a={},r=i('<h1 id="espnet2-asr-transducer-rnnt-multi-blank-utils-cpu-utils-cpu-rnnt-cpurnnt-index" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-rnnt-multi-blank-utils-cpu-utils-cpu-rnnt-cpurnnt-index"><span>espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index<span class="small-bracket">(U: int, maxU: int, minibatch: int, alphabet_size: int, batch_first: bool)</span></p></div><p>Bases: <code>object</code></p><p>A placeholder Index computation class that emits the resolved index in a</p><p>flattened tensor, mimicing pointer indexing in CUDA kernels on the CPU.</p><ul><li><strong>Parameters:</strong><ul><li><strong>U</strong> – Length of the current target sample (without padding).</li><li><strong>maxU</strong> – Max Length of the padded target samples.</li><li><strong>minibatch</strong> – Minibatch index</li><li><strong>alphabet_size</strong> – Size of the vocabulary including RNNT blank - V+1.</li><li><strong>batch_first</strong> – Bool flag determining if batch index is first or third.</li></ul></li></ul>',6);function l(u,c){return s(),n("div",null,[e(" _espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index "),r])}const o=t(a,[["render",l],["__file","CpuRNNT_index.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/asr/CpuRNNT_index.html","title":"espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"guide/espnet2/asr/CpuRNNT_index.md","excerpt":"<!-- _espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index -->\\n<h1>espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.transducer.rnnt_multi_blank.utils.cpu_utils.cpu_rnnt.CpuRNNT_index<span class=\\"small-bracket\\">(U: int, maxU: int, minibatch: int, alphabet_size: int, batch_first: bool)</span></p></div>"}');export{o as comp,_ as data};

import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as n,b as e,d as o,e as p,w as i,a as l,o as a}from"./app-KOUU_Wij.js";const m={},c=e("p",null,"<!-- _espnet2.train.preprocessor.SpkPreprocessor -->",-1),_=e("h1",{id:"espnet2-train-preprocessor-spkpreprocessor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-train-preprocessor-spkpreprocessor"},[e("span",null,"espnet2.train.preprocessor.SpkPreprocessor")])],-1),u=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),o(" espnet2.train.preprocessor.SpkPreprocessor"),e("span",{class:"small-bracket"},"(train: bool, target_duration: float, spk2utt: str | None = None, sample_rate: int = 16000, num_eval: int = 10, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_info: List[Tuple[float, str, Tuple[int, int], Tuple[float, float]]] | None = None, noise_apply_prob: float = 1.0, short_noise_thres: float = 0.5)")])],-1),f=e("code",null,"CommonPreprocessor",-1),h=l("<p>Preprocessor for Speaker tasks.</p><ul><li><strong>Parameters:</strong><ul><li><p><strong>train</strong> (<em>bool</em>) – Whether to use in training mode.</p></li><li><p><strong>spk2utt</strong> (<em>str</em>) – Path to the spk2utt file.</p></li><li><p><strong>target_duration</strong> (<em>float</em>) – Target duration in seconds.</p></li><li><p><strong>sample_rate</strong> (<em>int</em>) – Sampling rate.</p></li><li><p><strong>num_eval</strong> (<em>int</em>) – Number of utterances to be used for evaluation.</p></li><li><p><strong>rir_scp</strong> (<em>str</em>) – Path to the RIR scp file.</p></li><li><p><strong>rir_apply_prob</strong> (<em>float</em>) – Probability of applying RIR.</p></li><li><p><strong>noise_info</strong> (<em>List</em> *[*<em>Tuple</em> *[*<em>float</em> <em>,</em> <em>str</em> <em>,</em> <em>Tuple</em> *[*<em>int</em> <em>,</em> <em>int</em> <em>]</em> <em>,</em> <em>Tuple</em> *[*<em>float</em> <em>,</em> <em>float</em> <em>]</em> <em>]</em> <em>]</em>) –</p><p>List of tuples of noise information. Each tuple represents a noise type. Each tuple consists of (prob, noise_scp, num_to_mix, db_range).</p><blockquote><ul><li>prob (float) is the probability of applying the noise type.</li><li>noise_scp (str) is the path to the noise scp file.</li><li>num_to_mix (Tuple[int, int]) is the range of the number of noises : to be mixed.</li><li>db_range (Tuple[float, float]) is the range of noise levels in dB.</li></ul></blockquote></li><li><p><strong>noise_apply_prob</strong> (<em>float</em>) – Probability of applying noise.</p></li><li><p><strong>short_noise_thres</strong> (<em>float</em>) – Threshold of short noise.</p></li></ul></li></ul>",2);function d(g,b){const t=r("RouteLink");return a(),n("div",null,[c,_,u,e("p",null,[o("Bases: "),p(t,{to:"/guide/espnet2/train/CommonPreprocessor.html#espnet2.train.preprocessor.CommonPreprocessor"},{default:i(()=>[f]),_:1})]),h])}const N=s(m,[["render",d],["__file","SpkPreprocessor.html.vue"]]),T=JSON.parse('{"path":"/guide/espnet2/train/SpkPreprocessor.html","title":"espnet2.train.preprocessor.SpkPreprocessor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"guide/espnet2/train/SpkPreprocessor.md","excerpt":"<p>&lt;!-- _espnet2.train.preprocessor.SpkPreprocessor --&gt;</p>\\n<h1>espnet2.train.preprocessor.SpkPreprocessor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.preprocessor.SpkPreprocessor<span class=\\"small-bracket\\">(train: bool, target_duration: float, spk2utt: str | None = None, sample_rate: int = 16000, num_eval: int = 10, rir_scp: str | None = None, rir_apply_prob: float = 1.0, noise_info: List[Tuple[float, str, Tuple[int, int], Tuple[float, float]]] | None = None, noise_apply_prob: float = 1.0, short_noise_thres: float = 0.5)</span></p></div>"}');export{N as comp,T as data};

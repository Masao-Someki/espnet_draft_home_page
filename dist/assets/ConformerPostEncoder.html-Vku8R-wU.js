import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,c as r,f as a,b as e,d as o,e as l,w as c,a as i,o as p}from"./app-KOUU_Wij.js";const _={},d=e("h1",{id:"espnet2-slu-postencoder-conformer-postencoder-conformerpostencoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-slu-postencoder-conformer-postencoder-conformerpostencoder"},[e("span",null,"espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder")])],-1),u=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),o(" espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder"),e("span",{class:"small-bracket"},"(input_size: int, output_size: int = 256, attention_heads: int = 4, linear_units: int = 2048, num_blocks: int = 6, dropout_rate: float = 0.1, positional_dropout_rate: float = 0.1, attention_dropout_rate: float = 0.0, input_layer: str = 'linear', normalize_before: bool = True, concat_after: bool = False, positionwise_layer_type: str = 'linear', positionwise_conv_kernel_size: int = 3, macaron_style: bool = False, rel_pos_type: str = 'legacy', pos_enc_layer_type: str = 'rel_pos', selfattention_layer_type: str = 'rel_selfattn', activation_type: str = 'swish', use_cnn_module: bool = True, zero_triu: bool = False, cnn_module_kernel: int = 31, padding_idx: int = -1)")])],-1),m=e("code",null,"AbsPostEncoder",-1),f=i('<p>Hugging Face Transformers PostEncoder.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor)</span></p></div><p>Forward.</p><div class="custom-h4"><p>output_size()</p></div><p>Get the output size.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',7);function h(b,y){const t=s("RouteLink");return p(),r("div",null,[a(" _espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder "),d,u,e("p",null,[o("Bases: "),l(t,{to:"/guide/espnet2/asr/AbsPostEncoder.html#espnet2.asr.postencoder.abs_postencoder.AbsPostEncoder"},{default:c(()=>[m]),_:1})]),f])}const P=n(_,[["render",h],["__file","ConformerPostEncoder.html.vue"]]),g=JSON.parse(`{"path":"/guide/espnet2/slu/ConformerPostEncoder.html","title":"espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.47,"words":142},"filePathRelative":"guide/espnet2/slu/ConformerPostEncoder.md","excerpt":"<!-- _espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder -->\\n<h1>espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.slu.postencoder.conformer_postencoder.ConformerPostEncoder<span class=\\"small-bracket\\">(input_size: int, output_size: int = 256, attention_heads: int = 4, linear_units: int = 2048, num_blocks: int = 6, dropout_rate: float = 0.1, positional_dropout_rate: float = 0.1, attention_dropout_rate: float = 0.0, input_layer: str = 'linear', normalize_before: bool = True, concat_after: bool = False, positionwise_layer_type: str = 'linear', positionwise_conv_kernel_size: int = 3, macaron_style: bool = False, rel_pos_type: str = 'legacy', pos_enc_layer_type: str = 'rel_pos', selfattention_layer_type: str = 'rel_selfattn', activation_type: str = 'swish', use_cnn_module: bool = True, zero_triu: bool = False, cnn_module_kernel: int = 31, padding_idx: int = -1)</span></p></div>"}`);export{P as comp,g as data};

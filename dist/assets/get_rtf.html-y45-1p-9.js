import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as r,a as n}from"./app-KOUU_Wij.js";const o={},s=n('<p>&lt;!-- _espnet2.enh.layers.beamformer.get_rtf --&gt;</p><h1 id="espnet2-enh-layers-beamformer-get-rtf" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-beamformer-get-rtf"><span>espnet2.enh.layers.beamformer.get_rtf</span></a></h1><div class="custom-h3"><p>espnet2.enh.layers.beamformer.get_rtf<span class="small-bracket">(psd_speech, psd_noise, mode=&#39;power&#39;, reference_vector: int | Tensor = 0, iterations: int = 3)</span></p></div><p>Calculate the relative transfer function (RTF)</p><p>Algorithm of power method: : 1. rtf = reference_vector 2. for i in range(iterations): : rtf = (psd_noise^-1 @ psd_speech) @ rtf rtf = rtf / ||rtf||_2 # this normalization can be skipped 3. rtf = psd_noise @ rtf 4. rtf = rtf / rtf[…, ref_channel, :]</p><p>Note: 4) Normalization at the reference channel is not performed here.</p><ul><li><strong>Parameters:</strong><ul><li><strong>psd_speech</strong> (<em>torch.complex64/ComplexTensor</em>) – speech covariance matrix (…, F, C, C)</li><li><strong>psd_noise</strong> (<em>torch.complex64/ComplexTensor</em>) – noise covariance matrix (…, F, C, C)</li><li><strong>mode</strong> (<em>str</em>) – one of (“power”, “evd”) “power”: power method “evd”: eigenvalue decomposition</li><li><strong>reference_vector</strong> (<em>torch.Tensor</em> <em>or</em> <em>int</em>) – (…, C) or scalar</li><li><strong>iterations</strong> (<em>int</em>) – number of iterations in power method</li></ul></li><li><strong>Returns:</strong> (…, F, C, 1)</li><li><strong>Return type:</strong> rtf (torch.complex64/ComplexTensor)</li></ul>',7),a=[s];function i(l,m){return r(),t("div",null,a)}const f=e(o,[["render",i],["__file","get_rtf.html.vue"]]),h=JSON.parse(`{"path":"/guide/espnet2/enh/get_rtf.html","title":"espnet2.enh.layers.beamformer.get_rtf","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.46,"words":138},"filePathRelative":"guide/espnet2/enh/get_rtf.md","excerpt":"<p>&lt;!-- _espnet2.enh.layers.beamformer.get_rtf --&gt;</p>\\n<h1>espnet2.enh.layers.beamformer.get_rtf</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.enh.layers.beamformer.get_rtf<span class=\\"small-bracket\\">(psd_speech, psd_noise, mode='power', reference_vector: int | Tensor = 0, iterations: int = 3)</span></p></div>"}`);export{f as comp,h as data};

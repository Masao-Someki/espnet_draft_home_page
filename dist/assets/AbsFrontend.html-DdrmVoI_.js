import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as t,a as s,o}from"./app-KOUU_Wij.js";const a={},r=s('<h1 id="espnet2-asr-frontend-abs-frontend-absfrontend" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-frontend-abs-frontend-absfrontend"><span>espnet2.asr.frontend.abs_frontend.AbsFrontend</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.frontend.abs_frontend.AbsFrontend</p></div><p>Bases: <code>Module</code>, <code>ABC</code></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p><em>abstract</em> forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p><em>abstract</em> output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function d(i,c){return o(),n("div",null,[t(" _espnet2.asr.frontend.abs_frontend.AbsFrontend "),r])}const h=e(a,[["render",d],["__file","AbsFrontend.html.vue"]]),f=JSON.parse('{"path":"/guide/espnet2/asr/AbsFrontend.html","title":"espnet2.asr.frontend.abs_frontend.AbsFrontend","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"guide/espnet2/asr/AbsFrontend.md","excerpt":"<!-- _espnet2.asr.frontend.abs_frontend.AbsFrontend -->\\n<h1>espnet2.asr.frontend.abs_frontend.AbsFrontend</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.frontend.abs_frontend.AbsFrontend</p></div>\\n<p>Bases: <code>Module</code>, <code>ABC</code></p>\\n<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>"}');export{h as comp,f as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as s,a as r,o as n}from"./app-KOUU_Wij.js";const c={},a=r('<h1 id="espnet-nets-ctc-prefix-score-ctcprefixscoreth" tabindex="-1"><a class="header-anchor" href="#espnet-nets-ctc-prefix-score-ctcprefixscoreth"><span>espnet.nets.ctc_prefix_score.CTCPrefixScoreTH</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.ctc_prefix_score.CTCPrefixScoreTH<span class="small-bracket">(x, xlens, blank, eos, margin=0)</span></p></div><p>Bases: <code>object</code></p><p>Batch processing of CTCPrefixScore</p><p>which is based on Algorithm 2 in WATANABE et al. “HYBRID CTC/ATTENTION ARCHITECTURE FOR END-TO-END SPEECH RECOGNITION,” but extended to efficiently compute the label probablities for multiple hypotheses simultaneously See also Seki et al. “Vectorized Beam Search for CTC-Attention-Based Speech Recognition,” In INTERSPEECH (pp. 3825-3829), 2019.</p><p>Construct CTC prefix scorer</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>torch.Tensor</em>) – input label posterior sequences (B, T, O)</li><li><strong>xlens</strong> (<em>torch.Tensor</em>) – input lengths (B,)</li><li><strong>blank</strong> (<em>int</em>) – blank label id</li><li><strong>eos</strong> (<em>int</em>) – end-of-sequence id</li><li><strong>margin</strong> (<em>int</em>) – margin parameter for windowing (0 means no windowing)</li></ul></li></ul><div class="custom-h4"><p>extend_prob<span class="small-bracket">(x)</span></p></div><p>Extend CTC prob.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>torch.Tensor</em>) – input label posterior sequences (B, T, O)</li></ul><div class="custom-h4"><p>extend_state<span class="small-bracket">(state)</span></p></div><p>Compute CTC prefix state.</p><p>:param state : CTC state :return ctc_state</p><div class="custom-h4"><p>index_select_state<span class="small-bracket">(state, best_ids)</span></p></div><p>Select CTC states according to best ids</p><p>:param state : CTC state :param best_ids : index numbers selected by beam pruning (B, W) :return selected_state</p>',16);function o(i,p){return n(),t("div",null,[s(" _espnet.nets.ctc_prefix_score.CTCPrefixScoreTH "),a])}const d=e(c,[["render",o],["__file","CTCPrefixScoreTH.html.vue"]]),C=JSON.parse('{"path":"/guide/espnet/nets/CTCPrefixScoreTH.html","title":"espnet.nets.ctc_prefix_score.CTCPrefixScoreTH","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"guide/espnet/nets/CTCPrefixScoreTH.md","excerpt":"<!-- _espnet.nets.ctc_prefix_score.CTCPrefixScoreTH -->\\n<h1>espnet.nets.ctc_prefix_score.CTCPrefixScoreTH</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.ctc_prefix_score.CTCPrefixScoreTH<span class=\\"small-bracket\\">(x, xlens, blank, eos, margin=0)</span></p></div>\\n<p>Bases: <code>object</code></p>"}');export{d as comp,C as data};

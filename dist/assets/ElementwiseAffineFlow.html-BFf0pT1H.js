import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as n,a as t,o as l}from"./app-KOUU_Wij.js";const o={},i=t('<h1 id="espnet2-gan-tts-vits-flow-elementwiseaffineflow" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-vits-flow-elementwiseaffineflow"><span>espnet2.gan_tts.vits.flow.ElementwiseAffineFlow</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.vits.flow.ElementwiseAffineFlow<span class="small-bracket">(channels: int)</span></p></div><p>Bases: <code>Module</code></p><p>Elementwise affine flow module.</p><p>Initialize ElementwiseAffineFlow module.</p><ul><li><strong>Parameters:</strong><strong>channels</strong> (<em>int</em>) – Number of channels.</li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor, x_mask: Tensor, inverse: bool = False, **kwargs)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>Tensor</em>) – Input tensor (B, channels, T).</li><li><strong>x_lengths</strong> (<em>Tensor</em>) – Length tensor (B,).</li><li><strong>inverse</strong> (<em>bool</em>) – Whether to inverse the flow.</li></ul></li><li><strong>Returns:</strong> Output tensor (B, channels, T). Tensor: Log-determinant tensor for NLL (B,) if not inverse.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function a(r,m){return l(),s("div",null,[n(" _espnet2.gan_tts.vits.flow.ElementwiseAffineFlow "),i])}const c=e(o,[["render",a],["__file","ElementwiseAffineFlow.html.vue"]]),w=JSON.parse('{"path":"/guide/espnet2/gan_tts/ElementwiseAffineFlow.html","title":"espnet2.gan_tts.vits.flow.ElementwiseAffineFlow","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.37,"words":112},"filePathRelative":"guide/espnet2/gan_tts/ElementwiseAffineFlow.md","excerpt":"<!-- _espnet2.gan_tts.vits.flow.ElementwiseAffineFlow -->\\n<h1>espnet2.gan_tts.vits.flow.ElementwiseAffineFlow</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.vits.flow.ElementwiseAffineFlow<span class=\\"small-bracket\\">(channels: int)</span></p></div>\\n<p>Bases: <code>Module</code></p>\\n<p>Elementwise affine flow module.</p>"}');export{c as comp,w as data};

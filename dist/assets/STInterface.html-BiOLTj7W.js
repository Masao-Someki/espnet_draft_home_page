import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as r,b as e,d as t,e as l,w as o,a as i,o as c}from"./app-KOUU_Wij.js";const m={},p=e("p",null,"<!-- _espnet.nets.st_interface.STInterface -->",-1),d=e("h1",{id:"espnet-nets-st-interface-stinterface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet-nets-st-interface-stinterface"},[e("span",null,"espnet.nets.st_interface.STInterface")])],-1),g=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet.nets.st_interface.STInterface")])],-1),u=e("code",null,"ASRInterface",-1),f=i('<p>ST Interface for ESPnet model implementation.</p><p>NOTE: This class is inherited from ASRInterface to enable joint translation and recognition when performing multi-task learning with the ASR task.</p><div class="custom-h4"><p>translate<span class="small-bracket">(x, trans_args, char_list=None, rnnlm=None, ensemble_models=[])</span></p></div><p>Recognize x for evaluation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>ndarray</em>) – input acouctic feature (B, T, D) or (T, D)</li><li><strong>trans_args</strong> (<em>namespace</em>) – argment namespace contraining options</li><li><strong>char_list</strong> (<em>list</em>) – list of characters</li><li><strong>rnnlm</strong> (<em>torch.nn.Module</em>) – language model module</li></ul></li><li><strong>Returns:</strong> N-best decoding results</li><li><strong>Return type:</strong> list</li></ul><div class="custom-h4"><p>translate_batch<span class="small-bracket">(x, trans_args, char_list=None, rnnlm=None)</span></p></div><p>Beam search implementation for batch.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>torch.Tensor</em>) – encoder hidden state sequences (B, Tmax, Henc)</li><li><strong>trans_args</strong> (<em>namespace</em>) – argument namespace containing options</li><li><strong>char_list</strong> (<em>list</em>) – list of characters</li><li><strong>rnnlm</strong> (<em>torch.nn.Module</em>) – language model module</li></ul></li><li><strong>Returns:</strong> N-best decoding results</li><li><strong>Return type:</strong> list</li></ul>',8);function _(h,S){const n=a("RouteLink");return c(),r("div",null,[p,d,g,e("p",null,[t("Bases: "),l(n,{to:"/guide/espnet/nets/ASRInterface.html#espnet.nets.asr_interface.ASRInterface"},{default:o(()=>[u]),_:1})]),f])}const R=s(m,[["render",_],["__file","STInterface.html.vue"]]),x=JSON.parse('{"path":"/guide/espnet/nets/STInterface.html","title":"espnet.nets.st_interface.STInterface","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.55,"words":165},"filePathRelative":"guide/espnet/nets/STInterface.md","excerpt":"<p>&lt;!-- _espnet.nets.st_interface.STInterface --&gt;</p>\\n<h1>espnet.nets.st_interface.STInterface</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.st_interface.STInterface</p></div>\\n<p>Bases: <a href=\\"/guide/espnet/nets/ASRInterface.html#espnet.nets.asr_interface.ASRInterface\\" target=\\"_blank\\"><code>ASRInterface</code></a></p>"}');export{R as comp,x as data};

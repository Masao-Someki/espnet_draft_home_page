import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as l,b as e,d as t,e as a,w as r,a as i,o as c}from"./app-KOUU_Wij.js";const p={},d=e("p",null,"<!-- _espnet2.lm.seq_rnn_lm.SequentialRNNLM -->",-1),m=e("h1",{id:"espnet2-lm-seq-rnn-lm-sequentialrnnlm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-lm-seq-rnn-lm-sequentialrnnlm"},[e("span",null,"espnet2.lm.seq_rnn_lm.SequentialRNNLM")])],-1),h=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.lm.seq_rnn_lm.SequentialRNNLM"),e("span",{class:"small-bracket"},"(vocab_size: int, unit: int = 650, nhid: int | None = None, nlayers: int = 2, dropout_rate: float = 0.0, tie_weights: bool = False, rnn_type: str = 'lstm', ignore_id: int = 0)")])],-1),u=e("code",null,"AbsLM",-1),_=i('<p>Sequential RNNLM.</p><div class="custom-h4"><p>SEE ALSO</p></div><p><a href="https://github.com/pytorch/examples/blob/4581968193699de14b56527296262dd76ab43557/word_language_model/model.py" target="_blank" rel="noopener noreferrer">https://github.com/pytorch/examples/blob/4581968193699de14b56527296262dd76ab43557/word_language_model/model.py</a></p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>batch_score<span class="small-bracket">(ys: Tensor, states: Tensor, xs: Tensor)</span></p></div><p>Score new token batch.</p><ul><li><strong>Parameters:</strong><ul><li><strong>ys</strong> (<em>torch.Tensor</em>) – torch.int64 prefix tokens (n_batch, ylen).</li><li><strong>states</strong> (<em>List</em> *[*<em>Any</em> <em>]</em>) – Scorer states for prefix tokens.</li><li><strong>xs</strong> (<em>torch.Tensor</em>) – The encoder feature that generates ys (n_batch, xlen, n_feat).</li></ul></li><li><strong>Returns:</strong> Tuple of : batchfied scores for next token with shape of (n_batch, n_vocab) and next state list for ys.</li><li><strong>Return type:</strong> tuple[torch.Tensor, List[Any]]</li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, hidden: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>score<span class="small-bracket">(y: Tensor, state: Tensor | Tuple[Tensor, Tensor], x: Tensor)</span></p></div><p>Score new token.</p><ul><li><strong>Parameters:</strong><ul><li><strong>y</strong> – 1D torch.int64 prefix tokens.</li><li><strong>state</strong> – Scorer state for prefix tokens</li><li><strong>x</strong> – 2D encoder feature that generates ys.</li></ul></li><li><strong>Returns:</strong> Tuple of : torch.float32 scores for next token (n_vocab) and next state for ys</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div><div class="custom-h4"><p>zero_state()</p></div><p>Initialize LM state filled with zero values.</p>',18);function g(f,b){const s=o("RouteLink");return c(),l("div",null,[d,m,h,e("p",null,[t("Bases: "),a(s,{to:"/guide/espnet2/lm/AbsLM.html#espnet2.lm.abs_model.AbsLM"},{default:r(()=>[u]),_:1})]),_])}const y=n(p,[["render",g],["__file","SequentialRNNLM.html.vue"]]),q=JSON.parse(`{"path":"/guide/espnet2/lm/SequentialRNNLM.html","title":"espnet2.lm.seq_rnn_lm.SequentialRNNLM","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"guide/espnet2/lm/SequentialRNNLM.md","excerpt":"<p>&lt;!-- _espnet2.lm.seq_rnn_lm.SequentialRNNLM --&gt;</p>\\n<h1>espnet2.lm.seq_rnn_lm.SequentialRNNLM</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.lm.seq_rnn_lm.SequentialRNNLM<span class=\\"small-bracket\\">(vocab_size: int, unit: int = 650, nhid: int | None = None, nlayers: int = 2, dropout_rate: float = 0.0, tie_weights: bool = False, rnn_type: str = 'lstm', ignore_id: int = 0)</span></p></div>"}`);export{y as comp,q as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as s,a as l}from"./app-KOUU_Wij.js";const n={},o=l('<p>&lt;!-- _espnet2.gan_tts.vits.flow.FlipFlow --&gt;</p><h1 id="espnet2-gan-tts-vits-flow-flipflow" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-vits-flow-flipflow"><span>espnet2.gan_tts.vits.flow.FlipFlow</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.vits.flow.FlipFlow</p></div><p>Bases: <code>Module</code></p><p>Flip flow module.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor, *args, inverse: bool = False, **kwargs)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>x</strong> (<em>Tensor</em>) – Input tensor (B, channels, T).</li><li><strong>inverse</strong> (<em>bool</em>) – Whether to inverse the flow.</li></ul></li><li><strong>Returns:</strong> Flipped tensor (B, channels, T). Tensor: Log-determinant tensor for NLL (B,) if not inverse.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10),i=[o];function a(p,r){return s(),t("div",null,i)}const m=e(n,[["render",a],["__file","FlipFlow.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/gan_tts/FlipFlow.html","title":"espnet2.gan_tts.vits.flow.FlipFlow","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.33,"words":100},"filePathRelative":"guide/espnet2/gan_tts/FlipFlow.md","excerpt":"<p>&lt;!-- _espnet2.gan_tts.vits.flow.FlipFlow --&gt;</p>\\n<h1>espnet2.gan_tts.vits.flow.FlipFlow</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.vits.flow.FlipFlow</p></div>\\n<p>Bases: <code>Module</code></p>\\n<p>Flip flow module.</p>\\n<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>"}');export{m as comp,g as data};

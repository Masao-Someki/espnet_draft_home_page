import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,f as r,a as s,o as a}from"./app-KOUU_Wij.js";const t={},d=s('<h1 id="espnet2-asr-transducer-decoder-modules-mega-feed-forward-normalizedpositionwisefeedforward" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-decoder-modules-mega-feed-forward-normalizedpositionwisefeedforward"><span>espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward<span class="small-bracket">(size: int, hidden_size: int, normalization: ~torch.nn.modules.module.Module = &lt;class &#39;torch.nn.modules.normalization.LayerNorm&#39;&gt;, activation: ~torch.nn.modules.module.Module = &lt;class &#39;torch.nn.modules.activation.ReLU&#39;&gt;, dropout_rate: float = 0.0)</span></p></div><p>Bases: <code>Module</code></p><p>NormalizedPositionFeedForward module definition.</p><ul><li><strong>Parameters:</strong><ul><li><strong>size</strong> – Input/Output size.</li><li><strong>hidden_size</strong> – Hidden size.</li><li><strong>normalization</strong> – Normalization module.</li><li><strong>activation</strong> – Activation function.</li><li><strong>dropout_rate</strong> – Dropout rate.</li></ul></li></ul><p>Construct an NormalizedPositionwiseFeedForward object.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor)</span></p></div><p>Compute feed-forward module.</p><ul><li><strong>Parameters:</strong><strong>x</strong> – NormalizedPositionwiseFeedForward input sequences. (B, L, size)</li><li><strong>Returns:</strong> NormalizedPositionwiseFeedForward output sequences. (B, L, size)</li><li><strong>Return type:</strong> x</li></ul><div class="custom-h4"><p>reset_parameters<span class="small-bracket">(val: float = 0.0, std: float = 0.02)</span></p></div><p>Reset module parameters.</p><ul><li><strong>Parameters:</strong><ul><li><strong>val</strong> – Initialization value.</li><li><strong>std</strong> – Standard deviation.</li></ul></li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function i(n,l){return a(),o("div",null,[r(" _espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward "),d])}const u=e(t,[["render",i],["__file","NormalizedPositionwiseFeedForward.html.vue"]]),p=JSON.parse(`{"path":"/guide/espnet2/asr_transducer/NormalizedPositionwiseFeedForward.html","title":"espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"guide/espnet2/asr_transducer/NormalizedPositionwiseFeedForward.md","excerpt":"<!-- _espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward -->\\n<h1>espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.decoder.modules.mega.feed_forward.NormalizedPositionwiseFeedForward<span class=\\"small-bracket\\">(size: int, hidden_size: int, normalization: ~torch.nn.modules.module.Module = &lt;class 'torch.nn.modules.normalization.LayerNorm'&gt;, activation: ~torch.nn.modules.module.Module = &lt;class 'torch.nn.modules.activation.ReLU'&gt;, dropout_rate: float = 0.0)</span></p></div>"}`);export{u as comp,p as data};

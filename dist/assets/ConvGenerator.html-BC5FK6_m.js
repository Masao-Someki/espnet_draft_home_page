import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as a,f as s,b as e,d as t,e as i,w as c,a as l,o as d}from"./app-KOUU_Wij.js";const p={},u=e("h1",{id:"espnet2-uasr-generator-conv-generator-convgenerator",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-uasr-generator-conv-generator-convgenerator"},[e("span",null,"espnet2.uasr.generator.conv_generator.ConvGenerator")])],-1),_=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.uasr.generator.conv_generator.ConvGenerator"),e("span",{class:"small-bracket"},"(input_dim: int, output_dim: int, cfg: Dict | None = None, conv_kernel: int = 3, conv_dilation: int = 1, conv_stride: int = 9, pad: int = -1, bias: str2bool = False, dropout: float = 0.0, batch_norm: str2bool = True, batch_norm_weight: float = 30.0, residual: str2bool = True)")])],-1),h=e("code",null,"AbsGenerator",-1),m=l('<p>convolutional generator for UASR.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>bn_padded_data<span class="small-bracket">(feature: Tensor, padding_mask: Tensor)</span></p></div><div class="custom-h4"><p>forward<span class="small-bracket">(feats: Tensor, text: Tensor | None, feats_padding_mask: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function v(g,f){const n=r("RouteLink");return d(),a("div",null,[s(" _espnet2.uasr.generator.conv_generator.ConvGenerator "),u,_,e("p",null,[t("Bases: "),i(n,{to:"/guide/espnet2/uasr/AbsGenerator.html#espnet2.uasr.generator.abs_generator.AbsGenerator"},{default:c(()=>[h]),_:1})]),m])}const C=o(p,[["render",v],["__file","ConvGenerator.html.vue"]]),G=JSON.parse('{"path":"/guide/espnet2/uasr/ConvGenerator.html","title":"espnet2.uasr.generator.conv_generator.ConvGenerator","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.6,"words":180},"filePathRelative":"guide/espnet2/uasr/ConvGenerator.md","excerpt":"<!-- _espnet2.uasr.generator.conv_generator.ConvGenerator -->\\n<h1>espnet2.uasr.generator.conv_generator.ConvGenerator</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.uasr.generator.conv_generator.ConvGenerator<span class=\\"small-bracket\\">(input_dim: int, output_dim: int, cfg: Dict | None = None, conv_kernel: int = 3, conv_dilation: int = 1, conv_stride: int = 9, pad: int = -1, bias: str2bool = False, dropout: float = 0.0, batch_norm: str2bool = True, batch_norm_weight: float = 30.0, residual: str2bool = True)</span></p></div>"}');export{C as comp,G as data};

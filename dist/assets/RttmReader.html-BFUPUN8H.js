import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as s,a as i}from"./app-KOUU_Wij.js";const a={},l=i(`<p>&lt;!-- _espnet2.fileio.rttm.RttmReader --&gt;</p><h1 id="espnet2-fileio-rttm-rttmreader" tabindex="-1"><a class="header-anchor" href="#espnet2-fileio-rttm-rttmreader"><span>espnet2.fileio.rttm.RttmReader</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.fileio.rttm.RttmReader<span class="small-bracket">(fname: str)</span></p></div><p>Bases: <code>Mapping</code></p><p>Reader class for ‘rttm.scp’.</p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><p>SPEAKER file1 1 0 1023 &lt;NA&gt; &lt;NA&gt; spk1 &lt;NA&gt; SPEAKER file1 2 4000 3023 &lt;NA&gt; &lt;NA&gt; spk2 &lt;NA&gt; SPEAKER file1 3 500 4023 &lt;NA&gt; &lt;NA&gt; spk1 &lt;NA&gt; END file1 &lt;NA&gt; 4023 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;</p><p>This is an extend version of standard RTTM format for espnet. The difference including:</p><ol><li>Use sample number instead of absolute time</li><li>has a END label to represent the duration of a recording</li><li>replace duration (5th field) with end time (For standard RTTM,</li></ol><blockquote><p>see <a href="https://catalog.ldc.upenn.edu/docs/LDC2004T12/RTTM-format-v13.pdf" target="_blank" rel="noopener noreferrer">https://catalog.ldc.upenn.edu/docs/LDC2004T12/RTTM-format-v13.pdf</a>)</p></blockquote><p>…</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reader </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> RttmReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;rttm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> spk_label </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> reader[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;file1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-h4"><p>keys()</p></div>`,13),n=[l];function r(p,d){return s(),t("div",null,n)}const m=e(a,[["render",r],["__file","RttmReader.html.vue"]]),c=JSON.parse('{"path":"/guide/espnet2/fileio/RttmReader.html","title":"espnet2.fileio.rttm.RttmReader","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.54,"words":162},"filePathRelative":"guide/espnet2/fileio/RttmReader.md","excerpt":"<p>&lt;!-- _espnet2.fileio.rttm.RttmReader --&gt;</p>\\n<h1>espnet2.fileio.rttm.RttmReader</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.fileio.rttm.RttmReader<span class=\\"small-bracket\\">(fname: str)</span></p></div>\\n<p>Bases: <code>Mapping</code></p>\\n<p>Reader class for ‘rttm.scp’.</p>\\n<h5>Examples</h5>"}');export{m as comp,c as data};

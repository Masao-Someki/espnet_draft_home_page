import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as a,a as n,o as s}from"./app-KOUU_Wij.js";const l={},r=n('<h1 id="espnet2-asr-transducer-rnnt-multi-blank-rnnt-multi-blank-rnntlossnumba" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-rnnt-multi-blank-rnnt-multi-blank-rnntlossnumba"><span>espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba<span class="small-bracket">(blank=0, reduction=&#39;mean&#39;, fastemit_lambda: float = 0.0, clamp: float = -1)</span></p></div><p>Bases: <code>Module</code></p><p>RNNT Loss Numba</p><ul><li><strong>Parameters:</strong><ul><li><strong>blank</strong> (<em>int</em> <em>,</em> <em>optional</em>) – blank label. Default: 0.</li><li><strong>reduction</strong> (<em>string</em> <em>,</em> <em>optional</em>) – Specifies the reduction to apply to the output: ‘none’ | ‘mean’ | ‘sum’. ‘none’: no reduction will be applied, ‘mean’: the output losses will be divided by the target lengths and then the mean over the batch is taken. Default: ‘mean’</li><li><strong>fastemit_lambda</strong> – Float scaling factor for FastEmit regularization. Refer to FastEmit: Low-latency Streaming ASR with Sequence-level Emission Regularization.</li><li><strong>clamp</strong> – Float value. When set to value &gt;= 0.0, will clamp the gradient to [-clamp, clamp].</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(acts, labels, act_lens, label_lens)</span></p></div><p>Forward RNNTLossNumba.</p><p>log_probs: Tensor of (batch x seqLength x labelLength x outputDim) : containing output from network</p><p>labels: 2 dimensional Tensor containing all the targets of the : batch with zero padded</p><p>act_lens: Tensor of size (batch) containing size of each output : sequence from the network</p><p>label_lens: Tensor of (batch) containing label length of each example</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',13);function o(i,m){return s(),e("div",null,[a(" _espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba "),r])}const p=t(l,[["render",o],["__file","RNNTLossNumba.html.vue"]]),b=JSON.parse(`{"path":"/guide/espnet2/asr/RNNTLossNumba.html","title":"espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.7,"words":211},"filePathRelative":"guide/espnet2/asr/RNNTLossNumba.md","excerpt":"<!-- _espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba -->\\n<h1>espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.transducer.rnnt_multi_blank.rnnt_multi_blank.RNNTLossNumba<span class=\\"small-bracket\\">(blank=0, reduction='mean', fastemit_lambda: float = 0.0, clamp: float = -1)</span></p></div>"}`);export{p as comp,b as data};

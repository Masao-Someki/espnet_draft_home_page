import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,c as d,f as r,b as e,d as t,e as i,w as a,a as c,o as p}from"./app-KOUU_Wij.js";const l={},h=e("h1",{id:"espnet2-spk-encoder-identity-encoder-identityencoder",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-spk-encoder-identity-encoder-identityencoder"},[e("span",null,"espnet2.spk.encoder.identity_encoder.IdentityEncoder")])],-1),u=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.spk.encoder.identity_encoder.IdentityEncoder"),e("span",{class:"small-bracket"},"(input_size: int)")])],-1),m=e("code",null,"AbsEncoder",-1),_=c('<p>Identity encoder. Does nothing, just passes frontend feature to the pooling.</p><p>Expected to be used for cases when frontend already has a good representation (e.g., SSL features).</p><ul><li><strong>Parameters:</strong><strong>input_size</strong> â€“ input feature dimension.</li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',11);function f(y,b){const n=o("RouteLink");return p(),d("div",null,[r(" _espnet2.spk.encoder.identity_encoder.IdentityEncoder "),h,u,e("p",null,[t("Bases: "),i(n,{to:"/guide/espnet2/asr/AbsEncoder.html#espnet2.asr.encoder.abs_encoder.AbsEncoder"},{default:a(()=>[m]),_:1})]),_])}const E=s(l,[["render",f],["__file","IdentityEncoder.html.vue"]]),v=JSON.parse('{"path":"/guide/espnet2/spk/IdentityEncoder.html","title":"espnet2.spk.encoder.identity_encoder.IdentityEncoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.51,"words":154},"filePathRelative":"guide/espnet2/spk/IdentityEncoder.md","excerpt":"<!-- _espnet2.spk.encoder.identity_encoder.IdentityEncoder -->\\n<h1>espnet2.spk.encoder.identity_encoder.IdentityEncoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.spk.encoder.identity_encoder.IdentityEncoder<span class=\\"small-bracket\\">(input_size: int)</span></p></div>\\n<p>Bases: <a href=\\"/guide/espnet2/asr/AbsEncoder.html#espnet2.asr.encoder.abs_encoder.AbsEncoder\\" target=\\"_blank\\"><code>AbsEncoder</code></a></p>"}');export{E as comp,v as data};

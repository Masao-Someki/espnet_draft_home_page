import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,c as n,f as r,b as s,d as h,e as l,w as p,a as e,o}from"./app-KOUU_Wij.js";const c={},k=e('<h1 id="espnet2-iterators-chunk-iter-factory-chunkiterfactory" tabindex="-1"><a class="header-anchor" href="#espnet2-iterators-chunk-iter-factory-chunkiterfactory"><span>espnet2.iterators.chunk_iter_factory.ChunkIterFactory</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.iterators.chunk_iter_factory.ChunkIterFactory<span class="small-bracket">(dataset, batch_size: int, batches: <a href="../samplers/AbsSampler.md#espnet2.samplers.abs_sampler.AbsSampler">AbsSampler</a></span> | Sequence[Sequence[Any]], chunk_length: int | str, chunk_shift_ratio: float = 0.5, num_cache_chunks: int = 1024, num_samples_per_epoch: int | None = None, seed: int = 0, shuffle: bool = False, num_workers: int = 0, collate_fn=None, pin_memory: bool = False, excluded_key_prefixes: List[str] | None = None, discard_short_samples: bool = True, default_fs: int | None = None, chunk_max_abs_length: int | None = None)</p></div>',2),d=s("code",null,"AbsIterFactory",-1),u=e(`<p>Creates chunks from a sequence</p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> batches </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [[</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;id1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">], [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;id2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> batch_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 128</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> chunk_length </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> iter_factory </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> ChunkIterFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(dataset, batches, batch_size, chunk_length)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> it </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> iter_factory.</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;">build_iter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(epoch)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ids, batch </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> it:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">     ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>The number of mini-batches are varied in each epochs and we can’t get the number in advance because IterFactory doesn’t be given to the length information.</li><li>Since the first reason, “num_iters_per_epoch” can’t be implemented for this iterator. Instead of it, “num_samples_per_epoch” is implemented.</li></ul><div class="custom-h4"><p>build_iter<span class="small-bracket">(epoch: int, shuffle: bool | None = None)</span></p></div><div class="custom-h4"><p>prepare_for_collate<span class="small-bracket">(id_list, batches)</span></p></div>`,6);function _(m,g){const i=a("RouteLink");return o(),n("div",null,[r(" _espnet2.iterators.chunk_iter_factory.ChunkIterFactory "),k,s("p",null,[h("Bases: "),l(i,{to:"/guide/espnet2/iterators/AbsIterFactory.html#espnet2.iterators.abs_iter_factory.AbsIterFactory"},{default:p(()=>[d]),_:1})]),u])}const f=t(c,[["render",_],["__file","ChunkIterFactory.html.vue"]]),B=JSON.parse('{"path":"/guide/espnet2/iterators/ChunkIterFactory.html","title":"espnet2.iterators.chunk_iter_factory.ChunkIterFactory","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"guide/espnet2/iterators/ChunkIterFactory.md","excerpt":"<!-- _espnet2.iterators.chunk_iter_factory.ChunkIterFactory -->\\n<h1>espnet2.iterators.chunk_iter_factory.ChunkIterFactory</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.iterators.chunk_iter_factory.ChunkIterFactory<span class=\\"small-bracket\\">(dataset, batch_size: int, batches: <a href=\\"../samplers/AbsSampler.md#espnet2.samplers.abs_sampler.AbsSampler\\">AbsSampler</a></span> | Sequence[Sequence[Any]], chunk_length: int | str, chunk_shift_ratio: float = 0.5, num_cache_chunks: int = 1024, num_samples_per_epoch: int | None = None, seed: int = 0, shuffle: bool = False, num_workers: int = 0, collate_fn=None, pin_memory: bool = False, excluded_key_prefixes: List[str] | None = None, discard_short_samples: bool = True, default_fs: int | None = None, chunk_max_abs_length: int | None = None)</p></div>"}');export{f as comp,B as data};

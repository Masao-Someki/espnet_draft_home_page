import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as t,a as e,o as i}from"./app-KOUU_Wij.js";const n={},l=e(`<h1 id="espnet2-train-iterable-dataset-iterableespnetdataset" tabindex="-1"><a class="header-anchor" href="#espnet2-train-iterable-dataset-iterableespnetdataset"><span>espnet2.train.iterable_dataset.IterableESPnetDataset</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.train.iterable_dataset.IterableESPnetDataset<span class="small-bracket">(path_name_type_list: Collection[Tuple[str, str, str]], preprocess: Callable[[str, Dict[str, ndarray]], Dict[str, ndarray]] | None = None, float_dtype: str = &#39;float32&#39;, int_dtype: str = &#39;long&#39;, key_file: str | None = None)</span></p></div><p>Bases: <code>IterableDataset</code></p><p>Pytorch Dataset class for ESPNet.</p><h5 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h5><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dataset </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF;"> IterableESPnetDataset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">([(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;wav.scp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;sound&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                                  (</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;token_int&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;output&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;text_int&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">                                )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> uid, data </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> dataset:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">     data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: per_utt_array, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;output&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: per_utt_array}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-h4"><p>has_name<span class="small-bracket">(name)</span></p></div><div class="custom-h4"><p>names()</p></div>`,8);function r(p,h){return i(),a("div",null,[t(" _espnet2.train.iterable_dataset.IterableESPnetDataset "),l])}const c=s(n,[["render",r],["__file","IterableESPnetDataset.html.vue"]]),o=JSON.parse(`{"path":"/guide/espnet2/train/IterableESPnetDataset.html","title":"espnet2.train.iterable_dataset.IterableESPnetDataset","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.32,"words":97},"filePathRelative":"guide/espnet2/train/IterableESPnetDataset.md","excerpt":"<!-- _espnet2.train.iterable_dataset.IterableESPnetDataset -->\\n<h1>espnet2.train.iterable_dataset.IterableESPnetDataset</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.train.iterable_dataset.IterableESPnetDataset<span class=\\"small-bracket\\">(path_name_type_list: Collection[Tuple[str, str, str]], preprocess: Callable[[str, Dict[str, ndarray]], Dict[str, ndarray]] | None = None, float_dtype: str = 'float32', int_dtype: str = 'long', key_file: str | None = None)</span></p></div>"}`);export{c as comp,o as data};

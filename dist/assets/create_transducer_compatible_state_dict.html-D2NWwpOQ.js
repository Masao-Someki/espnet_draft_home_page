import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as a,a as r,o as s}from"./app-KOUU_Wij.js";const c={},n=r('<h1 id="espnet-asr-pytorch-backend-asr-init-create-transducer-compatible-state-dict" tabindex="-1"><a class="header-anchor" href="#espnet-asr-pytorch-backend-asr-init-create-transducer-compatible-state-dict"><span>espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict</span></a></h1><div class="custom-h3"><p>espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict<span class="small-bracket">(model_state_dict, encoder_type, encoder_units)</span></p></div><p>Create a compatible transducer model state dict for transfer learning.</p><p>If RNN encoder modules from a non-Transducer model are found in the pre-trained model state dict, the corresponding modules keys are renamed for compatibility.</p><ul><li><strong>Parameters:</strong><ul><li><strong>model_state_dict</strong> (<em>Dict</em>) – Pre-trained model state dict</li><li><strong>encoder_type</strong> (<em>str</em>) – Type of pre-trained encoder.</li><li><strong>encoder_units</strong> (<em>int</em>) – Number of encoder units in pre-trained model.</li></ul></li><li><strong>Returns:</strong> Transducer compatible pre-trained model state dict.</li><li><strong>Return type:</strong> new_state_dict (Dict)</li></ul>',5);function i(d,o){return s(),t("div",null,[a(" _espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict "),n])}const p=e(c,[["render",i],["__file","create_transducer_compatible_state_dict.html.vue"]]),m=JSON.parse('{"path":"/guide/espnet/asr/create_transducer_compatible_state_dict.html","title":"espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.3,"words":91},"filePathRelative":"guide/espnet/asr/create_transducer_compatible_state_dict.md","excerpt":"<!-- _espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict -->\\n<h1>espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict</h1>\\n<div class=\\"custom-h3\\"><p>espnet.asr.pytorch_backend.asr_init.create_transducer_compatible_state_dict<span class=\\"small-bracket\\">(model_state_dict, encoder_type, encoder_units)</span></p></div>"}');export{p as comp,m as data};

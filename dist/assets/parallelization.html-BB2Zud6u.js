import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,a}from"./app-KOUU_Wij.js";const n={},t=a(`<h1 id="using-job-scheduling-system" tabindex="-1"><a class="header-anchor" href="#using-job-scheduling-system"><span>Using job scheduling system</span></a></h1><p>Our recipes support some Job scheduling systems, SGE, PBS/Torque, and Slurm, according to <a href="https://kaldi-asr.org/doc/queue.html" target="_blank" rel="noopener noreferrer">Parallelization in Kaldi</a>. By default, the job runs at local machine. If there are any Job scheduling systems in your environment, you can submit more number of Jobs with multiple machines.</p><p>Please ask the administrator to install it if you have multiple machines.</p><h2 id="select-job-scheduler" tabindex="-1"><a class="header-anchor" href="#select-job-scheduler"><span>Select Job scheduler</span></a></h2><p><code>cmd.sh</code> is a configuration file and it&#39;s used by <code>run.sh</code> to set some shell variables. These shell variables should be set as one of following perl scripts:</p><table><thead><tr><th>cmd</th><th style="text-align:center;">Backend</th><th style="text-align:center;">configuration file</th></tr></thead><tbody><tr><td>run.pl</td><td style="text-align:center;">Local machine (default)</td><td style="text-align:center;">-</td></tr><tr><td>queue.pl</td><td style="text-align:center;">Sun grid engine, or grid endine like tool</td><td style="text-align:center;">conf/queue.conf</td></tr><tr><td>slurm.pl</td><td style="text-align:center;">Slurm</td><td style="text-align:center;">conf/slurm.conf</td></tr><tr><td>pbs.pl</td><td style="text-align:center;">PBS/Torque</td><td style="text-align:center;">conf/pbs.conf</td></tr><tr><td>ssh.pl</td><td style="text-align:center;">SSH</td><td style="text-align:center;">.queue/machines</td></tr></tbody></table><h2 id="usage-of-run-pl" tabindex="-1"><a class="header-anchor" href="#usage-of-run-pl"><span>Usage of run.pl</span></a></h2><p><code>run.pl</code>, <code>queue.pl</code>, <code>slurm.pl</code>, <code>pbs.pl</code> and <code>ssh.pl</code> have a unified interface, therefore we can assign any one of them to <code>\${cmd}</code> in the shell script:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">nj</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">JOB</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">1:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">nj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">JOB.log</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> JOB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>JOB=1:\${nj}</code> indicates the parallelization, which is known as &quot;array-job&quot;, with <code>\${nj}</code> number of jobs. <code>JOB.log</code> is a destination of the stdout and stderr from jobs. The string of <code>JOB</code> will be changed to the job number if it&#39;s included in the log file name or command line arguments. i.e. The following commands are almost equivalent to the above:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 1.log &amp;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 2.log &amp;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 3.log &amp;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> 4.log &amp;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">wait</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>You also need to modify the configuration file for a specific job scheduler to change command-line options to submit jobs e.g. queue setting, resource request, etc.</p><p>The following text is an example of <code>conf/queue.conf</code>.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># Default configuration</span></span>
<span class="line"><span>command qsub -v PATH -cwd -S /bin/bash -j y -l arch=*64*</span></span>
<span class="line"><span>option mem=* -l mem_free=$0,ram_free=$0</span></span>
<span class="line"><span>option mem=0     # Do not add anything to qsub_opts</span></span>
<span class="line"><span>option num_threads=* -pe smp $0</span></span>
<span class="line"><span>option num_threads=1 # Do not add anything to qsub_opts</span></span>
<span class="line"><span>option max_jobs_run=* -tc $0</span></span>
<span class="line"><span>default gpu=0</span></span>
<span class="line"><span>option gpu=0</span></span>
<span class="line"><span>option gpu=* -l gpu=$0 -q g.q</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that the queue/partition name, <code>-q g.q</code>, is an example, so you must change it to the existing queue/partition in your cluster.</p><p>You can&#39;t use the specific options depending on each system in our scripts, e.g. you can&#39;t use <code>-q</code> option for <code>queue.pl</code> directly. Instead, you can use <code>--mem</code>, <code>--num_threads</code>, <code>--max_jobs_run</code>, and <code>--gpu</code> in this case.</p><p>Take a look at the following:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>option gpu=* -l gpu=$0 -q g.q</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This line means that the optional argument specified by the second column, <code>gpu=*</code>, will be converted to the options after it: <code>-l gpu=$0 -q g.q</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">queue.pl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --gpu</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>will be converted to</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">qsub</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> PATH</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -cwd</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> y</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> arch=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">64</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gpu=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> g.q</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can also add a new option for your system using this syntax.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>option foo=* --bar $0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,25),l=[t];function h(d,r){return e(),s("div",null,l)}const c=i(n,[["render",h],["__file","parallelization.html.vue"]]),k=JSON.parse('{"path":"/parallelization.html","title":"Using job scheduling system","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Select Job scheduler","slug":"select-job-scheduler","link":"#select-job-scheduler","children":[]},{"level":2,"title":"Usage of run.pl","slug":"usage-of-run-pl","link":"#usage-of-run-pl","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.57,"words":472},"filePathRelative":"parallelization.md","excerpt":"\\n<p>Our recipes support some Job scheduling systems, SGE, PBS/Torque,\\nand Slurm, according to <a href=\\"https://kaldi-asr.org/doc/queue.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Parallelization in Kaldi</a>.\\nBy default, the job runs at local machine. If there are any Job scheduling systems in your environment,\\nyou can submit more number of Jobs with multiple machines.</p>"}');export{c as comp,k as data};

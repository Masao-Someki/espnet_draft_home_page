import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as t,a as r,o as i}from"./app-KOUU_Wij.js";const a={},o=r('<h1 id="espnet-nets-chainer-backend-transformer-encoder-encoder" tabindex="-1"><a class="header-anchor" href="#espnet-nets-chainer-backend-transformer-encoder-encoder"><span>espnet.nets.chainer_backend.transformer.encoder.Encoder</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.chainer_backend.transformer.encoder.Encoder<span class="small-bracket">(idim, attention_dim=256, attention_heads=4, linear_units=2048, num_blocks=6, dropout_rate=0.1, positional_dropout_rate=0.1, attention_dropout_rate=0.0, input_layer=&#39;conv2d&#39;, pos_enc_class=&lt;class &#39;espnet.nets.chainer_backend.transformer.embedding.PositionalEncoding&#39;&gt;, initialW=None, initial_bias=None)</span></p></div><p>Bases: <code>Chain</code></p><p>Encoder.</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_type</strong> (<em>str</em>) – Sampling type. input_type must be conv2d or ‘linear’ currently.</li><li><strong>idim</strong> (<em>int</em>) – Dimension of inputs.</li><li><strong>n_layers</strong> (<em>int</em>) – Number of encoder layers.</li><li><strong>n_units</strong> (<em>int</em>) – Number of input/output dimension of a FeedForward layer.</li><li><strong>d_units</strong> (<em>int</em>) – Number of units of hidden layer in a FeedForward layer.</li><li><strong>h</strong> (<em>int</em>) – Number of attention heads.</li><li><strong>dropout</strong> (<em>float</em>) – Dropout rate</li></ul></li></ul><p>Initialize Encoder.</p><ul><li><strong>Parameters:</strong><ul><li><strong>idim</strong> (<em>int</em>) – Input dimension.</li><li><strong>args</strong> (<em>Namespace</em>) – Training config.</li><li><strong>initialW</strong> (<em>int</em> <em>,</em> <em>optional</em>) – Initializer to initialize the weight.</li><li><strong>initial_bias</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Initializer to initialize the bias.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(e, ilens)</span></p></div><p>Compute Encoder layer.</p><ul><li><strong>Parameters:</strong><ul><li><strong>e</strong> (<em>chainer.Variable</em>) – Batch of padded character. (B, Tmax)</li><li><strong>ilens</strong> (<em>chainer.Variable</em>) – Batch of length of each input batch. (B,)</li></ul></li><li><strong>Returns:</strong> Computed variable of encoder. numpy.array: Mask. chainer.Variable: Batch of lengths of each encoder outputs.</li><li><strong>Return type:</strong> chainer.Variable</li></ul>',10);function s(l,c){return i(),n("div",null,[t(" _espnet.nets.chainer_backend.transformer.encoder.Encoder "),o])}const p=e(a,[["render",s],["__file","Encoder.html.vue"]]),u=JSON.parse(`{"path":"/guide/espnet/nets/Encoder.html","title":"espnet.nets.chainer_backend.transformer.encoder.Encoder","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"guide/espnet/nets/Encoder.md","excerpt":"<!-- _espnet.nets.chainer_backend.transformer.encoder.Encoder -->\\n<h1>espnet.nets.chainer_backend.transformer.encoder.Encoder</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.chainer_backend.transformer.encoder.Encoder<span class=\\"small-bracket\\">(idim, attention_dim=256, attention_heads=4, linear_units=2048, num_blocks=6, dropout_rate=0.1, positional_dropout_rate=0.1, attention_dropout_rate=0.0, input_layer='conv2d', pos_enc_class=&lt;class 'espnet.nets.chainer_backend.transformer.embedding.PositionalEncoding'&gt;, initialW=None, initial_bias=None)</span></p></div>"}`);export{p as comp,u as data};

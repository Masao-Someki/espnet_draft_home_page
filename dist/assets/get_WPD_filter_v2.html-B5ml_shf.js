import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as r,a as o,o as s}from"./app-KOUU_Wij.js";const n={},l=o('<h1 id="espnet2-enh-layers-beamformer-get-wpd-filter-v2" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-beamformer-get-wpd-filter-v2"><span>espnet2.enh.layers.beamformer.get_WPD_filter_v2</span></a></h1><div class="custom-h3"><p>espnet2.enh.layers.beamformer.get_WPD_filter_v2<span class="small-bracket">(Phi: Tensor | ComplexTensor, Rf: Tensor | ComplexTensor, reference_vector: Tensor, diagonal_loading: bool = True, diag_eps: float = 1e-07, eps: float = 1e-08)</span></p></div><p>Return the WPD vector (v2).</p><blockquote><p>This implementation is more efficient than get_WPD_filter as : it skips unnecessary computation with zeros.</p></blockquote><ul><li><strong>Parameters:</strong><ul><li><strong>Phi</strong> (<em>torch.complex64/ComplexTensor</em>) – (B, F, C, C) is speech PSD.</li><li><strong>Rf</strong> (<em>torch.complex64/ComplexTensor</em>) – (B, F, (btaps+1) * C, (btaps+1) * C) is the power normalized spatio-temporal covariance matrix.</li><li><strong>reference_vector</strong> (<em>torch.Tensor</em>) – (B, C) is the reference_vector.</li><li><strong>diagonal_loading</strong> (<em>bool</em>) – Whether to add a tiny term to the diagonal of psd_n</li><li><strong>diag_eps</strong> (<em>float</em>) –</li><li><strong>eps</strong> (<em>float</em>) –</li></ul></li><li><strong>Returns:</strong> (B, F, (btaps+1) * C)</li><li><strong>Return type:</strong> filter_matrix (torch.complex64/ComplexTensor)</li></ul>',5);function a(i,m){return s(),t("div",null,[r(" _espnet2.enh.layers.beamformer.get_WPD_filter_v2 "),l])}const c=e(n,[["render",a],["__file","get_WPD_filter_v2.html.vue"]]),f=JSON.parse('{"path":"/guide/espnet2/enh/get_WPD_filter_v2.html","title":"espnet2.enh.layers.beamformer.get_WPD_filter_v2","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.39,"words":116},"filePathRelative":"guide/espnet2/enh/get_WPD_filter_v2.md","excerpt":"<!-- _espnet2.enh.layers.beamformer.get_WPD_filter_v2 -->\\n<h1>espnet2.enh.layers.beamformer.get_WPD_filter_v2</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.enh.layers.beamformer.get_WPD_filter_v2<span class=\\"small-bracket\\">(Phi: Tensor | ComplexTensor, Rf: Tensor | ComplexTensor, reference_vector: Tensor, diagonal_loading: bool = True, diag_eps: float = 1e-07, eps: float = 1e-08)</span></p></div>"}');export{c as comp,f as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as t,a as n,o}from"./app-KOUU_Wij.js";const l={},r=n('<h1 id="espnet2-gan-tts-hifigan-loss-melspectrogramloss" tabindex="-1"><a class="header-anchor" href="#espnet2-gan-tts-hifigan-loss-melspectrogramloss"><span>espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss<span class="small-bracket">(fs: int = 22050, n_fft: int = 1024, hop_length: int = 256, win_length: int | None = None, window: str = &#39;hann&#39;, n_mels: int = 80, fmin: int | None = 0, fmax: int | None = None, center: bool = True, normalized: bool = False, onesided: bool = True, log_base: float | None = 10.0)</span></p></div><p>Bases: <code>Module</code></p><p>Mel-spectrogram loss.</p><p>Initialize Mel-spectrogram loss.</p><ul><li><strong>Parameters:</strong><ul><li><strong>fs</strong> (<em>int</em>) – Sampling rate.</li><li><strong>n_fft</strong> (<em>int</em>) – FFT points.</li><li><strong>hop_length</strong> (<em>int</em>) – Hop length.</li><li><strong>win_length</strong> (<em>Optional</em> *[*<em>int</em> <em>]</em>) – Window length.</li><li><strong>window</strong> (<em>str</em>) – Window type.</li><li><strong>n_mels</strong> (<em>int</em>) – Number of Mel basis.</li><li><strong>fmin</strong> (<em>Optional</em> *[*<em>int</em> <em>]</em>) – Minimum frequency for Mel.</li><li><strong>fmax</strong> (<em>Optional</em> *[*<em>int</em> <em>]</em>) – Maximum frequency for Mel.</li><li><strong>center</strong> (<em>bool</em>) – Whether to use center window.</li><li><strong>normalized</strong> (<em>bool</em>) – Whether to use normalized one.</li><li><strong>onesided</strong> (<em>bool</em>) – Whether to use oneseded one.</li><li><strong>log_base</strong> (<em>Optional</em> *[*<em>float</em> <em>]</em>) – Log base value.</li></ul></li></ul><div class="custom-h4"><p>forward<span class="small-bracket">(y_hat: Tensor, y: Tensor, spec: Tensor | None = None)</span></p></div><p>Calculate Mel-spectrogram loss.</p><ul><li><strong>Parameters:</strong><ul><li><strong>y_hat</strong> (<em>Tensor</em>) – Generated waveform tensor (B, 1, T).</li><li><strong>y</strong> (<em>Tensor</em>) – Groundtruth waveform tensor (B, 1, T).</li><li><strong>spec</strong> (<em>Optional</em> *[*<em>Tensor</em> <em>]</em>) – Groundtruth linear amplitude spectrum tensor (B, T, n_fft // 2 + 1). if provided, use it instead of groundtruth waveform.</li></ul></li><li><strong>Returns:</strong> Mel-spectrogram loss value.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function i(a,m){return o(),s("div",null,[t(" _espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss "),r])}const c=e(l,[["render",i],["__file","MelSpectrogramLoss.html.vue"]]),d=JSON.parse(`{"path":"/guide/espnet2/gan_tts/MelSpectrogramLoss.html","title":"espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.74,"words":222},"filePathRelative":"guide/espnet2/gan_tts/MelSpectrogramLoss.md","excerpt":"<!-- _espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss -->\\n<h1>espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.gan_tts.hifigan.loss.MelSpectrogramLoss<span class=\\"small-bracket\\">(fs: int = 22050, n_fft: int = 1024, hop_length: int = 256, win_length: int | None = None, window: str = 'hann', n_mels: int = 80, fmin: int | None = 0, fmax: int | None = None, center: bool = True, normalized: bool = False, onesided: bool = True, log_base: float | None = 10.0)</span></p></div>"}`);export{c as comp,d as data};

import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as o,b as e,d as t,e as a,w as l,a as d,o as p}from"./app-KOUU_Wij.js";const i={},c=e("p",null,"<!-- _espnet2.asr.frontend.s3prl.S3prlFrontend -->",-1),u=e("h1",{id:"espnet2-asr-frontend-s3prl-s3prlfrontend",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#espnet2-asr-frontend-s3prl-s3prlfrontend"},[e("span",null,"espnet2.asr.frontend.s3prl.S3prlFrontend")])],-1),_=e("div",{class:"custom-h3"},[e("p",null,[e("em",null,"class"),t(" espnet2.asr.frontend.s3prl.S3prlFrontend"),e("span",{class:"small-bracket"},"(fs: int | str = 16000, frontend_conf: dict | None = {'badim': 320, 'bdropout_rate': 0.0, 'blayers': 3, 'bnmask': 2, 'bprojs': 320, 'btype': 'blstmp', 'bunits': 300, 'delay': 3, 'ref_channel': -1, 'taps': 5, 'use_beamformer': False, 'use_dnn_mask_for_wpe': True, 'use_wpe': False, 'wdropout_rate': 0.0, 'wlayers': 3, 'wprojs': 320, 'wtype': 'blstmp', 'wunits': 300}, download_dir: str | None = None, multilayer_feature: bool = False, layer: int = -1)")])],-1),m=e("code",null,"AbsFrontend",-1),h=d('<p>Speech Pretrained Representation frontend structure for ASR.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input: Tensor, input_lengths: Tensor)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>output_size()</p></div><div class="custom-h4"><p>reload_pretrained_parameters()</p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function f(b,w){const n=r("RouteLink");return p(),o("div",null,[c,u,_,e("p",null,[t("Bases: "),a(n,{to:"/guide/espnet2/asr/AbsFrontend.html#espnet2.asr.frontend.abs_frontend.AbsFrontend"},{default:l(()=>[m]),_:1})]),h])}const S=s(i,[["render",f],["__file","S3prlFrontend.html.vue"]]),v=JSON.parse(`{"path":"/guide/espnet2/asr/S3prlFrontend.html","title":"espnet2.asr.frontend.s3prl.S3prlFrontend","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.64,"words":191},"filePathRelative":"guide/espnet2/asr/S3prlFrontend.md","excerpt":"<p>&lt;!-- _espnet2.asr.frontend.s3prl.S3prlFrontend --&gt;</p>\\n<h1>espnet2.asr.frontend.s3prl.S3prlFrontend</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr.frontend.s3prl.S3prlFrontend<span class=\\"small-bracket\\">(fs: int | str = 16000, frontend_conf: dict | None = {'badim': 320, 'bdropout_rate': 0.0, 'blayers': 3, 'bnmask': 2, 'bprojs': 320, 'btype': 'blstmp', 'bunits': 300, 'delay': 3, 'ref_channel': -1, 'taps': 5, 'use_beamformer': False, 'use_dnn_mask_for_wpe': True, 'use_wpe': False, 'wdropout_rate': 0.0, 'wlayers': 3, 'wprojs': 320, 'wtype': 'blstmp', 'wunits': 300}, download_dir: str | None = None, multilayer_feature: bool = False, layer: int = -1)</span></p></div>"}`);export{S as comp,v as data};

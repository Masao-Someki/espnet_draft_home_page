import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as a,a as s,o as t}from"./app-KOUU_Wij.js";const o={},l=s('<h1 id="espnet-nets-pytorch-backend-wavenet-causalconv1d" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-wavenet-causalconv1d"><span>espnet.nets.pytorch_backend.wavenet.CausalConv1d</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.wavenet.CausalConv1d<span class="small-bracket">(in_channels, out_channels, kernel_size, dilation=1, bias=True)</span></p></div><p>Bases: <code>Module</code></p><p>1D dilated causal convolution.</p><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>Tensor</em>) â€“ Input tensor with the shape (B, in_channels, T).</li><li><strong>Returns:</strong> Tensor with the shape (B, out_channels, T)</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',9);function c(r,d){return t(),n("div",null,[a(" _espnet.nets.pytorch_backend.wavenet.CausalConv1d "),l])}const u=e(o,[["render",c],["__file","CausalConv1d.html.vue"]]),h=JSON.parse('{"path":"/guide/espnet/nets/CausalConv1d.html","title":"espnet.nets.pytorch_backend.wavenet.CausalConv1d","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.31,"words":92},"filePathRelative":"guide/espnet/nets/CausalConv1d.md","excerpt":"<!-- _espnet.nets.pytorch_backend.wavenet.CausalConv1d -->\\n<h1>espnet.nets.pytorch_backend.wavenet.CausalConv1d</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.wavenet.CausalConv1d<span class=\\"small-bracket\\">(in_channels, out_channels, kernel_size, dilation=1, bias=True)</span></p></div>"}');export{u as comp,h as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as s,a as l}from"./app-KOUU_Wij.js";const n={},o=l('<p>&lt;!-- _espnet2.layers.log_mel.LogMel --&gt;</p><h1 id="espnet2-layers-log-mel-logmel" tabindex="-1"><a class="header-anchor" href="#espnet2-layers-log-mel-logmel"><span>espnet2.layers.log_mel.LogMel</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.layers.log_mel.LogMel<span class="small-bracket">(fs: int = 16000, n_fft: int = 512, n_mels: int = 80, fmin: float | None = None, fmax: float | None = None, htk: bool = False, log_base: float | None = None)</span></p></div><p>Bases: <code>Module</code></p><p>Convert STFT to fbank feats</p><p>The arguments is same as librosa.filters.mel</p><ul><li><strong>Parameters:</strong><ul><li><strong>fs</strong> – number &gt; 0 [scalar] sampling rate of the incoming signal</li><li><strong>n_fft</strong> – int &gt; 0 [scalar] number of FFT components</li><li><strong>n_mels</strong> – int &gt; 0 [scalar] number of Mel bands to generate</li><li><strong>fmin</strong> – float &gt;= 0 [scalar] lowest frequency (in Hz)</li><li><strong>fmax</strong> – float &gt;= 0 [scalar] highest frequency (in Hz). If None, use fmax = fs / 2.0</li><li><strong>htk</strong> – use HTK formula instead of Slaney</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>extra_repr()</p></div><p>Set the extra representation of the module</p><p>To print customized extra information, you should re-implement this method in your own modules. Both single-line and multi-line strings are acceptable.</p><div class="custom-h4"><p>forward<span class="small-bracket">(feat: Tensor, ilens: Tensor | None = None)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>training <em>: bool</em></p></div>',17),a=[o];function r(i,p){return s(),t("div",null,a)}const d=e(n,[["render",r],["__file","LogMel.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/layers/LogMel.html","title":"espnet2.layers.log_mel.LogMel","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.83,"words":249},"filePathRelative":"guide/espnet2/layers/LogMel.md","excerpt":"<p>&lt;!-- _espnet2.layers.log_mel.LogMel --&gt;</p>\\n<h1>espnet2.layers.log_mel.LogMel</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.layers.log_mel.LogMel<span class=\\"small-bracket\\">(fs: int = 16000, n_fft: int = 512, n_mels: int = 80, fmin: float | None = None, fmax: float | None = None, htk: bool = False, log_base: float | None = None)</span></p></div>"}');export{d as comp,g as data};

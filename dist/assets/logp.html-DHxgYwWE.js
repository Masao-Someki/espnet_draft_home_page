import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as n,a as s,o as r}from"./app-KOUU_Wij.js";const l={},a=s('<h1 id="espnet2-asr-transducer-rnnt-multi-blank-utils-cuda-utils-gpu-rnnt-kernel-logp" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-rnnt-multi-blank-utils-cuda-utils-gpu-rnnt-kernel-logp"><span>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp</span></a></h1><div class="custom-h3"><p>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp<span class="small-bracket">(denom: Tensor, acts: Tensor, maxT: int, maxU: int, alphabet_size: int, mb: int, t: int, u: int, v: int)</span></p></div><p>Compute the sum of log probability from the activation tensor</p><p>and its denominator.</p><ul><li><strong>Parameters:</strong><ul><li><strong>denom</strong> – Tensor of shape [B, T, U] flattened. Represents the denominator of the logprobs activation tensor across entire vocabulary.</li><li><strong>acts</strong> – Tensor of shape [B, T, U, V+1] flattened. Represents the logprobs activation tensor.</li><li><strong>maxT</strong> – The maximum possible acoustic sequence length. Represents T in the logprobs tensor.</li><li><strong>maxU</strong> – The maximum possible target sequence length. Represents U in the logprobs tensor.</li><li><strong>alphabet_size</strong> – The vocabulary dimension V+1 (inclusive of RNNT blank).</li><li><strong>mb</strong> – Batch indexer.</li><li><strong>t</strong> – Acoustic sequence timestep indexer.</li><li><strong>u</strong> – Target sequence timestep indexer.</li><li><strong>v</strong> – Vocabulary token indexer.</li></ul></li><li><strong>Returns:</strong> The sum of logprobs[mb, t, u, v] + denom[mb, t, u]</li></ul>',5);function i(o,u){return r(),e("div",null,[n(" _espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp "),a])}const m=t(l,[["render",i],["__file","logp.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet2/asr/logp.html","title":"espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.49,"words":148},"filePathRelative":"guide/espnet2/asr/logp.md","excerpt":"<!-- _espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp -->\\n<h1>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.asr.transducer.rnnt_multi_blank.utils.cuda_utils.gpu_rnnt_kernel.logp<span class=\\"small-bracket\\">(denom: Tensor, acts: Tensor, maxT: int, maxU: int, alphabet_size: int, mb: int, t: int, u: int, v: int)</span></p></div>"}');export{m as comp,g as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as e}from"./app-KOUU_Wij.js";const i={},l=e(`<p>&lt;!-- _mt_trans.py --&gt;</p><h1 id="mt-trans-py" tabindex="-1"><a class="header-anchor" href="#mt-trans-py"><span>mt_trans.py</span></a></h1><p>Translate text from speech using a speech translation model on one CPU or GPU</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>usage: mt_trans.py [-h] [--config CONFIG] [--config2 CONFIG2]</span></span>
<span class="line"><span>                   [--config3 CONFIG3] [--ngpu NGPU]</span></span>
<span class="line"><span>                   [--dtype {float16,float32,float64}]</span></span>
<span class="line"><span>                   [--backend {chainer,pytorch}]</span></span>
<span class="line"><span>                   [--debugmode DEBUGMODE] [--seed SEED]</span></span>
<span class="line"><span>                   [--verbose VERBOSE] [--batchsize BATCHSIZE]</span></span>
<span class="line"><span>                   [--preprocess-conf PREPROCESS_CONF]</span></span>
<span class="line"><span>                   [--api {v1,v2}] [--trans-json TRANS_JSON]</span></span>
<span class="line"><span>                   --result-label RESULT_LABEL --model MODEL</span></span>
<span class="line"><span>                   [--model-conf MODEL_CONF] [--nbest NBEST]</span></span>
<span class="line"><span>                   [--beam-size BEAM_SIZE] [--penalty PENALTY]</span></span>
<span class="line"><span>                   [--maxlenratio MAXLENRATIO]</span></span>
<span class="line"><span>                   [--minlenratio MINLENRATIO]</span></span>
<span class="line"><span>                   [--tgt-lang TGT_LANG]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="named-arguments" tabindex="-1"><a class="header-anchor" href="#named-arguments"><span>Named Arguments</span></a></h2>`,5),p=[l];function t(r,d){return a(),s("div",null,p)}const o=n(i,[["render",t],["__file","mt_trans.html.vue"]]),v=JSON.parse('{"path":"/tools/espnet_bin/mt_trans.html","title":"mt_trans.py","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Named Arguments","slug":"named-arguments","link":"#named-arguments","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.26,"words":78},"filePathRelative":"tools/espnet_bin/mt_trans.md","excerpt":"<p>&lt;!-- _mt_trans.py --&gt;</p>\\n<h1>mt_trans.py</h1>\\n<p>Translate text from speech using a speech translation model on one CPU or GPU</p>\\n<div class=\\"language-text line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"text\\" data-title=\\"text\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>usage: mt_trans.py [-h] [--config CONFIG] [--config2 CONFIG2]</span></span>\\n<span class=\\"line\\"><span>                   [--config3 CONFIG3] [--ngpu NGPU]</span></span>\\n<span class=\\"line\\"><span>                   [--dtype {float16,float32,float64}]</span></span>\\n<span class=\\"line\\"><span>                   [--backend {chainer,pytorch}]</span></span>\\n<span class=\\"line\\"><span>                   [--debugmode DEBUGMODE] [--seed SEED]</span></span>\\n<span class=\\"line\\"><span>                   [--verbose VERBOSE] [--batchsize BATCHSIZE]</span></span>\\n<span class=\\"line\\"><span>                   [--preprocess-conf PREPROCESS_CONF]</span></span>\\n<span class=\\"line\\"><span>                   [--api {v1,v2}] [--trans-json TRANS_JSON]</span></span>\\n<span class=\\"line\\"><span>                   --result-label RESULT_LABEL --model MODEL</span></span>\\n<span class=\\"line\\"><span>                   [--model-conf MODEL_CONF] [--nbest NBEST]</span></span>\\n<span class=\\"line\\"><span>                   [--beam-size BEAM_SIZE] [--penalty PENALTY]</span></span>\\n<span class=\\"line\\"><span>                   [--maxlenratio MAXLENRATIO]</span></span>\\n<span class=\\"line\\"><span>                   [--minlenratio MINLENRATIO]</span></span>\\n<span class=\\"line\\"><span>                   [--tgt-lang TGT_LANG]</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{o as comp,v as data};

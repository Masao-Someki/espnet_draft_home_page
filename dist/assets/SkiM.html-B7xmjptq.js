import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as t,a as i}from"./app-KOUU_Wij.js";const n={},o=i('<p>&lt;!-- _espnet2.enh.layers.skim.SkiM --&gt;</p><h1 id="espnet2-enh-layers-skim-skim" tabindex="-1"><a class="header-anchor" href="#espnet2-enh-layers-skim-skim"><span>espnet2.enh.layers.skim.SkiM</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.enh.layers.skim.SkiM<span class="small-bracket">(input_size, hidden_size, output_size, dropout=0.0, num_blocks=2, segment_size=20, bidirectional=True, mem_type=&#39;hc&#39;, norm_type=&#39;gLN&#39;, seg_overlap=False)</span></p></div><p>Bases: <code>Module</code></p><p>Skipping Memory Net</p><ul><li><strong>Parameters:</strong><ul><li><strong>input_size</strong> – int, dimension of the input feature. Input shape shoud be (batch, length, input_size)</li><li><strong>hidden_size</strong> – int, dimension of the hidden state.</li><li><strong>output_size</strong> – int, dimension of the output size.</li><li><strong>dropout</strong> – float, dropout ratio. Default is 0.</li><li><strong>num_blocks</strong> – number of basic SkiM blocks</li><li><strong>segment_size</strong> – segmentation size for splitting long features</li><li><strong>bidirectional</strong> – bool, whether the RNN layers are bidirectional.</li><li><strong>mem_type</strong> – ‘hc’, ‘h’, ‘c’, ‘id’ or None. It controls whether the hidden (or cell) state of SegLSTM will be processed by MemLSTM. In ‘id’ mode, both the hidden and cell states will be identically returned. When mem_type is None, the MemLSTM will be removed.</li><li><strong>norm_type</strong> – gLN, cLN. cLN is for causal implementation.</li><li><strong>seg_overlap</strong> – Bool, whether the segmentation will reserve 50% overlap for adjacent segments.Default is False.</li></ul></li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(input)</span></p></div><p>Defines the computation performed at every call.</p><p>Should be overridden by all subclasses.</p><h5 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>NOTE</span></a></h5><p>Although the recipe for forward pass needs to be defined within this function, one should call the <code>Module</code> instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them.</p><div class="custom-h4"><p>forward_stream<span class="small-bracket">(input_frame, states)</span></p></div><div class="custom-h4"><p>training <em>: bool</em></p></div>',14),a=[o];function l(r,p){return t(),s("div",null,a)}const c=e(n,[["render",l],["__file","SkiM.html.vue"]]),m=JSON.parse(`{"path":"/guide/espnet2/enh/SkiM.html","title":"espnet2.enh.layers.skim.SkiM","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.89,"words":268},"filePathRelative":"guide/espnet2/enh/SkiM.md","excerpt":"<p>&lt;!-- _espnet2.enh.layers.skim.SkiM --&gt;</p>\\n<h1>espnet2.enh.layers.skim.SkiM</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.enh.layers.skim.SkiM<span class=\\"small-bracket\\">(input_size, hidden_size, output_size, dropout=0.0, num_blocks=2, segment_size=20, bidirectional=True, mem_type='hc', norm_type='gLN', seg_overlap=False)</span></p></div>"}`);export{c as comp,m as data};

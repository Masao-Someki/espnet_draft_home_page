import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as e,a,o as t}from"./app-KOUU_Wij.js";const i={},r=a('<h1 id="espnet-nets-chainer-backend-transformer-subsampling-conv2dsubsampling" tabindex="-1"><a class="header-anchor" href="#espnet-nets-chainer-backend-transformer-subsampling-conv2dsubsampling"><span>espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling<span class="small-bracket">(channels, idim, dims, dropout=0.1, initialW=None, initial_bias=None)</span></p></div><p>Bases: <code>Chain</code></p><p>Convolutional 2D subsampling (to 1/4 length).</p><ul><li><strong>Parameters:</strong><ul><li><strong>idim</strong> (<em>int</em>) – input dim</li><li><strong>odim</strong> (<em>int</em>) – output dim</li><li><strong>dropout_rate</strong> (<em>flaot</em>) – dropout rate</li></ul></li></ul><p>Initialize Conv2dSubsampling.</p><div class="custom-h4"><p>forward<span class="small-bracket">(xs, ilens)</span></p></div><p>Subsample x.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>chainer.Variable</em>) – input tensor</li><li><strong>Returns:</strong> subsampled x and mask</li></ul>',9);function l(o,m){return t(),s("div",null,[e(" _espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling "),r])}const c=n(i,[["render",l],["__file","Conv2dSubsampling.html.vue"]]),u=JSON.parse('{"path":"/guide/espnet/nets/Conv2dSubsampling.html","title":"espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.26,"words":78},"filePathRelative":"guide/espnet/nets/Conv2dSubsampling.md","excerpt":"<!-- _espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling -->\\n<h1>espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.chainer_backend.transformer.subsampling.Conv2dSubsampling<span class=\\"small-bracket\\">(channels, idim, dims, dropout=0.1, initialW=None, initial_bias=None)</span></p></div>"}');export{c as comp,u as data};

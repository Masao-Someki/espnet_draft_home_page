import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as n,a as o,o as r}from"./app-KOUU_Wij.js";const t={},i=o('<h1 id="espnet2-asr-transducer-frontend-online-audio-processor-onlineaudioprocessor" tabindex="-1"><a class="header-anchor" href="#espnet2-asr-transducer-frontend-online-audio-processor-onlineaudioprocessor"><span>espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor</span></a></h1><div class="custom-h3"><p><em>class</em> espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor<span class="small-bracket">(feature_extractor: Module, normalization_module: Module, decoding_window: int, encoder_sub_factor: int, frontend_conf: Dict, device: device, audio_sampling_rate: int = 16000)</span></p></div><p>Bases: <code>object</code></p><p>OnlineProcessor module definition.</p><ul><li><strong>Parameters:</strong><ul><li><strong>feature_extractor</strong> – Feature extractor module.</li><li><strong>normalization_module</strong> – Normalization module.</li><li><strong>decoding_window</strong> – Size of the decoding window (in ms).</li><li><strong>encoder_sub_factor</strong> – Encoder subsampling factor.</li><li><strong>frontend_conf</strong> – Frontend configuration.</li><li><strong>device</strong> – Device to pin module tensors on.</li><li><strong>audio_sampling_rate</strong> – Input sampling rate.</li></ul></li></ul><p>Construct an OnlineAudioProcessor.</p><div class="custom-h4"><p>compute_features<span class="small-bracket">(samples: Tensor, is_final: bool)</span></p></div><p>Compute features from input samples.</p><ul><li><strong>Parameters:</strong><ul><li><strong>samples</strong> – Speech data. (S)</li><li><strong>is_final</strong> – Whether speech corresponds to the final chunk of data.</li></ul></li><li><strong>Returns:</strong> Features sequence. (1, chunk_sz_bs, D_feats) feats_length: Features length sequence. (1,)</li><li><strong>Return type:</strong> feats</li></ul><div class="custom-h4"><p>get_current_feats<span class="small-bracket">(feats: Tensor, feats_length: Tensor, is_final: bool)</span></p></div><p>Get features for current decoding window.</p><ul><li><strong>Parameters:</strong><ul><li><strong>feats</strong> – Computed features sequence. (1, F, D_feats)</li><li><strong>feats_length</strong> – Computed features sequence length. (1,)</li><li><strong>is_final</strong> – Whether feats corresponds to the final chunk of data.</li></ul></li><li><strong>Returns:</strong> Decoding window features sequence. (1, chunk_sz_bs, D_feats) feats_length: Decoding window features length sequence. (1,)</li><li><strong>Return type:</strong> feats</li></ul><div class="custom-h4"><p>get_current_samples<span class="small-bracket">(samples: Tensor, is_final: bool)</span></p></div><p>Get samples for feature computation.</p><ul><li><strong>Parameters:</strong><ul><li><strong>samples</strong> – Speech data. (S)</li><li><strong>is_final</strong> – Whether speech corresponds to the final chunk of data.</li></ul></li><li><strong>Returns:</strong> New speech data. (1, decoding_samples)</li><li><strong>Return type:</strong> samples</li></ul><div class="custom-h4"><p>reset_cache()</p></div><p>Reset cache parameters.</p><ul><li><strong>Parameters:</strong><strong>None</strong> –</li><li><strong>Returns:</strong> None</li></ul>',18);function a(l,c){return r(),s("div",null,[n(" _espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor "),i])}const p=e(t,[["render",a],["__file","OnlineAudioProcessor.html.vue"]]),_=JSON.parse('{"path":"/guide/espnet2/asr_transducer/OnlineAudioProcessor.html","title":"espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"guide/espnet2/asr_transducer/OnlineAudioProcessor.md","excerpt":"<!-- _espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor -->\\n<h1>espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet2.asr_transducer.frontend.online_audio_processor.OnlineAudioProcessor<span class=\\"small-bracket\\">(feature_extractor: Module, normalization_module: Module, decoding_window: int, encoder_sub_factor: int, frontend_conf: Dict, device: device, audio_sampling_rate: int = 16000)</span></p></div>"}');export{p as comp,_ as data};

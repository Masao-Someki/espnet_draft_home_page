import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,a as l,o as n}from"./app-KOUU_Wij.js";const s={},c=l('<h1 id="espnet2-main-funcs-calculate-all-attentions-calculate-all-attentions" tabindex="-1"><a class="header-anchor" href="#espnet2-main-funcs-calculate-all-attentions-calculate-all-attentions"><span>espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions</span></a></h1><div class="custom-h3"><p>espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions<span class="small-bracket">(model: <a href="../train/AbsESPnetModel.md#espnet2.train.abs_espnet_model.AbsESPnetModel">AbsESPnetModel</a></span>, batch: Dict[str, Tensor])</p></div><p>Derive the outputs from the all attention layers</p><ul><li><strong>Parameters:</strong><ul><li><strong>model</strong> –</li><li><strong>batch</strong> – same as forward</li></ul></li><li><strong>Returns:</strong> A dict of a list of tensor. key_names x batch x (D1, D2, …)</li><li><strong>Return type:</strong> return_dict</li></ul>',4);function i(o,_){return n(),a("div",null,[e(" _espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions "),c])}const m=t(s,[["render",i],["__file","calculate_all_attentions.html.vue"]]),d=JSON.parse('{"path":"/guide/espnet2/main_funcs/calculate_all_attentions.html","title":"espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.19,"words":57},"filePathRelative":"guide/espnet2/main_funcs/calculate_all_attentions.md","excerpt":"<!-- _espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions -->\\n<h1>espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions</h1>\\n<div class=\\"custom-h3\\"><p>espnet2.main_funcs.calculate_all_attentions.calculate_all_attentions<span class=\\"small-bracket\\">(model: <a href=\\"../train/AbsESPnetModel.md#espnet2.train.abs_espnet_model.AbsESPnetModel\\">AbsESPnetModel</a></span>, batch: Dict[str, Tensor])</p></div>"}');export{m as comp,d as data};

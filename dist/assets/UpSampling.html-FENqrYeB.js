import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as n,a,o as s}from"./app-KOUU_Wij.js";const p={},r=a('<h1 id="espnet-nets-pytorch-backend-wavenet-upsampling" tabindex="-1"><a class="header-anchor" href="#espnet-nets-pytorch-backend-wavenet-upsampling"><span>espnet.nets.pytorch_backend.wavenet.UpSampling</span></a></h1><div class="custom-h3"><p><em>class</em> espnet.nets.pytorch_backend.wavenet.UpSampling<span class="small-bracket">(upsampling_factor, bias=True)</span></p></div><p>Bases: <code>Module</code></p><p>Upsampling layer with deconvolution.</p><ul><li><strong>Parameters:</strong><strong>upsampling_factor</strong> (<em>int</em>) – Upsampling factor.</li></ul><p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p><div class="custom-h4"><p>forward<span class="small-bracket">(x)</span></p></div><p>Calculate forward propagation.</p><ul><li><strong>Parameters:</strong><strong>x</strong> (<em>Tensor</em>) – Input tensor with the shape (B, C, T)</li><li><strong>Returns:</strong> Tensor with the shape (B, C, T’) where T’ = T * upsampling_factor.</li><li><strong>Return type:</strong> Tensor</li></ul><div class="custom-h4"><p>training <em>: bool</em></p></div>',10);function o(l,i){return s(),t("div",null,[n(" _espnet.nets.pytorch_backend.wavenet.UpSampling "),r])}const d=e(p,[["render",o],["__file","UpSampling.html.vue"]]),g=JSON.parse('{"path":"/guide/espnet/nets/UpSampling.html","title":"espnet.nets.pytorch_backend.wavenet.UpSampling","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"guide/espnet/nets/UpSampling.md","excerpt":"<!-- _espnet.nets.pytorch_backend.wavenet.UpSampling -->\\n<h1>espnet.nets.pytorch_backend.wavenet.UpSampling</h1>\\n<div class=\\"custom-h3\\"><p><em>class</em> espnet.nets.pytorch_backend.wavenet.UpSampling<span class=\\"small-bracket\\">(upsampling_factor, bias=True)</span></p></div>\\n<p>Bases: <code>Module</code></p>"}');export{d as comp,g as data};
